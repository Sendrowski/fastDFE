Search.setIndex({"docnames": ["index", "introduction", "modules/annotation", "modules/config", "modules/filtration", "modules/inference", "modules/parametrization", "modules/parser", "modules/spectra", "modules/spectrum", "notebooks/inference", "notebooks/parser", "notebooks/python/quickstart", "notebooks/r/quickstart", "notebooks/spectra", "python/installation", "r/installation", "reference/config", "reference/miscellaneous", "reference/parametrizations"], "filenames": ["index.rst", "introduction.rst", "modules/annotation.rst", "modules/config.rst", "modules/filtration.rst", "modules/inference.rst", "modules/parametrization.rst", "modules/parser.rst", "modules/spectra.rst", "modules/spectrum.rst", "notebooks/inference.ipynb", "notebooks/parser.ipynb", "notebooks/python/quickstart.ipynb", "notebooks/r/quickstart.ipynb", "notebooks/spectra.ipynb", "python/installation.rst", "r/installation.rst", "reference/config.rst", "reference/miscellaneous.rst", "reference/parametrizations.ipynb"], "titles": ["Welcome to fastDFE\u2019s documentation", "Introduction", "VCF Annotation", "Configuration class", "VCF Filtration", "Inference", "Parametrizations", "VCF Parsing", "Spectra class", "Spectrum class", "DFE Inference", "Parsing SFS from VCF file", "Quickstart", "Quickstart in R", "Working with SFS", "Installation", "Installation", "Configuration files", "Miscellaneous", "DFE parametrizations"], "terms": {"i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19], "packag": [0, 1, 13, 15, 16], "fast": [0, 17], "flexibl": [0, 1, 6], "hierarch": 0, "infer": [0, 1, 3, 4, 7, 14, 19], "distribut": [0, 1, 5, 6, 7, 11], "fit": [0, 1, 5, 10], "effect": [0, 1, 5], "dfe": [0, 1, 3, 4, 5, 6, 7, 12, 13, 14, 17], "from": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19], "site": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "frequenc": [0, 1, 3, 7, 9, 11, 14], "spectra": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11], "sf": [0, 1, 3, 5, 7, 8, 9, 10, 12, 13, 17, 18], "introduct": 0, "motiv": 0, "how": [0, 5, 10, 19], "work": [0, 10, 11], "featur": 0, "instal": [0, 13], "pypi": 0, "conda": 0, "quickstart": 0, "basic": [0, 5], "bootstrap": [0, 1, 3, 5, 17, 18], "serial": [0, 1, 5], "base": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 14], "fix": [0, 3, 5, 6, 8, 17], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 17], "nest": [0, 1, 5, 8], "model": [0, 1, 3, 5, 6, 12, 13, 17, 19], "comparison": [0, 1, 5, 12, 13], "visual": [0, 1, 5, 8, 11, 13], "likelihood": [0, 1, 3, 5, 12, 13, 17, 19], "fold": [0, 2, 5, 7, 8, 9], "joint": [0, 1, 5, 7], "covari": [0, 1, 3, 5, 17], "configur": [0, 1, 7, 10, 13], "file": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 18], "usag": [0, 1, 5, 7], "json": [0, 3, 5, 10, 12, 13], "exampl": [0, 7, 10, 11, 12, 13, 18, 19], "parametr": [0, 1, 3, 5, 10, 12, 13, 17], "subtyp": [0, 5], "group": [0, 8], "prefix": [0, 8], "pars": [0, 3, 4, 10, 18], "vcf": [0, 1, 10, 18], "miscellan": 0, "log": [0, 3, 5, 6, 10, 12, 17, 19], "debug": 0, "seed": [0, 2, 3, 4, 5, 7, 17], "baseinfer": [0, 3, 5, 10, 12, 13, 17, 18, 19], "default_x0": [0, 5], "default_bound": [0, 5], "default_scal": [0, 5], "default_opts_ml": [0, 5], "__init__": [0, 2, 3, 4, 5, 6, 7, 8, 9], "sfs_neut": [0, 3, 5, 10, 12, 13, 17, 19], "sfs_sel": [0, 3, 5, 10, 12, 13, 17, 19], "n": [0, 3, 5, 7, 8, 9, 10, 11], "discret": [0, 5, 6, 10, 12, 13], "theta": [0, 5, 9], "params_ml": [0, 5], "sfs_mle": [0, 5], "n_run": [0, 3, 5, 10, 12, 17], "result": [0, 1, 3, 5, 6, 10], "do_bootstrap": [0, 3, 5, 10, 17, 19], "n_bootstrap": [0, 3, 5, 17], "parallel": [0, 3, 5, 12, 17, 18], "fixed_param": [0, 3, 5, 6, 10, 17], "scale": [0, 3, 5, 6, 10, 13, 17], "bound": [0, 3, 5, 6, 10, 12, 13, 17], "optim": [0, 1, 3, 5, 6, 10, 12, 13, 17, 18], "x0": [0, 3, 5, 6, 17], "bootstrap_result": [0, 5], "l2_residu": [0, 5], "rng": [0, 5], "execution_tim": [0, 5], "lock": [0, 5], "get_fixed_param_nam": [0, 5], "check_fixed_params_exist": [0, 5], "raise_if_lock": [0, 5], "run_if_requir": [0, 5], "run_if_required_wrapp": [0, 5], "run": [0, 3, 5, 10, 12, 13, 15, 17, 18, 19], "get_count": [0, 5], "evaluate_likelihood": [0, 5], "assign_result": [0, 5], "report_result": [0, 5], "update_properti": [0, 5], "add_alpha_to_bootstrap": [0, 5], "resample_sf": [0, 5], "run_bootstrap_sampl": [0, 5], "get_scales_linear": [0, 5], "get_bounds_linear": [0, 5], "model_sf": [0, 5], "adjust_polar": [0, 5], "add_demographi": [0, 5], "plot_continu": [0, 5], "plot_bucket_s": [0, 5], "plot_interval_dens": [0, 5], "plot_sfs_comparison": [0, 5, 10, 12, 13], "plot_observed_sf": [0, 5], "plot_al": [0, 5], "get_errors_discretized_df": [0, 5], "plot_inferred_paramet": [0, 5, 10], "plot_inferred_parameters_boxplot": [0, 5], "plot_likelihood": [0, 5, 10], "lrt": [0, 1, 5, 10], "compare_nested_likelihood": [0, 5], "compare_nested_model": [0, 5], "plot_nested_likelihood": [0, 5, 10], "plot_discret": [0, 5, 10, 12, 13, 19], "get_alpha": [0, 5], "alpha": [0, 5, 10], "get_bootstrap_param": [0, 5], "get_bootstrap_param_nam": [0, 5], "get_optimized_param_nam": [0, 5], "get_n_optim": [0, 5], "create_config": [0, 5, 17], "from_config": [0, 5, 17], "from_config_fil": [0, 5], "get_summari": [0, 5, 10, 12, 13], "get_x0": [0, 5], "param_nam": [0, 5, 6], "to_json": [0, 3, 5], "from_fil": [0, 3, 5, 8, 10, 12, 13, 14, 17], "from_json": [0, 3, 5, 17], "get_cis_params_ml": [0, 5], "get_discret": [0, 5], "to_fil": [0, 3, 5, 8, 10, 12, 13, 14, 17], "jointinfer": [0, 3, 5, 10], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 17], "params_mle_raw": [0, 5], "shared_param": [0, 3, 5, 10, 17], "x0_cov": [0, 5], "marginal_infer": [0, 5, 10], "joint_infer": [0, 3, 5], "check_shared_param": [0, 5], "check_no_shared_params_fix": [0, 5], "get_shared_param_nam": [0, 5], "add_covariates_as_shar": [0, 5], "determine_unshared_covari": [0, 5], "run_margin": [0, 5], "marginals_without_al": [0, 5], "run_joint": [0, 5], "joint_inference_makes_sens": [0, 5], "run_joint_without_covari": [0, 5], "perform_lrt_covari": [0, 5, 10], "add_covari": [0, 5], "bootstrap_if_requir": [0, 5], "run_joint_bootstrap_sampl": [0, 5], "perform_lrt_shar": [0, 5, 10], "get_infer": [0, 5], "get_l2_residu": [0, 5], "get_errors_params_ml": [0, 5], "get_stats_discret": [0, 5], "compute_histogram": [0, 5], "sharedparam": [0, 3, 5, 10], "param": [0, 3, 5, 6, 10, 17], "valu": [0, 2, 3, 5, 6, 10, 13, 17, 18], "callback": [0, 5, 7, 10], "bounds_scal": [0, 5], "appli": [0, 1, 2, 4, 5, 7], "apply_default": [0, 5], "class": [0, 2, 4, 5, 6, 7, 12, 13, 14, 17], "config": [0, 3, 5, 17], "updat": [0, 3, 5, 13], "parse_polydfe_init_fil": [0, 3], "create_polydfe_init_fil": [0, 3], "parse_polydfe_sfs_config": [0, 3], "create_polydfe_sfs_config": [0, 3], "to_dict": [0, 3, 8], "to_yaml": [0, 3], "from_dict": [0, 3, 8], "from_yaml": [0, 3], "get_polydfe_model": [0, 3], "submodel": [0, 6], "get_pdf": [0, 6], "get_cdf": [0, 6], "gammaexpparametr": [0, 3, 5, 6, 10, 12, 13, 17, 19], "displacedgammaparametr": [0, 6, 19], "gammadiscreteparametr": [0, 6, 19], "discreteparametr": [0, 6, 19], "interv": [0, 3, 5, 6, 10, 12, 13, 19], "interval_s": [0, 6], "k": [0, 6, 8], "discretefractionalparametr": [0, 6], "to_nomin": [0, 6], "to_fract": [0, 6], "spectrum": [0, 1, 3, 5, 7, 8, 10, 12, 13, 14, 19], "n_site": [0, 8, 9], "n_div": [0, 8, 9], "has_div": [0, 8, 9], "n_monomorph": [0, 8, 9], "polymorph": [0, 5, 7, 8, 9], "n_polymorph": [0, 8, 9], "to_list": [0, 8, 9], "to_numpi": [0, 8, 9], "is_fold": [0, 8, 9, 14], "copi": [0, 8, 9], "from_polymorph": [0, 9], "from_list": [0, 8, 9], "from_polydf": [0, 9], "plot": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 19], "standard_kingman": [0, 9, 14], "normal": [0, 6, 8, 10, 12], "to_spectra": [0, 8], "to_datafram": [0, 8], "to_multi_index": [0, 8], "to_single_index": [0, 8], "get_empti": [0, 8], "merge_group": [0, 8, 10, 14], "has_dot": [0, 8], "replace_dot": [0, 8], "all": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 17], "combin": [0, 8, 14], "from_datafram": [0, 8], "from_spectra": [0, 8, 14], "from_spectrum": [0, 8], "drop_empti": [0, 8], "drop_zero_entri": [0, 8], "drop_spars": [0, 8], "renam": [0, 8], "print": [0, 8, 13], "sort_typ": [0, 8], "stratif": [0, 1, 7, 10, 11], "parser": [0, 1, 2, 7, 10, 11, 14, 18], "n_no_typ": [0, 7], "get_typ": [0, 7], "basecontextstratif": [0, 7], "n_flank": [0, 7], "alias": [0, 2, 4, 7], "contig": [0, 2, 4, 7], "basetransitionstratif": [0, 7], "ancestralbasestratif": [0, 2, 7, 10, 11], "transitiontransversionstratif": [0, 7], "degeneracystratif": [0, 2, 7, 10, 11], "get_degeneraci": [0, 7], "synonymystratif": [0, 2, 7], "vepstratif": [0, 7], "info_tag": [0, 7], "snpeffstratif": [0, 7], "genomepositiondependentstratif": [0, 7], "contigstratif": [0, 7], "chunkedstratif": [0, 7], "n_chunk": [0, 7], "chunk_siz": [0, 7], "counter": [0, 7], "n_target_sit": [0, 2, 7], "sampl": [0, 2, 3, 4, 5, 7, 8, 9, 10, 12, 17], "samples_mask": [0, 7], "skip_non_polar": [0, 7], "annot": [0, 1, 4, 7], "filtrat": [0, 7], "n_skip": [0, 2, 7], "reader": [0, 7], "logger": [0, 2], "n_annot": [0, 2], "annotate_sit": [0, 2], "count_target_sit": [0, 2, 7], "ancestralalleleannot": [0, 2], "maximumparsimonyannot": [0, 2, 7], "degeneracyannot": [0, 2, 7], "cd": [0, 2, 4], "cd_next": [0, 2], "cd_prev": [0, 2], "mismatch": [0, 2], "error": [0, 2, 5, 13, 18], "synonymyannot": [0, 2, 7], "vep_mismatch": [0, 2], "snpeff_mismatch": [0, 2], "n_vep_comparison": [0, 2], "n_snpeff_comparison": [0, 2], "mutat": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 14], "is_synonym": [0, 2], "n_filter": [0, 4], "filter_sit": [0, 4], "snpfiltrat": [0, 4], "snvfiltrat": [0, 4], "polyallelicfiltr": [0, 4, 7], "allfiltr": [0, 4], "nofiltr": [0, 4], "codingsequencefiltr": [0, 4, 7], "n_process": [0, 4], "deviantoutgroupfiltr": [0, 2, 4], "ingroup": [0, 2, 4], "outgroup": [0, 2, 4], "strict_mod": [0, 4], "ingroup_mask": [0, 4], "outgroup_mask": [0, 4], "create_mask": [0, 4], "biasedgcconversionfiltr": [0, 4], "filter": [0, 2, 4, 7], "output": [0, 2, 4], "is_filt": [0, 4], "index": [0, 5, 7, 8, 13, 14], "fastdf": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "user": 1, "friendli": 1, "softwar": 1, "design": [1, 14], "estim": [1, 5, 9, 10, 12, 13, 19], "evolutionari": 1, "biologi": 1, "ecologi": 1, "conserv": [1, 5], "build": 1, "upon": 1, "foundat": 1, "laid": 1, "polydf": [1, 3, 6, 9], "tataru": 1, "et": [1, 4], "al": [1, 4], "2017": 1, "address": 1, "limit": 1, "its": [1, 5, 7], "predecessor": 1, "provid": [1, 2, 5, 6, 7, 10, 11, 13, 14], "faster": 1, "more": [1, 4, 5, 10, 17, 18], "approach": 1, "implement": [1, 6, 11, 19], "python": [1, 15, 16, 18], "offer": [1, 14], "some": [1, 6, 7, 8, 10, 11, 19], "compat": 1, "r": 1, "through": [1, 13], "reticul": [1, 13, 16], "ensur": [1, 18], "smooth": 1, "integr": [1, 3, 5, 10, 12], "exist": [1, 17], "workflow": 1, "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 19], "thoroughli": 1, "document": 1, "test": [1, 4, 5, 10], "reliabl": [1, 2], "eas": 1, "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "research": 1, "field": [1, 2, 4, 7, 11], "plai": 1, "crucial": 1, "role": 1, "understand": 1, "natur": 1, "select": [1, 3, 4, 5, 6, 7, 10, 11, 12, 13, 17], "shape": [1, 5, 6, 8, 19], "genet": 1, "variat": [1, 10], "within": [1, 4, 10, 12, 15], "between": [1, 10], "speci": 1, "accur": [1, 5], "essenti": 1, "wide": 1, "rang": 1, "applic": 1, "includ": [1, 4, 5, 6, 7, 9, 10, 11, 14], "manag": [1, 17], "respons": 1, "chang": [1, 5, 6, 17, 18], "environ": [1, 15, 16], "identif": [1, 10], "function": [1, 3, 5, 6, 10, 12, 13, 16], "import": [1, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "genom": [1, 4, 11], "region": [1, 2, 7], "aim": 1, "meet": 1, "grow": 1, "need": [1, 5, 8, 10, 12, 13, 17, 19], "effici": [1, 6], "adapt": 1, "tool": 1, "can": [1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 18, 19], "easili": 1, "adopt": 1, "increasingli": 1, "complex": [1, 5, 10], "data": [1, 3, 5, 8, 9, 10, 13, 14, 19], "As": [1, 10], "precursor": 1, "contrast": 1, "put": 1, "neutral": [1, 3, 5, 7, 10, 11, 12, 13, 17], "synonym": [1, 2, 5, 7, 10, 11], "non": [1, 2, 5, 6, 7, 8, 10, 11, 13], "demographi": [1, 5], "correct": [1, 7, 11], "introduc": [1, 5, 10], "nuisanc": 1, "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18], "rescal": 1, "observ": [1, 5, 6, 10, 12, 13], "standard": [1, 5, 9, 18], "kingman": [1, 9], "assum": [1, 4, 5, 7], "affect": [1, 4, 10, 19], "alik": 1, "we": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 19], "same": [1, 5, 6, 8], "To": [1, 2, 5, 10, 14, 15, 16, 19], "make": [1, 5, 6, 10, 12, 13], "expect": [1, 10], "allel": [1, 2, 4, 7, 8, 10, 14], "sojourn": 1, "time": [1, 5, 17], "obtain": [1, 7, 10, 12, 14, 18], "poisson": [1, 5], "random": [1, 2, 3, 4, 5, 7, 17, 18], "prf": 1, "theori": 1, "In": [1, 5, 7, 10, 11, 12, 13], "thi": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 17, 18], "step": 1, "over": [1, 5, 6, 7, 8, 14, 17], "linear": [1, 3, 5, 6, 10, 12, 17], "signific": [1, 5, 10], "speed": [1, 4], "improv": [1, 5, 10], "best": [1, 3, 5], "possibl": [1, 7], "maximum": [1, 2, 4, 6, 7, 10, 12, 13, 19], "mle": [1, 5, 10, 12, 13], "facilit": [1, 7, 17], "among": [1, 2, 5, 10, 17], "differ": [1, 4, 5, 6, 7, 10, 17, 18, 19], "share": [1, 3, 5, 6, 10, 17], "easi": [1, 11], "inclus": [1, 10], "ratio": [1, 5, 10], "assess": 1, "customiz": 1, "\u03b1": 1, "proport": [1, 5, 10], "benefici": [1, 3, 5, 6, 7, 10, 11, 14], "substitut": [1, 4, 5, 10], "object": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19], "summari": [1, 5, 10, 12, 13], "support": [1, 2, 6, 7, 10], "yaml": [1, 3, 13, 17], "built": 1, "extract": [1, 7], "versatil": 1, "an": [2, 3, 4, 5, 6, 7, 10, 15, 17, 18], "them": [2, 4, 14], "creat": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 17, 19], "new": [2, 4, 8, 10, 15], "instanc": [2, 4, 5, 7], "option": [2, 3, 4, 5, 7, 8, 9, 10, 17], "int": [2, 3, 4, 5, 7, 8, 9], "number": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17], "variant": [2, 4, 7], "cyvcf2": [2, 4, 7], "singl": [2, 4, 5, 6, 8, 10, 12, 13, 14], "return": [2, 3, 4, 5, 6, 7, 8, 9, 13], "static": [2, 3, 5, 6, 8, 9], "str": [2, 3, 4, 5, 6, 7, 8, 9], "count": [2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14], "target": [2, 3, 7, 8, 9], "gff": [2, 4, 7], "path": [2, 3, 5, 7], "possibli": [2, 7], "gzip": [2, 7], "url": [2, 4, 7, 13], "dict": [2, 3, 4, 5, 6, 7, 8, 9, 10], "per": [2, 7], "chromosom": [2, 7], "abc": [2, 7], "ancestr": [2, 4, 5, 7, 10, 11, 14], "list": [2, 3, 4, 5, 6, 7, 8, 9, 11], "none": [2, 3, 4, 5, 7, 8, 9], "parsimoni": 2, "info": [2, 4, 7, 11, 18], "aa": [2, 4, 7, 11], "ad": [2, 5, 10, 14], "hold": [2, 6, 8, 9, 10, 12, 13, 14], "note": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17], "wai": [2, 12, 13, 15, 19], "determin": [2, 5, 6, 7, 11], "so": [2, 5, 6, 7, 8], "recommend": [2, 3, 4, 5, 6, 7, 15], "togeth": [2, 7], "misidentif": [2, 5, 10], "ep": [2, 5, 10, 12, 17], "altogeth": 2, "altern": [2, 7, 12, 13], "you": [2, 5, 7, 11, 15, 17, 18, 19], "out": [2, 3, 4, 5, 7, 10, 12, 13, 14], "where": [2, 4, 5, 6, 10, 12, 13], "major": [2, 4, 10], "doe": [2, 3, 5, 6, 11], "coincid": 2, "consid": [2, 3, 4, 5, 7, 10, 12], "when": [2, 4, 5, 10, 14, 17, 18], "If": [2, 5, 7, 18], "ar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19], "gff_file": [2, 4, 7], "fasta_fil": [2, 7], "cach": [2, 4, 5, 7], "bool": [2, 3, 4, 5, 7, 8, 9], "true": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 17, 18, 19], "gffhandler": [2, 4], "fastahandl": [2, 7], "degeneraci": [2, 7, 11], "look": [2, 5, 7, 11, 17], "each": [2, 5, 7, 8, 10, 14], "codon": 2, "code": [2, 4, 7, 18], "also": [2, 5, 6, 7, 10, 11, 12, 13, 14, 17, 18, 19], "mono": [2, 4, 7], "add": [2, 5], "degeneracy_info": 2, "0": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 17], "2": [2, 8, 10, 13, 14, 17], "4": [2, 6, 7, 10, 13], "extra": 2, "inform": [2, 5, 7, 10, 11, 14], "about": [2, 5, 10, 12], "respect": [2, 6, 10], "fasta": [2, 4, 7], "dictionari": [2, 3, 4, 5, 7, 8], "e": [2, 4, 5, 6, 7, 8, 10, 17], "g": [2, 4, 7, 10], "chr1": [2, 4, 7], "1": [2, 3, 4, 5, 6, 7, 10, 12, 13, 14, 17], "match": [2, 4, 7], "name": [2, 3, 4, 5, 6, 7, 8, 15], "whether": [2, 3, 4, 5, 7, 8, 9, 10, 17], "download": [2, 4, 7, 13], "seri": [2, 4, 8], "current": [2, 4, 7, 11], "sequenc": [2, 4, 7], "closest": [2, 4], "downstream": [2, 4], "follow": [2, 6, 15, 18], "preced": 2, "seqrecord": [2, 7], "could": [2, 7, 10], "correctli": [2, 5], "were": [2, 5, 7, 8], "skip": [2, 7], "becaus": [2, 7], "thei": [2, 6, 7, 8], "runtim": 2, "v": [2, 4, 5, 11], "synonymi": [2, 7], "statu": [2, 13], "present": [2, 4, 17], "synonymous_info": 2, "sinc": [2, 7], "cannot": [2, 7], "monomorph": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13], "dynam": [2, 7], "up": [2, 6, 8, 10, 13], "contain": [2, 7, 8, 10], "broadcast": 2, "set": [2, 6, 7, 8, 10, 13, 14, 17, 19], "did": [2, 4, 10, 12], "vep": [2, 7], "math": 2, "snpeff": [2, 7], "concord": 2, "alt": [2, 4], "po": 2, "given": [2, 3, 4, 5, 6, 7, 8], "posit": [2, 4, 6, 13], "codon1": 2, "codon2": 2, "check": [2, 4, 5, 8, 9, 10], "two": [2, 5, 6, 8, 10, 14], "first": [2, 3, 5, 8, 10, 12, 13, 16], "second": [2, 5, 13], "fals": [2, 3, 4, 5, 7, 8, 9, 10, 18], "otherwis": [2, 4, 5, 6, 7, 8, 9], "info_ancestr": [2, 4, 7], "max_sit": [2, 4, 7], "inf": [2, 4, 5, 7, 10, 12, 13, 17], "vcfhandler": [2, 4, 7], "tag": [2, 7, 11], "gener": [2, 3, 4, 5, 6, 7, 17], "polydfe_spectra_config": 3, "polydfe_init_fil": 3, "polydfe_init_file_id": 3, "union": [3, 4, 5, 7, 8], "intervals_del": [3, 5], "float": [3, 5, 6, 8, 9], "100000000": [3, 5], "1e": [3, 5], "05": [3, 5, 6], "1000": [3, 5, 6], "intervals_ben": [3, 5], "10000": [3, 5, 17], "integration_mod": [3, 5], "liter": [3, 5, 7], "midpoint": [3, 5, 10, 12], "quad": [3, 5], "tupl": [3, 5], "lin": [3, 5, 6, 10, 17], "symlog": [3, 5, 17], "loss_typ": [3, 5, 17], "l2": [3, 5], "opts_ml": [3, 5, 17], "10": [3, 5, 6, 7, 10, 11, 12, 13, 14, 17], "100": [3, 5, 6, 10, 12, 17, 19], "kwarg": [3, 5, 6], "init": 3, "id": 3, "requir": [3, 5, 6, 7, 10, 11, 12, 13, 18], "specifi": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17], "order": [3, 4, 5, 7, 10, 19], "rate": [3, 5, 7, 10], "deleteri": [3, 5, 6, 10], "space": [3, 5, 6], "mode": [3, 5, 6, 13], "version": [3, 5], "initi": [3, 4, 5, 6, 7, 8, 9, 10, 12, 17, 18], "form": [3, 5, 10, 12, 13], "lower": [3, 5, 6, 10, 12], "upper": [3, 5, 10, 12], "loss": [3, 5], "independ": [3, 5, 12, 17], "one": [3, 4, 5, 6, 10, 11, 12, 13, 17], "chosen": [3, 5], "increas": [3, 4, 5, 10, 11, 12], "produc": [3, 5, 6, 10], "good": [3, 5, 6, 10, 12, 13], "do": [3, 4, 5, 10, 15, 17, 18], "automat": [3, 10], "addit": [3, 5, 7], "keyword": [3, 5, 8, 9], "argument": [3, 5, 6, 8, 9, 10], "ignor": [3, 5, 8, 9], "defin": [3, 5, 7, 11], "ones": [3, 6], "held": [3, 5, 10, 17], "dure": [3, 10, 12], "size": [3, 5, 6, 7, 8, 9, 10, 12, 13, 14], "repres": 3, "represent": [3, 6, 8], "string": [3, 5, 8, 14], "save": [3, 5, 8, 9, 10, 12, 13, 14], "load": [3, 5, 8, 16], "get": [3, 5, 6, 7, 8, 9, 12, 13, 14], "correspond": [3, 6, 7, 14], "certain": 4, "criteria": 4, "didn": [4, 7], "t": [4, 5, 7, 10], "pass": [4, 5, 6, 8, 9, 10, 12, 13], "should": [4, 5, 6, 7, 17], "kept": 4, "onli": [4, 7, 9, 10, 17, 19], "keep": 4, "snp": 4, "discard": 4, "morphic": 4, "indel": 4, "mnp": 4, "poli": [4, 7], "don": 4, "explicitli": 4, "rather": [4, 6, 19], "reli": [4, 11], "purpos": 4, "ani": [4, 5, 7, 10], "find": [4, 10, 12, 13, 17], "frequent": 4, "By": [4, 5, 6, 7, 10, 11, 12, 13, 18], "unnecessari": 4, "avoid": [4, 10, 15], "here": [4, 5, 7, 9, 14, 17, 18], "sort": [4, 8], "ascend": 4, "enclos": 4, "process": [4, 11], "construct": 4, "default": [4, 5, 6, 7, 10, 11, 12, 13, 15, 18, 19], "ndarrai": [4, 5, 6, 7, 8, 9], "found": [4, 5, 10], "mask": [4, 7], "retain": 4, "A": [4, 6, 7, 10, 17], "c": [4, 6, 10, 13], "unaffect": 4, "bias": 4, "gene": 4, "convers": 4, "see": [4, 5, 10, 11, 14, 17, 18, 19], "citgb": 4, "alwai": 4, "most": [4, 6, 7, 17], "bi": [4, 7], "pouyet": 4, "background": 4, "than": [4, 5, 6, 7, 8, 10], "95": [4, 10], "human": [4, 7], "bia": 4, "demograph": 4, "elif": 4, "7": [4, 13], "e36317": 4, "2018": 4, "remov": [4, 5, 8], "iter": [4, 7, 10, 12], "base_infer": 5, "abstractinfer": 5, "177130": [5, 10, 12, 13, 17, 19], "997": [5, 10, 12, 13, 17, 19], "441": [5, 10, 12, 13, 17, 19], "228": [5, 10, 12, 13, 17, 19], "156": [5, 10, 12, 13, 17, 19], "117": [5, 10, 12, 13, 17, 19], "114": [5, 10, 12, 13, 17, 19], "83": [5, 10, 12, 13, 17, 19], "105": [5, 10, 12, 13, 17, 19], "109": [5, 7, 10, 12, 13, 17, 19], "652": [5, 10, 12, 13, 17, 19], "797939": [5, 10, 12, 13, 17, 19], "1329": [5, 10, 12, 13, 17, 19], "499": [5, 10, 12, 13, 17, 19], "265": [5, 10, 12, 13, 17, 19], "162": [5, 10, 12, 13, 17, 19], "104": [5, 10, 12, 13, 17, 19], "90": [5, 10, 12, 13, 17, 19], "94": [5, 10, 12, 13, 17, 19], "119": [5, 10, 12, 13, 17, 19], "794": [5, 10, 12, 13, 17, 19], "connect": 5, "15": [5, 11], "attribut": 5, "start": [5, 11, 12, 13], "stop": 5, "n_interv": 5, "popul": 5, "coeffici": [5, 6, 10], "log10": 5, "dfeparametr": 5, "both": [5, 6, 7, 10], "appear": [5, 10, 19], "mainli": 5, "intend": 5, "intern": 5, "mai": [5, 6], "after": [5, 10, 12, 18], "ml": 5, "control": 5, "perform": [5, 10, 12, 13, 17], "optimizeresult": 5, "numer": [5, 10, 12, 17], "datafram": [5, 8, 13], "norm": 5, "minu": 5, "total": [5, 6, 7, 8, 9], "execut": 5, "itself": [5, 10], "valid": [5, 7], "rais": [5, 7], "except": 5, "arg": 5, "yet": 5, "func": 5, "decor": 5, "pbar": 5, "show": [5, 8, 9, 10, 13, 19], "progress": [5, 10, 18], "bar": [5, 10, 18], "evalu": [5, 10, 12], "scipi": 5, "_optim": 5, "assign": 5, "properti": [5, 7, 8, 9, 11, 14, 17], "entri": [5, 8, 10, 12, 13], "self": [5, 8], "n_sampl": [5, 10, 12], "update_likelihood": 5, "mean": [5, 6, 10], "resampl": 5, "rerun": 5, "procedur": [5, 6], "take": [5, 6, 7, 18], "close": 5, "arrai": [5, 6, 8, 9, 10], "numpi": [5, 6, 8, 9, 10], "adjust": [5, 7, 10, 12], "polar": [5, 7, 11], "counts_sel": 5, "counts_neut": 5, "perturb": 5, "rel": [5, 7], "coalesc": 5, "confidence_interv": 5, "ci_level": 5, "bootstrap_typ": 5, "percentil": 5, "bca": 5, "scale_dens": 5, "titl": [5, 8, 9, 13], "kwargs_legend": [5, 8, 9, 13], "prop": [5, 8, 9], "8": [5, 8, 9, 10, 13], "ax": [5, 8, 9, 10, 12, 13, 14], "matplotlib": [5, 8, 9, 10, 14], "_ax": [5, 8, 9], "continu": 5, "special": 5, "constant": [5, 6], "np": [5, 10], "pdf": [5, 6], "due": [5, 6, 10], "logarithm": 5, "x": [5, 6, 13], "axi": 5, "wrong": 5, "intuit": 5, "mass": [5, 6, 13], "howev": [5, 6, 7, 14, 15], "better": [5, 10], "densiti": [5, 6], "ha": [5, 6, 10, 12, 13, 17], "disadvantag": 5, "now": [5, 10, 12, 13, 15], "even": [5, 17], "warp": 5, "confid": [5, 6, 10, 12, 19], "level": [5, 8, 10, 18, 19], "y": [5, 13], "boundari": 5, "yield": 5, "bin": [5, 6, 14], "plt": [5, 8, 9, 10, 14], "legend": [5, 8, 9, 13], "bucket": 5, "appropri": 5, "interval_label": [5, 13], "color": 5, "c0": [5, 10], "although": [5, 9], "similar": [5, 6, 19], "label": [5, 13, 19], "sfs_type": 5, "use_subplot": [5, 8], "show_monomorph": [5, 8, 9], "subplot": [5, 8, 10, 14], "bunch": 5, "loc": 5, "right": 5, "valueerror": 5, "scatter": 5, "ll_simpl": 5, "ll_complex": 5, "df": [5, 13], "simpl": 5, "degre": 5, "freedom": 5, "p": [5, 7, 10, 11, 13, 19], "": [5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19], "proper": 5, "subset": [5, 10], "compar": [5, 10], "variou": [5, 7], "matrix": 5, "remove_empti": 5, "transpos": 5, "cmap": 5, "empti": [5, 8], "row": 5, "column": [5, 8], "colormap": 5, "calcul": [5, 9], "classmethod": 5, "inferenceresult": 5, "unseri": [5, 10, 12, 13], "include_diverg": 5, "enabl": [5, 11], "sever": [5, 10], "pendula": [5, 10, 17, 19], "pubescen": [5, 10, 17], "172528": [5, 10, 17], "3612": [5, 10, 17], "1359": [5, 10, 17], "790": [5, 10, 17], "584": [5, 10, 17], "427": [5, 10, 17], "325": [5, 10, 17], "234": [5, 10, 17], "166": [5, 10, 17], "76": [5, 10, 17], "31": [5, 10, 17], "791106": [5, 10, 17], "5326": [5, 10, 17], "1741": [5, 10, 17], "1005": [5, 10, 17], "756": [5, 10, 17], "546": [5, 10, 17], "416": [5, 10, 17], "294": [5, 10, 17], "177": [5, 10, 17], "41": [5, 10, 17], "diverg": [5, 8, 9], "origin": [5, 6, 14], "befor": 5, "unpack": 5, "expand": 5, "margin": [5, 10], "without": [5, 7], "sens": 5, "devoid": 5, "against": 5, "across": [5, 17], "low": 5, "indic": [5, 6, 10], "access": [5, 10, 14], "call": [5, 13, 15, 17], "accuraci": 5, "wa": [5, 8, 9, 13], "previous": 5, "won": 5, "have": [5, 6, 7, 8, 14, 17, 19], "statist": 5, "comput": [5, 6, 17], "done": [5, 7, 10, 11, 13], "product": [5, 10], "achiev": [5, 10], "justifi": 5, "difficult": 5, "properli": 5, "report": [5, 13], "might": [5, 10, 11, 12, 17], "larger": [5, 6, 19], "what": [5, 10], "realli": 5, "deseri": 5, "longer": 5, "other": [5, 6, 8, 10, 15, 17, 19], "thing": [5, 10], "pleas": 5, "refer": [5, 7, 10, 14], "residu": 5, "jointli": [5, 10], "pd": 5, "abstract_infer": 5, "util": [5, 11, 14], "method": [5, 11, 13, 14], "uniqu": 5, "panda": [5, 8], "core": [5, 8, 17], "frame": [5, 8, 13], "avail": [5, 7, 13, 14, 17], "s_d": [5, 6, 10, 12, 17], "callabl": [5, 6, 7], "0001": [5, 6, 10, 12], "induc": 5, "relationship": [5, 10], "mani": 5, "modifi": [5, 10], "scale_valu": 5, "detail": [5, 10], "custom": [5, 7, 10, 11], "input": 5, "highli": [6, 7], "dele": 6, "full": 6, "kind": 6, "either": [6, 7], "abstract": [6, 7], "probabl": 6, "accept": 6, "cumul": 6, "mixtur": 6, "gamma": 6, "exponenti": 6, "phi": 6, "b": [6, 10, 12, 17, 19], "p_b": [6, 10, 12, 17], "s_b": [6, 10, 12, 17], "f_": 6, "cdot": 6, "mathbf": 6, "_": [6, 8], "f_e": 6, "geq": 6, "m": 6, "denot": [6, 10], "often": [6, 7, 14], "been": [6, 10, 12, 13], "multi": [6, 8], "modal": 6, "neg": [6, 10], "amount": 6, "accommod": 6, "100000": [6, 10], "01": [6, 10, 19], "5": [6, 10], "zero": [6, 8, 10, 13], "cdf": 6, "reflect": 6, "displac": 6, "hat": 6, "s_": 6, "max": 6, "leq": 6, "less": [6, 14], "while": 6, "fewer": [6, 7, 8], "It": [6, 14], "allow": [6, 7, 16], "pure": [6, 10], "sub": 6, "s_max": 6, "s_mean": 6, "001": 6, "case": [6, 7, 17], "d": 6, "6": [6, 13], "constructor": 6, "s_1": 6, "s_2": 6, "dot": [6, 8], "s_k": 6, "That": 6, "sum_": 6, "s_i": 6, "c_i": 6, "b_i": 6, "width": [6, 13], "advantag": 6, "impos": 6, "For": [6, 10, 14, 17], "reason": [6, 7, 10, 12, 13], "fine": 6, "those": 6, "well": [6, 7, 10, 11, 17], "re": [6, 10], "sure": [6, 10, 12, 13], "sum": [6, 8], "infinit": 6, "s1": 6, "s2": [6, 13], "sk": 6, "_1": 6, "_2": 6, "ith": 6, "left": [6, 17], "_i": 6, "j": 6, "s_j": 6, "prefer": 6, "constraint": 6, "convert": [6, 8, 9], "fraction": [6, 13], "s0": 6, "invert": 6, "oper": 6, "back": 6, "nomin": 6, "stratifi": [7, 10, 11, 14], "context": 7, "flank": 7, "attempt": 7, "middl": 7, "abl": 7, "transit": [7, 11], "notypeexcept": 7, "subclass": [7, 19], "ancestralannot": 7, "transvers": 7, "custom_callback": 7, "side": 7, "degener": 7, "csq": 7, "ann": 7, "chunk": 7, "roughli": 7, "equal": [7, 8], "window": 7, "seen": 7, "far": 7, "retriev": [7, 11], "littl": [7, 11], "21": [7, 19], "http": [7, 13], "ftp": 7, "1000genom": 7, "ebi": 7, "ac": 7, "uk": 7, "vol1": 7, "data_collect": 7, "1000_genomes_project": 7, "releas": 7, "20181203_biallelic_snv": 7, "chr21": 7, "shapeit2_integrated_v1a": 7, "grch38": 7, "20181129": 7, "phase": 7, "gz": [7, 10, 11, 13], "ensembl": 7, "org": [7, 13], "pub": 7, "homo_sapien": 7, "dna": 7, "fa": [7, 10], "gff3": 7, "individu": 7, "down": 7, "draw": 7, "replac": [7, 8], "ideal": 7, "calibr": 7, "extrapol": 7, "length": [7, 13], "manipul": [8, 9, 14], "multipl": [8, 14, 17], "kei": 8, "ndim": 8, "notat": 8, "merg": [8, 14], "whose": 8, "last": [8, 10, 12, 13], "deriv": [8, 10, 14], "alphabet": 8, "wise": 9, "watterson": 9, "specif": 9, "treat": 9, "separ": [9, 10], "pair": [10, 12, 13], "pyplot": [10, 14], "32minfo": [10, 11, 12], "precomput": [10, 12], "transform": [10, 12], "0m": [10, 11, 12], "33mwarn": [10, 12], "noth": [10, 12], "worri": [10, 12], "successfulli": [10, 12], "finish": [10, 12], "79": [10, 11, 12], "594": [10, 12], "34": [10, 12], "63216290448145": [10, 12], "9867": [10, 12], "852019677897": [10, 12], "15081059927802082": [10, 12], "00010000034366964345": [10, 12], "006854767570905897": [10, 12], "local": [10, 12, 13], "carri": [10, 12, 13], "global": [10, 12, 13], "optimum": [10, 12, 13], "furthermor": [10, 12, 13], "cf": [10, 11, 12, 13, 19], "figur": [10, 12, 14], "640x480": [10, 12, 14], "uncertainti": 10, "sfss": [10, 12, 13], "redo": [10, 12, 13], "00": [10, 12, 19], "99": 10, "33it": 10, "termin": [10, 12], "thu": [10, 12, 17], "unreli": [10, 12], "gtol": [10, 12], "decreas": [10, 12], "interpret": 10, "mi": 10, "forc": 10, "arbitrari": 10, "later": 10, "17": 10, "66": 10, "35": 10, "43798126918222": 10, "33214": 10, "72695876174": 10, "13054515124835514": 10, "293": 10, "61it": 10, "idenf": 10, "disabl": [10, 18], "warn": [10, 13, 19], "clutter": 10, "disable_pbar": [10, 18], "getlogg": [10, 18, 19], "setlevel": [10, 18, 19], "neither": 10, "nor": 10, "significantli": 10, "give": 10, "u": [10, 16], "There": 10, "room": 10, "short": 10, "il": 10, "simpli": 10, "whenev": [10, 14], "ax1": [10, 14], "ax2": [10, 14], "ncol": [10, 14], "figsiz": 10, "tight_layout": 10, "modul": [10, 18], "join": 10, "inde": 10, "via": 10, "investig": 10, "exten": 10, "45153989585526233": 10, "simpler": 10, "explain": 10, "suffici": 10, "lot": 10, "associ": 10, "power": 10, "reduc": 10, "interest": 10, "describ": 10, "instanti": [10, 11], "snakemak": 10, "betula": [10, 11], "contriv": 10, "strength": 10, "3": [10, 14], "let": 10, "vari": 10, "question": 10, "conveni": 11, "skip_not_polar": 11, "want": 11, "spp": 11, "resourc": 11, "2439037it": 11, "02": [11, 19], "16": 11, "17821": 11, "79it": 11, "1935472": 11, "2439037": 11, "12": 11, "56": 11, "03": [11, 19], "2581": 11, "94it": 11, "behaviour": [11, 17], "state": [11, 14], "admit": 11, "directli": [11, 17], "extend": 11, "easiest": [12, 13, 15], "107": 12, "68it": 12, "librari": [13, 16], "py_instal": [13, 16], "ggplot2": 13, "depend": [13, 15], "__version__": 13, "null": 13, "legend_text_s": 13, "vector": 13, "seq": 13, "sin": 13, "line": 13, "l": 13, "unlist": 13, "factor": 13, "variabl": 13, "cut": 13, "break": 13, "ggplot": 13, "ae": 13, "fill": 13, "geom_bar": 13, "stat": 13, "ident": 13, "dodg": 13, "geom_errorbar": 13, "ymin": 13, "ymax": 13, "position_dodg": 13, "9": 13, "lab": 13, "theme": 13, "bottom": 13, "text": 13, "element_text": 13, "element_blank": 13, "displai": 13, "filenam": 13, "ggsave": 13, "height": 13, "unit": 13, "messag": 13, "destfil": 13, "wb": 13, "65536": 13, "3024838": 13, "cran": 13, "project": 13, "src": 13, "contrib": 13, "sass_0": 13, "tar": 13, "timeout": 13, "60": 13, "reach": 13, "fail": 13, "pkg": 13, "destdir": 13, "tmpd": 13, "sass": 13, "1081344": 13, "2184560": 13, "rmarkdown_2": 13, "22": 13, "rmarkdown": 13, "458752": 13, "859025": 13, "rpart_4": 13, "19": 13, "rpart": 13, "sy": 13, "had": 13, "exit": 13, "backport": 13, "proxi": 13, "lazyev": 13, "curl": 13, "mime": 13, "zoo": 13, "cachem": 13, "kernsmooth": 13, "wk": 13, "f": [13, 15], "farver": 13, "magrittr": 13, "cluster": 13, "nnet": 13, "foreign": 13, "tabl": 13, "colorspac": 13, "xfun": 13, "sp": 13, "mvtnorm": 13, "surviv": 13, "sparsem": 13, "systemfont": 13, "brio": 13, "diffobj": 13, "isoband": 13, "hexbin": 13, "map": 13, "nlme": 13, "xml2": 13, "askpass": 13, "checkmat": 13, "memois": 13, "rex": 13, "highr": 13, "th": 13, "sandwich": 13, "purrr": 13, "stringr": 13, "textshap": 13, "tinytex": 13, "pkgload": 13, "processx": 13, "mgcv": 13, "tibbl": 13, "mapproj": 13, "maptool": 13, "munsel": 13, "quantreg": 13, "rgeo": 13, "svglite": 13, "openssl": 13, "e1071": 13, "rematch2": 13, "bslib": 13, "callr": 13, "dplyr": 13, "knitr": 13, "multcomp": 13, "ragg": 13, "httr": 13, "htmlwidget": 13, "classint": 13, "waldo": 13, "htmltabl": 13, "viridi": 13, "covr": 13, "profvi": 13, "testthat": 13, "hmisc": 13, "vdiffr": 13, "html": 13, "traceback": 13, "handl": 14, "especi": 14, "usual": [14, 17], "would": [14, 17], "alreadi": [14, 17], "manual": 14, "subtype1": 14, "type1": 14, "type2": 14, "subtype2": 14, "wildcard": 14, "onc": 14, "rid": 14, "upp": 14, "restor": 14, "again": 14, "csv": 14, "spectra2": 14, "distinguish": 14, "complet": 14, "collaps": 14, "onto": 14, "particularli": 14, "notic": 14, "easier": 14, "robust": 14, "misspecif": 14, "unknown": 14, "fig": 14, "pip": 15, "potenti": 15, "conflict": 15, "isol": 15, "mamba": 15, "yml": 15, "content": 15, "env": 15, "channel": 15, "command": 15, "activ": 15, "newli": 15, "readi": 15, "interfac": 16, "subsequ": 16, "our": [16, 19], "further": 16, "reproduc": [17, 18], "consist": 17, "analys": 17, "simplifi": 17, "hyperparamet": 17, "typic": 17, "like": [17, 18], "resort": 17, "veri": 17, "untouch": 17, "invok": 17, "guarante": 17, "determinist": 17, "just": 17, "173705": 17, "3294": 17, "1115": 17, "534": 17, "326": 17, "239": 17, "225": 17, "214": 17, "231": 17, "176": 17, "73": 17, "792884": 17, "4762": 17, "1397": 17, "720": 17, "423": 17, "259": 17, "247": 17, "256": 17, "209": 17, "person": 17, "readabl": 17, "involv": 17, "32623": 17, "595481483513": 17, "426": 17, "59080558648185": 17, "consol": 18, "encount": 18, "unexpect": 18, "descript": 18, "stack": 18, "trace": 18, "your": [18, 19], "etc": 18, "choos": 18, "subsampl": 18, "amen": 19, "own": 19, "fatal": 19, "append": 19, "__class__": 19, "__name__": 19, "38": 19, "64it": 19, "04": 19, "20it": 19, "50": 19, "88it": 19, "26": 19, "50it": 19, "overal": 19}, "objects": {"fastdfe.abstract_inference": [[5, 0, 1, "", "Inference"]], "fastdfe.abstract_inference.Inference": [[5, 1, 1, "", "compute_histogram"], [5, 1, 1, "", "get_cis_params_mle"], [5, 1, 1, "", "get_discretized"], [5, 1, 1, "", "get_errors_params_mle"], [5, 1, 1, "", "get_stats_discretized"], [5, 1, 1, "", "plot_continuous"], [5, 1, 1, "", "plot_discretized"], [5, 1, 1, "", "plot_inferred_parameters"], [5, 1, 1, "", "plot_inferred_parameters_boxplot"]], "fastdfe": [[2, 2, 0, "-", "annotation"], [4, 2, 0, "-", "filtration"], [6, 2, 0, "-", "parametrization"], [7, 2, 0, "-", "parser"]], "fastdfe.annotation": [[2, 0, 1, "", "AncestralAlleleAnnotation"], [2, 0, 1, "", "Annotation"], [2, 0, 1, "", "Annotator"], [2, 0, 1, "", "DegeneracyAnnotation"], [2, 0, 1, "", "MaximumParsimonyAnnotation"], [2, 0, 1, "", "SynonymyAnnotation"]], "fastdfe.annotation.Annotation": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "annotate_site"], [2, 3, 1, "", "annotator"], [2, 1, 1, "", "count_target_sites"], [2, 3, 1, "", "logger"], [2, 3, 1, "", "n_annotated"]], "fastdfe.annotation.Annotator": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "annotate"]], "fastdfe.annotation.DegeneracyAnnotation": [[2, 1, 1, "", "__init__"], [2, 3, 1, "", "aliases"], [2, 1, 1, "", "annotate_site"], [2, 3, 1, "", "cd"], [2, 3, 1, "", "cd_next"], [2, 3, 1, "", "cd_prev"], [2, 3, 1, "", "contig"], [2, 3, 1, "", "errors"], [2, 3, 1, "", "mismatches"], [2, 3, 1, "", "n_skipped"], [2, 3, 1, "", "n_target_sites"]], "fastdfe.annotation.MaximumParsimonyAnnotation": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "annotate_site"], [2, 3, 1, "", "samples"]], "fastdfe.annotation.SynonymyAnnotation": [[2, 1, 1, "", "__init__"], [2, 3, 1, "", "aliases"], [2, 1, 1, "", "annotate_site"], [2, 1, 1, "", "is_synonymous"], [2, 1, 1, "", "mutate"], [2, 3, 1, "", "n_snpeff_comparisons"], [2, 3, 1, "", "n_vep_comparisons"], [2, 3, 1, "", "snpeff_mismatches"], [2, 3, 1, "", "vep_mismatches"]], "fastdfe.base_inference": [[5, 0, 1, "", "BaseInference"]], "fastdfe.base_inference.BaseInference": [[5, 3, 1, "", "L2_residual"], [5, 1, 1, "", "__init__"], [5, 1, 1, "", "add_alpha_to_bootstraps"], [5, 1, 1, "", "add_demography"], [5, 1, 1, "", "adjust_polarization"], [5, 4, 1, "", "alpha"], [5, 1, 1, "", "assign_result"], [5, 1, 1, "", "bootstrap"], [5, 3, 1, "", "bootstrap_results"], [5, 3, 1, "", "bootstraps"], [5, 3, 1, "", "bounds"], [5, 1, 1, "", "check_fixed_params_exist"], [5, 1, 1, "", "compare_nested_likelihoods"], [5, 1, 1, "", "compare_nested_models"], [5, 1, 1, "", "create_config"], [5, 3, 1, "", "default_bounds"], [5, 3, 1, "", "default_opts_mle"], [5, 3, 1, "", "default_scales"], [5, 3, 1, "", "default_x0"], [5, 3, 1, "", "discretization"], [5, 3, 1, "", "do_bootstrap"], [5, 1, 1, "", "evaluate_likelihood"], [5, 3, 1, "", "execution_time"], [5, 3, 1, "", "fixed_params"], [5, 3, 1, "", "folded"], [5, 1, 1, "", "from_config"], [5, 1, 1, "", "from_config_file"], [5, 1, 1, "", "from_file"], [5, 1, 1, "", "from_json"], [5, 1, 1, "", "get_alpha"], [5, 1, 1, "", "get_bootstrap_param_names"], [5, 1, 1, "", "get_bootstrap_params"], [5, 1, 1, "", "get_bounds_linear"], [5, 1, 1, "", "get_cis_params_mle"], [5, 1, 1, "", "get_counts"], [5, 1, 1, "", "get_discretized"], [5, 1, 1, "", "get_errors_discretized_dfe"], [5, 1, 1, "", "get_fixed_param_names"], [5, 1, 1, "", "get_n_optimized"], [5, 1, 1, "", "get_optimized_param_names"], [5, 1, 1, "", "get_scales_linear"], [5, 1, 1, "", "get_summary"], [5, 1, 1, "", "get_x0"], [5, 3, 1, "", "likelihood"], [5, 3, 1, "", "likelihoods"], [5, 3, 1, "", "locked"], [5, 1, 1, "", "lrt"], [5, 3, 1, "", "model"], [5, 1, 1, "", "model_sfs"], [5, 3, 1, "", "n"], [5, 3, 1, "", "n_bootstraps"], [5, 3, 1, "", "n_runs"], [5, 3, 1, "", "optimization"], [5, 3, 1, "", "parallelize"], [5, 4, 1, "", "param_names"], [5, 3, 1, "", "params_mle"], [5, 1, 1, "", "plot_all"], [5, 1, 1, "", "plot_bucket_sizes"], [5, 1, 1, "", "plot_continuous"], [5, 1, 1, "", "plot_discretized"], [5, 1, 1, "", "plot_inferred_parameters"], [5, 1, 1, "", "plot_inferred_parameters_boxplot"], [5, 1, 1, "", "plot_interval_density"], [5, 1, 1, "", "plot_likelihoods"], [5, 1, 1, "", "plot_nested_likelihoods"], [5, 1, 1, "", "plot_observed_sfs"], [5, 1, 1, "", "plot_sfs_comparison"], [5, 1, 1, "", "raise_if_locked"], [5, 1, 1, "", "report_result"], [5, 1, 1, "", "resample_sfs"], [5, 3, 1, "", "result"], [5, 3, 1, "", "rng"], [5, 1, 1, "", "run"], [5, 1, 1, "", "run_bootstrap_sample"], [5, 1, 1, "", "run_if_required"], [5, 1, 1, "", "run_if_required_wrapper"], [5, 3, 1, "", "scales"], [5, 3, 1, "", "seed"], [5, 3, 1, "", "sfs_mle"], [5, 3, 1, "", "sfs_neut"], [5, 3, 1, "", "sfs_sel"], [5, 3, 1, "", "theta"], [5, 1, 1, "", "to_file"], [5, 1, 1, "", "to_json"], [5, 1, 1, "", "update_properties"], [5, 3, 1, "", "x0"]], "fastdfe.config": [[3, 0, 1, "", "Config"]], "fastdfe.config.Config": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "create_polydfe_init_file"], [3, 1, 1, "", "create_polydfe_sfs_config"], [3, 1, 1, "", "from_dict"], [3, 1, 1, "", "from_file"], [3, 1, 1, "", "from_json"], [3, 1, 1, "", "from_yaml"], [3, 1, 1, "", "get_polydfe_model"], [3, 1, 1, "", "parse_polydfe_init_file"], [3, 1, 1, "", "parse_polydfe_sfs_config"], [3, 1, 1, "", "to_dict"], [3, 1, 1, "", "to_file"], [3, 1, 1, "", "to_json"], [3, 1, 1, "", "to_yaml"], [3, 1, 1, "", "update"]], "fastdfe.filtration": [[4, 0, 1, "", "AllFiltration"], [4, 0, 1, "", "BiasedGCConversionFiltration"], [4, 0, 1, "", "CodingSequenceFiltration"], [4, 0, 1, "", "DeviantOutgroupFiltration"], [4, 0, 1, "", "Filterer"], [4, 0, 1, "", "Filtration"], [4, 0, 1, "", "NoFiltration"], [4, 0, 1, "", "PolyAllelicFiltration"], [4, 0, 1, "", "SNPFiltration"], [4, 0, 1, "", "SNVFiltration"]], "fastdfe.filtration.AllFiltration": [[4, 1, 1, "", "filter_site"]], "fastdfe.filtration.BiasedGCConversionFiltration": [[4, 1, 1, "", "filter_site"]], "fastdfe.filtration.CodingSequenceFiltration": [[4, 1, 1, "", "__init__"], [4, 3, 1, "", "aliases"], [4, 3, 1, "", "cd"], [4, 1, 1, "", "filter_site"], [4, 3, 1, "", "n_processed"]], "fastdfe.filtration.DeviantOutgroupFiltration": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "create_masks"], [4, 1, 1, "", "filter_site"], [4, 3, 1, "", "ingroup_mask"], [4, 3, 1, "", "ingroups"], [4, 3, 1, "", "outgroup_mask"], [4, 3, 1, "", "outgroups"], [4, 3, 1, "", "samples"], [4, 3, 1, "", "strict_mode"]], "fastdfe.filtration.Filterer": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "filter"], [4, 3, 1, "", "filtrations"], [4, 1, 1, "", "is_filtered"], [4, 3, 1, "", "n_filtered"], [4, 3, 1, "", "output"]], "fastdfe.filtration.Filtration": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "filter_site"], [4, 3, 1, "", "n_filtered"]], "fastdfe.filtration.NoFiltration": [[4, 1, 1, "", "filter_site"]], "fastdfe.filtration.PolyAllelicFiltration": [[4, 1, 1, "", "filter_site"]], "fastdfe.filtration.SNPFiltration": [[4, 1, 1, "", "filter_site"]], "fastdfe.filtration.SNVFiltration": [[4, 1, 1, "", "filter_site"]], "fastdfe.joint_inference": [[5, 0, 1, "", "JointInference"]], "fastdfe.joint_inference.JointInference": [[5, 3, 1, "", "L2_residual"], [5, 1, 1, "", "__init__"], [5, 1, 1, "", "add_alpha_to_bootstraps"], [5, 1, 1, "", "add_covariates"], [5, 1, 1, "", "add_covariates_as_shared"], [5, 1, 1, "", "add_demography"], [5, 1, 1, "", "adjust_polarization"], [5, 4, 1, "", "alpha"], [5, 1, 1, "", "assign_result"], [5, 1, 1, "", "bootstrap"], [5, 1, 1, "", "bootstrap_if_required"], [5, 3, 1, "", "bootstrap_results"], [5, 3, 1, "", "bootstraps"], [5, 3, 1, "", "bounds"], [5, 1, 1, "", "check_fixed_params_exist"], [5, 1, 1, "", "check_no_shared_params_fixed"], [5, 1, 1, "", "check_shared_params"], [5, 1, 1, "", "compare_nested_likelihoods"], [5, 1, 1, "", "compare_nested_models"], [5, 3, 1, "", "covariates"], [5, 1, 1, "", "create_config"], [5, 3, 1, "", "default_bounds"], [5, 3, 1, "", "default_opts_mle"], [5, 3, 1, "", "default_scales"], [5, 3, 1, "", "default_x0"], [5, 1, 1, "", "determine_unshared_covariates"], [5, 3, 1, "", "discretization"], [5, 3, 1, "", "do_bootstrap"], [5, 1, 1, "", "evaluate_likelihood"], [5, 3, 1, "", "execution_time"], [5, 3, 1, "", "fixed_params"], [5, 3, 1, "", "folded"], [5, 1, 1, "", "from_config"], [5, 1, 1, "", "from_config_file"], [5, 1, 1, "", "from_file"], [5, 1, 1, "", "from_json"], [5, 1, 1, "", "get_L2_residual"], [5, 1, 1, "", "get_alpha"], [5, 1, 1, "", "get_bootstrap_param_names"], [5, 1, 1, "", "get_bootstrap_params"], [5, 1, 1, "", "get_bounds_linear"], [5, 1, 1, "", "get_cis_params_mle"], [5, 1, 1, "", "get_counts"], [5, 1, 1, "", "get_discretized"], [5, 1, 1, "", "get_errors_discretized_dfe"], [5, 1, 1, "", "get_fixed_param_names"], [5, 1, 1, "", "get_inferences"], [5, 1, 1, "", "get_n_optimized"], [5, 1, 1, "", "get_optimized_param_names"], [5, 1, 1, "", "get_scales_linear"], [5, 1, 1, "", "get_shared_param_names"], [5, 1, 1, "", "get_summary"], [5, 1, 1, "", "get_x0"], [5, 1, 1, "", "joint_inference_makes_sense"], [5, 3, 1, "", "joint_inferences"], [5, 3, 1, "", "likelihood"], [5, 3, 1, "", "likelihoods"], [5, 3, 1, "", "locked"], [5, 1, 1, "", "lrt"], [5, 3, 1, "", "marginal_inferences"], [5, 1, 1, "", "marginals_without_all"], [5, 3, 1, "", "model"], [5, 1, 1, "", "model_sfs"], [5, 3, 1, "", "n"], [5, 3, 1, "", "n_bootstraps"], [5, 3, 1, "", "n_runs"], [5, 3, 1, "", "optimization"], [5, 3, 1, "", "parallelize"], [5, 4, 1, "", "param_names"], [5, 3, 1, "", "params_mle"], [5, 3, 1, "", "params_mle_raw"], [5, 1, 1, "", "perform_lrt_covariates"], [5, 1, 1, "", "perform_lrt_shared"], [5, 1, 1, "", "plot_all"], [5, 1, 1, "", "plot_bucket_sizes"], [5, 1, 1, "", "plot_continuous"], [5, 1, 1, "", "plot_discretized"], [5, 1, 1, "", "plot_inferred_parameters"], [5, 1, 1, "", "plot_inferred_parameters_boxplot"], [5, 1, 1, "", "plot_interval_density"], [5, 1, 1, "", "plot_likelihoods"], [5, 1, 1, "", "plot_nested_likelihoods"], [5, 1, 1, "", "plot_observed_sfs"], [5, 1, 1, "", "plot_sfs_comparison"], [5, 1, 1, "", "raise_if_locked"], [5, 1, 1, "", "report_result"], [5, 1, 1, "", "resample_sfs"], [5, 3, 1, "", "result"], [5, 3, 1, "", "rng"], [5, 1, 1, "", "run"], [5, 1, 1, "", "run_bootstrap_sample"], [5, 1, 1, "", "run_if_required"], [5, 1, 1, "", "run_if_required_wrapper"], [5, 1, 1, "", "run_joint"], [5, 1, 1, "", "run_joint_bootstrap_sample"], [5, 1, 1, "", "run_joint_without_covariates"], [5, 1, 1, "", "run_marginal"], [5, 3, 1, "", "scales"], [5, 3, 1, "", "seed"], [5, 3, 1, "", "sfs_mle"], [5, 3, 1, "", "sfs_neut"], [5, 3, 1, "", "sfs_sel"], [5, 3, 1, "", "shared_params"], [5, 3, 1, "", "theta"], [5, 1, 1, "", "to_file"], [5, 1, 1, "", "to_json"], [5, 3, 1, "", "types"], [5, 1, 1, "", "update_properties"], [5, 3, 1, "", "x0"], [5, 3, 1, "", "x0_cov"]], "fastdfe.optimization": [[5, 0, 1, "", "Covariate"], [5, 0, 1, "", "SharedParams"]], "fastdfe.optimization.Covariate": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "apply"], [5, 1, 1, "", "apply_default"], [5, 3, 1, "", "bounds"], [5, 3, 1, "", "bounds_scale"], [5, 3, 1, "", "callback"], [5, 3, 1, "", "param"], [5, 3, 1, "", "values"], [5, 3, 1, "", "x0"]], "fastdfe.optimization.SharedParams": [[5, 1, 1, "", "__init__"], [5, 3, 1, "", "params"], [5, 3, 1, "", "types"]], "fastdfe.parametrization": [[6, 0, 1, "", "DiscreteFractionalParametrization"], [6, 0, 1, "", "DiscreteParametrization"], [6, 0, 1, "", "DisplacedGammaParametrization"], [6, 0, 1, "", "GammaDiscreteParametrization"], [6, 0, 1, "", "GammaExpParametrization"], [6, 0, 1, "", "Parametrization"]], "fastdfe.parametrization.DiscreteFractionalParametrization": [[6, 1, 1, "", "__init__"], [6, 3, 1, "", "fixed_params"], [6, 1, 1, "", "get_cdf"], [6, 1, 1, "", "get_pdf"], [6, 3, 1, "", "interval_sizes"], [6, 3, 1, "", "intervals"], [6, 3, 1, "", "k"], [6, 3, 1, "", "param_names"], [6, 3, 1, "", "params"], [6, 1, 1, "", "to_fractional"], [6, 1, 1, "", "to_nominal"]], "fastdfe.parametrization.DiscreteParametrization": [[6, 1, 1, "", "__init__"], [6, 3, 1, "", "fixed_params"], [6, 1, 1, "", "get_cdf"], [6, 1, 1, "", "get_pdf"], [6, 3, 1, "", "interval_sizes"], [6, 3, 1, "", "intervals"], [6, 3, 1, "", "k"], [6, 3, 1, "", "param_names"], [6, 3, 1, "", "params"]], "fastdfe.parametrization.DisplacedGammaParametrization": [[6, 3, 1, "", "bounds"], [6, 1, 1, "", "get_cdf"], [6, 1, 1, "", "get_pdf"], [6, 3, 1, "", "scales"], [6, 3, 1, "", "submodels"], [6, 3, 1, "", "x0"]], "fastdfe.parametrization.GammaDiscreteParametrization": [[6, 3, 1, "", "bounds"], [6, 1, 1, "", "get_cdf"], [6, 1, 1, "", "get_pdf"], [6, 3, 1, "", "scales"], [6, 3, 1, "", "submodels"], [6, 3, 1, "", "x0"]], "fastdfe.parametrization.GammaExpParametrization": [[6, 3, 1, "", "bounds"], [6, 1, 1, "", "get_cdf"], [6, 1, 1, "", "get_pdf"], [6, 3, 1, "", "scales"], [6, 3, 1, "", "submodels"], [6, 3, 1, "", "x0"]], "fastdfe.parametrization.Parametrization": [[6, 1, 1, "", "__init__"], [6, 3, 1, "", "bounds"], [6, 1, 1, "", "get_cdf"], [6, 1, 1, "", "get_pdf"], [6, 3, 1, "", "param_names"], [6, 3, 1, "", "scales"], [6, 3, 1, "", "submodels"], [6, 3, 1, "", "x0"]], "fastdfe.parser": [[7, 0, 1, "", "AncestralBaseStratification"], [7, 0, 1, "", "BaseContextStratification"], [7, 0, 1, "", "BaseTransitionStratification"], [7, 0, 1, "", "ChunkedStratification"], [7, 0, 1, "", "ContigStratification"], [7, 0, 1, "", "DegeneracyStratification"], [7, 0, 1, "", "GenomePositionDependentStratification"], [7, 0, 1, "", "Parser"], [7, 0, 1, "", "SnpEffStratification"], [7, 0, 1, "", "Stratification"], [7, 0, 1, "", "SynonymyStratification"], [7, 0, 1, "", "TransitionTransversionStratification"], [7, 0, 1, "", "VEPStratification"]], "fastdfe.parser.AncestralBaseStratification": [[7, 1, 1, "", "get_type"], [7, 1, 1, "", "get_types"]], "fastdfe.parser.BaseContextStratification": [[7, 1, 1, "", "__init__"], [7, 3, 1, "", "aliases"], [7, 3, 1, "", "contig"], [7, 1, 1, "", "get_type"], [7, 1, 1, "", "get_types"], [7, 3, 1, "", "n_flanking"]], "fastdfe.parser.BaseTransitionStratification": [[7, 1, 1, "", "get_type"], [7, 1, 1, "", "get_types"]], "fastdfe.parser.ChunkedStratification": [[7, 1, 1, "", "__init__"], [7, 3, 1, "", "chunk_sizes"], [7, 3, 1, "", "counter"], [7, 1, 1, "", "get_type"], [7, 1, 1, "", "get_types"], [7, 3, 1, "", "n_chunks"]], "fastdfe.parser.ContigStratification": [[7, 1, 1, "", "get_type"], [7, 1, 1, "", "get_types"]], "fastdfe.parser.DegeneracyStratification": [[7, 1, 1, "", "__init__"], [7, 3, 1, "", "get_degeneracy"], [7, 1, 1, "", "get_type"], [7, 1, 1, "", "get_types"]], "fastdfe.parser.Parser": [[7, 1, 1, "", "__init__"], [7, 3, 1, "", "annotations"], [7, 3, 1, "", "filtrations"], [7, 3, 1, "", "n"], [7, 3, 1, "", "n_skipped"], [7, 3, 1, "", "n_target_sites"], [7, 1, 1, "", "parse"], [7, 3, 1, "", "reader"], [7, 3, 1, "", "samples"], [7, 3, 1, "", "samples_mask"], [7, 3, 1, "", "sfs"], [7, 3, 1, "", "skip_non_polarized"], [7, 3, 1, "", "stratifications"]], "fastdfe.parser.SnpEffStratification": [[7, 3, 1, "", "info_tag"]], "fastdfe.parser.Stratification": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "get_type"], [7, 1, 1, "", "get_types"], [7, 3, 1, "", "n_no_type"], [7, 3, 1, "", "parser"]], "fastdfe.parser.SynonymyStratification": [[7, 1, 1, "", "get_type"], [7, 1, 1, "", "get_types"]], "fastdfe.parser.TransitionTransversionStratification": [[7, 1, 1, "", "get_type"], [7, 1, 1, "", "get_types"]], "fastdfe.parser.VEPStratification": [[7, 1, 1, "", "get_type"], [7, 1, 1, "", "get_types"], [7, 3, 1, "", "info_tag"]], "fastdfe.spectrum": [[8, 0, 1, "", "Spectra"], [9, 0, 1, "", "Spectrum"]], "fastdfe.spectrum.Spectra": [[8, 1, 1, "", "__init__"], [8, 4, 1, "", "all"], [8, 1, 1, "", "combine"], [8, 1, 1, "", "copy"], [8, 1, 1, "", "drop_empty"], [8, 1, 1, "", "drop_sparse"], [8, 1, 1, "", "drop_zero_entries"], [8, 1, 1, "", "fold"], [8, 1, 1, "", "from_dataframe"], [8, 1, 1, "", "from_dict"], [8, 1, 1, "", "from_file"], [8, 1, 1, "", "from_list"], [8, 1, 1, "", "from_spectra"], [8, 1, 1, "", "from_spectrum"], [8, 1, 1, "", "get_empty"], [8, 4, 1, "", "has_div"], [8, 1, 1, "", "has_dots"], [8, 1, 1, "", "is_folded"], [8, 4, 1, "", "k"], [8, 1, 1, "", "merge_groups"], [8, 4, 1, "", "n"], [8, 4, 1, "", "n_div"], [8, 4, 1, "", "n_monomorphic"], [8, 4, 1, "", "n_polymorphic"], [8, 4, 1, "", "n_sites"], [8, 1, 1, "", "normalize"], [8, 1, 1, "", "plot"], [8, 4, 1, "", "polymorphic"], [8, 1, 1, "", "prefix"], [8, 1, 1, "", "print"], [8, 1, 1, "", "rename"], [8, 1, 1, "", "replace_dots"], [8, 1, 1, "", "sort_types"], [8, 1, 1, "", "to_dataframe"], [8, 1, 1, "", "to_dict"], [8, 1, 1, "", "to_file"], [8, 1, 1, "", "to_list"], [8, 1, 1, "", "to_multi_index"], [8, 1, 1, "", "to_numpy"], [8, 1, 1, "", "to_single_index"], [8, 1, 1, "", "to_spectra"], [8, 4, 1, "", "types"]], "fastdfe.spectrum.Spectrum": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "copy"], [9, 1, 1, "", "fold"], [9, 1, 1, "", "from_list"], [9, 1, 1, "", "from_polydfe"], [9, 1, 1, "", "from_polymorphic"], [9, 4, 1, "", "has_div"], [9, 1, 1, "", "is_folded"], [9, 4, 1, "", "n"], [9, 4, 1, "", "n_div"], [9, 4, 1, "", "n_monomorphic"], [9, 4, 1, "", "n_polymorphic"], [9, 4, 1, "", "n_sites"], [9, 1, 1, "", "plot"], [9, 4, 1, "", "polymorphic"], [9, 1, 1, "", "standard_kingman"], [9, 4, 1, "", "theta"], [9, 1, 1, "", "to_list"], [9, 1, 1, "", "to_numpy"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "fastdf": 0, "": 0, "document": 0, "get": 0, "start": 0, "python": 0, "r": [0, 13, 16], "refer": 0, "api": 0, "indic": 0, "tabl": 0, "introduct": 1, "motiv": 1, "how": 1, "work": [1, 14], "featur": 1, "vcf": [2, 4, 7, 11], "annot": 2, "configur": [3, 17], "class": [3, 8, 9], "filtrat": 4, "infer": [5, 10, 12, 13, 17], "parametr": [6, 19], "pars": [7, 11], "spectra": [8, 14], "spectrum": 9, "dfe": [10, 19], "base": 10, "bootstrap": [10, 12, 13], "fix": 10, "paramet": 10, "nest": 10, "model": 10, "comparison": 10, "visual": 10, "likelihood": 10, "serial": [10, 12, 13, 14], "fold": [10, 14], "joint": [10, 17], "covari": 10, "sf": [11, 14], "from": 11, "file": [11, 17], "quickstart": [12, 13], "basic": [12, 13, 17], "subtyp": 14, "group": 14, "prefix": 14, "instal": [15, 16], "pypi": 15, "conda": 15, "usag": 17, "json": 17, "exampl": 17, "miscellan": 18, "log": 18, "debug": 18, "seed": 18}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to fastDFE\u2019s documentation": [[0, "welcome-to-fastdfe-s-documentation"]], "Getting Started (Python)": [[0, null]], "Getting Started (R)": [[0, null]], "Python Reference": [[0, null]], "API Reference": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Introduction": [[1, "introduction"]], "Motivation": [[1, "motivation"]], "How it works": [[1, "how-it-works"]], "Features": [[1, "features"]], "VCF Annotation": [[2, "module-fastdfe.annotation"]], "Configuration class": [[3, "configuration-class"]], "VCF Filtration": [[4, "module-fastdfe.filtration"]], "Inference": [[5, "inference"]], "Parametrizations": [[6, "module-fastdfe.parametrization"]], "VCF Parsing": [[7, "module-fastdfe.parser"]], "Spectra class": [[8, "spectra-class"]], "Spectrum class": [[9, "spectrum-class"]], "DFE Inference": [[10, "dfe-inference"]], "Base inference": [[10, "base-inference"]], "Bootstrapping": [[10, "bootstrapping"], [12, "bootstrapping"], [13, "bootstrapping"]], "Fixing parameters": [[10, "fixing-parameters"]], "Nested model comparison": [[10, "nested-model-comparison"]], "Visualize likelihoods": [[10, "visualize-likelihoods"]], "Serialization": [[10, "serialization"], [12, "serialization"], [13, "serialization"], [14, "serialization"]], "Folded inference": [[10, "folded-inference"]], "Joint inference": [[10, "joint-inference"]], "Model comparison": [[10, "model-comparison"], [10, "id1"]], "Covariates": [[10, "covariates"]], "Parsing SFS from VCF file": [[11, "parsing-sfs-from-vcf-file"]], "Quickstart": [[12, "quickstart"]], "Basic inference": [[12, "basic-inference"], [13, "basic-inference"]], "Quickstart in R": [[13, "quickstart-in-r"]], "Working with SFS": [[14, "working-with-sfs"]], "Subtypes": [[14, "subtypes"]], "Grouping": [[14, "grouping"]], "Prefixing": [[14, "prefixing"]], "Folded spectra": [[14, "folded-spectra"]], "Installation": [[15, "installation"], [16, "installation"]], "PyPi": [[15, "pypi"]], "Conda": [[15, "conda"]], "R": [[16, "r"]], "Configuration files": [[17, "configuration-files"]], "Basic usage": [[17, "basic-usage"]], "JSON files": [[17, "json-files"]], "Joint inference example": [[17, "joint-inference-example"]], "Miscellaneous": [[18, "miscellaneous"]], "Logging": [[18, "logging"]], "Debugging": [[18, "debugging"]], "Seeding": [[18, "seeding"]], "DFE parametrizations": [[19, "dfe-parametrizations"]]}, "indexentries": {"ancestralalleleannotation (class in fastdfe.annotation)": [[2, "fastdfe.annotation.AncestralAlleleAnnotation"]], "annotation (class in fastdfe.annotation)": [[2, "fastdfe.annotation.Annotation"]], "annotator (class in fastdfe.annotation)": [[2, "fastdfe.annotation.Annotator"]], "degeneracyannotation (class in fastdfe.annotation)": [[2, "fastdfe.annotation.DegeneracyAnnotation"]], "maximumparsimonyannotation (class in fastdfe.annotation)": [[2, "fastdfe.annotation.MaximumParsimonyAnnotation"]], "synonymyannotation (class in fastdfe.annotation)": [[2, "fastdfe.annotation.SynonymyAnnotation"]], "__init__() (fastdfe.annotation.annotation method)": [[2, "fastdfe.annotation.Annotation.__init__"]], "__init__() (fastdfe.annotation.annotator method)": [[2, "fastdfe.annotation.Annotator.__init__"]], "__init__() (fastdfe.annotation.degeneracyannotation method)": [[2, "fastdfe.annotation.DegeneracyAnnotation.__init__"]], "__init__() (fastdfe.annotation.maximumparsimonyannotation method)": [[2, "fastdfe.annotation.MaximumParsimonyAnnotation.__init__"]], "__init__() (fastdfe.annotation.synonymyannotation method)": [[2, "fastdfe.annotation.SynonymyAnnotation.__init__"]], "aliases (fastdfe.annotation.degeneracyannotation attribute)": [[2, "fastdfe.annotation.DegeneracyAnnotation.aliases"]], "aliases (fastdfe.annotation.synonymyannotation attribute)": [[2, "fastdfe.annotation.SynonymyAnnotation.aliases"]], "annotate() (fastdfe.annotation.annotator method)": [[2, "fastdfe.annotation.Annotator.annotate"]], "annotate_site() (fastdfe.annotation.annotation method)": [[2, "fastdfe.annotation.Annotation.annotate_site"]], "annotate_site() (fastdfe.annotation.degeneracyannotation method)": [[2, "fastdfe.annotation.DegeneracyAnnotation.annotate_site"]], "annotate_site() (fastdfe.annotation.maximumparsimonyannotation method)": [[2, "fastdfe.annotation.MaximumParsimonyAnnotation.annotate_site"]], "annotate_site() (fastdfe.annotation.synonymyannotation method)": [[2, "fastdfe.annotation.SynonymyAnnotation.annotate_site"]], "annotator (fastdfe.annotation.annotation attribute)": [[2, "fastdfe.annotation.Annotation.annotator"]], "cd (fastdfe.annotation.degeneracyannotation attribute)": [[2, "fastdfe.annotation.DegeneracyAnnotation.cd"]], "cd_next (fastdfe.annotation.degeneracyannotation attribute)": [[2, "fastdfe.annotation.DegeneracyAnnotation.cd_next"]], "cd_prev (fastdfe.annotation.degeneracyannotation attribute)": [[2, "fastdfe.annotation.DegeneracyAnnotation.cd_prev"]], "contig (fastdfe.annotation.degeneracyannotation attribute)": [[2, "fastdfe.annotation.DegeneracyAnnotation.contig"]], "count_target_sites() (fastdfe.annotation.annotation static method)": [[2, "fastdfe.annotation.Annotation.count_target_sites"]], "errors (fastdfe.annotation.degeneracyannotation attribute)": [[2, "fastdfe.annotation.DegeneracyAnnotation.errors"]], "fastdfe.annotation": [[2, "module-fastdfe.annotation"]], "is_synonymous() (fastdfe.annotation.synonymyannotation static method)": [[2, "fastdfe.annotation.SynonymyAnnotation.is_synonymous"]], "logger (fastdfe.annotation.annotation attribute)": [[2, "fastdfe.annotation.Annotation.logger"]], "mismatches (fastdfe.annotation.degeneracyannotation attribute)": [[2, "fastdfe.annotation.DegeneracyAnnotation.mismatches"]], "module": [[2, "module-fastdfe.annotation"], [4, "module-fastdfe.filtration"], [6, "module-fastdfe.parametrization"], [7, "module-fastdfe.parser"]], "mutate() (fastdfe.annotation.synonymyannotation static method)": [[2, "fastdfe.annotation.SynonymyAnnotation.mutate"]], "n_annotated (fastdfe.annotation.annotation attribute)": [[2, "fastdfe.annotation.Annotation.n_annotated"]], "n_skipped (fastdfe.annotation.degeneracyannotation attribute)": [[2, "fastdfe.annotation.DegeneracyAnnotation.n_skipped"]], "n_snpeff_comparisons (fastdfe.annotation.synonymyannotation attribute)": [[2, "fastdfe.annotation.SynonymyAnnotation.n_snpeff_comparisons"]], "n_target_sites (fastdfe.annotation.degeneracyannotation attribute)": [[2, "fastdfe.annotation.DegeneracyAnnotation.n_target_sites"]], "n_vep_comparisons (fastdfe.annotation.synonymyannotation attribute)": [[2, "fastdfe.annotation.SynonymyAnnotation.n_vep_comparisons"]], "samples (fastdfe.annotation.maximumparsimonyannotation attribute)": [[2, "fastdfe.annotation.MaximumParsimonyAnnotation.samples"]], "snpeff_mismatches (fastdfe.annotation.synonymyannotation attribute)": [[2, "fastdfe.annotation.SynonymyAnnotation.snpeff_mismatches"]], "vep_mismatches (fastdfe.annotation.synonymyannotation attribute)": [[2, "fastdfe.annotation.SynonymyAnnotation.vep_mismatches"]], "config (class in fastdfe.config)": [[3, "fastdfe.config.Config"]], "__init__() (fastdfe.config.config method)": [[3, "fastdfe.config.Config.__init__"]], "create_polydfe_init_file() (fastdfe.config.config method)": [[3, "fastdfe.config.Config.create_polydfe_init_file"]], "create_polydfe_sfs_config() (fastdfe.config.config method)": [[3, "fastdfe.config.Config.create_polydfe_sfs_config"]], "from_dict() (fastdfe.config.config static method)": [[3, "fastdfe.config.Config.from_dict"]], "from_file() (fastdfe.config.config static method)": [[3, "fastdfe.config.Config.from_file"]], "from_json() (fastdfe.config.config static method)": [[3, "fastdfe.config.Config.from_json"]], "from_yaml() (fastdfe.config.config static method)": [[3, "fastdfe.config.Config.from_yaml"]], "get_polydfe_model() (fastdfe.config.config method)": [[3, "fastdfe.config.Config.get_polydfe_model"]], "parse_polydfe_init_file() (fastdfe.config.config method)": [[3, "fastdfe.config.Config.parse_polydfe_init_file"]], "parse_polydfe_sfs_config() (fastdfe.config.config method)": [[3, "fastdfe.config.Config.parse_polydfe_sfs_config"]], "to_dict() (fastdfe.config.config method)": [[3, "fastdfe.config.Config.to_dict"]], "to_file() (fastdfe.config.config method)": [[3, "fastdfe.config.Config.to_file"]], "to_json() (fastdfe.config.config method)": [[3, "fastdfe.config.Config.to_json"]], "to_yaml() (fastdfe.config.config method)": [[3, "fastdfe.config.Config.to_yaml"]], "update() (fastdfe.config.config method)": [[3, "fastdfe.config.Config.update"]], "allfiltration (class in fastdfe.filtration)": [[4, "fastdfe.filtration.AllFiltration"]], "biasedgcconversionfiltration (class in fastdfe.filtration)": [[4, "fastdfe.filtration.BiasedGCConversionFiltration"]], "codingsequencefiltration (class in fastdfe.filtration)": [[4, "fastdfe.filtration.CodingSequenceFiltration"]], "deviantoutgroupfiltration (class in fastdfe.filtration)": [[4, "fastdfe.filtration.DeviantOutgroupFiltration"]], "filterer (class in fastdfe.filtration)": [[4, "fastdfe.filtration.Filterer"]], "filtration (class in fastdfe.filtration)": [[4, "fastdfe.filtration.Filtration"]], "nofiltration (class in fastdfe.filtration)": [[4, "fastdfe.filtration.NoFiltration"]], "polyallelicfiltration (class in fastdfe.filtration)": [[4, "fastdfe.filtration.PolyAllelicFiltration"]], "snpfiltration (class in fastdfe.filtration)": [[4, "fastdfe.filtration.SNPFiltration"]], "snvfiltration (class in fastdfe.filtration)": [[4, "fastdfe.filtration.SNVFiltration"]], "__init__() (fastdfe.filtration.codingsequencefiltration method)": [[4, "fastdfe.filtration.CodingSequenceFiltration.__init__"]], "__init__() (fastdfe.filtration.deviantoutgroupfiltration method)": [[4, "fastdfe.filtration.DeviantOutgroupFiltration.__init__"]], "__init__() (fastdfe.filtration.filterer method)": [[4, "fastdfe.filtration.Filterer.__init__"]], "__init__() (fastdfe.filtration.filtration method)": [[4, "fastdfe.filtration.Filtration.__init__"]], "aliases (fastdfe.filtration.codingsequencefiltration attribute)": [[4, "fastdfe.filtration.CodingSequenceFiltration.aliases"]], "cd (fastdfe.filtration.codingsequencefiltration attribute)": [[4, "fastdfe.filtration.CodingSequenceFiltration.cd"]], "create_masks() (fastdfe.filtration.deviantoutgroupfiltration method)": [[4, "fastdfe.filtration.DeviantOutgroupFiltration.create_masks"]], "fastdfe.filtration": [[4, "module-fastdfe.filtration"]], "filter() (fastdfe.filtration.filterer method)": [[4, "fastdfe.filtration.Filterer.filter"]], "filter_site() (fastdfe.filtration.allfiltration method)": [[4, "fastdfe.filtration.AllFiltration.filter_site"]], "filter_site() (fastdfe.filtration.biasedgcconversionfiltration method)": [[4, "fastdfe.filtration.BiasedGCConversionFiltration.filter_site"]], "filter_site() (fastdfe.filtration.codingsequencefiltration method)": [[4, "fastdfe.filtration.CodingSequenceFiltration.filter_site"]], "filter_site() (fastdfe.filtration.deviantoutgroupfiltration method)": [[4, "fastdfe.filtration.DeviantOutgroupFiltration.filter_site"]], "filter_site() (fastdfe.filtration.filtration method)": [[4, "fastdfe.filtration.Filtration.filter_site"]], "filter_site() (fastdfe.filtration.nofiltration method)": [[4, "fastdfe.filtration.NoFiltration.filter_site"]], "filter_site() (fastdfe.filtration.polyallelicfiltration method)": [[4, "fastdfe.filtration.PolyAllelicFiltration.filter_site"]], "filter_site() (fastdfe.filtration.snpfiltration method)": [[4, "fastdfe.filtration.SNPFiltration.filter_site"]], "filter_site() (fastdfe.filtration.snvfiltration method)": [[4, "fastdfe.filtration.SNVFiltration.filter_site"]], "filtrations (fastdfe.filtration.filterer attribute)": [[4, "fastdfe.filtration.Filterer.filtrations"]], "ingroup_mask (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[4, "fastdfe.filtration.DeviantOutgroupFiltration.ingroup_mask"]], "ingroups (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[4, "fastdfe.filtration.DeviantOutgroupFiltration.ingroups"]], "is_filtered() (fastdfe.filtration.filterer method)": [[4, "fastdfe.filtration.Filterer.is_filtered"]], "n_filtered (fastdfe.filtration.filterer attribute)": [[4, "fastdfe.filtration.Filterer.n_filtered"]], "n_filtered (fastdfe.filtration.filtration attribute)": [[4, "fastdfe.filtration.Filtration.n_filtered"]], "n_processed (fastdfe.filtration.codingsequencefiltration attribute)": [[4, "fastdfe.filtration.CodingSequenceFiltration.n_processed"]], "outgroup_mask (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[4, "fastdfe.filtration.DeviantOutgroupFiltration.outgroup_mask"]], "outgroups (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[4, "fastdfe.filtration.DeviantOutgroupFiltration.outgroups"]], "output (fastdfe.filtration.filterer attribute)": [[4, "fastdfe.filtration.Filterer.output"]], "samples (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[4, "fastdfe.filtration.DeviantOutgroupFiltration.samples"]], "strict_mode (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[4, "fastdfe.filtration.DeviantOutgroupFiltration.strict_mode"]], "baseinference (class in fastdfe.base_inference)": [[5, "fastdfe.base_inference.BaseInference"]], "covariate (class in fastdfe.optimization)": [[5, "fastdfe.optimization.Covariate"]], "inference (class in fastdfe.abstract_inference)": [[5, "fastdfe.abstract_inference.Inference"]], "jointinference (class in fastdfe.joint_inference)": [[5, "fastdfe.joint_inference.JointInference"]], "l2_residual (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.L2_residual"]], "l2_residual (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.L2_residual"]], "sharedparams (class in fastdfe.optimization)": [[5, "fastdfe.optimization.SharedParams"]], "__init__() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.__init__"]], "__init__() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.__init__"]], "__init__() (fastdfe.optimization.covariate method)": [[5, "fastdfe.optimization.Covariate.__init__"]], "__init__() (fastdfe.optimization.sharedparams method)": [[5, "fastdfe.optimization.SharedParams.__init__"]], "add_alpha_to_bootstraps() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.add_alpha_to_bootstraps"]], "add_alpha_to_bootstraps() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.add_alpha_to_bootstraps"]], "add_covariates() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.add_covariates"]], "add_covariates_as_shared() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.add_covariates_as_shared"]], "add_demography() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.add_demography"]], "add_demography() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.add_demography"]], "adjust_polarization() (fastdfe.base_inference.baseinference static method)": [[5, "fastdfe.base_inference.BaseInference.adjust_polarization"]], "adjust_polarization() (fastdfe.joint_inference.jointinference static method)": [[5, "fastdfe.joint_inference.JointInference.adjust_polarization"]], "alpha (fastdfe.base_inference.baseinference property)": [[5, "fastdfe.base_inference.BaseInference.alpha"]], "alpha (fastdfe.joint_inference.jointinference property)": [[5, "fastdfe.joint_inference.JointInference.alpha"]], "apply() (fastdfe.optimization.covariate method)": [[5, "fastdfe.optimization.Covariate.apply"]], "apply_default() (fastdfe.optimization.covariate method)": [[5, "fastdfe.optimization.Covariate.apply_default"]], "assign_result() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.assign_result"]], "assign_result() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.assign_result"]], "bootstrap() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.bootstrap"]], "bootstrap() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.bootstrap"]], "bootstrap_if_required() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.bootstrap_if_required"]], "bootstrap_results (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.bootstrap_results"]], "bootstrap_results (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.bootstrap_results"]], "bootstraps (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.bootstraps"]], "bootstraps (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.bootstraps"]], "bounds (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.bounds"]], "bounds (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.bounds"]], "bounds (fastdfe.optimization.covariate attribute)": [[5, "fastdfe.optimization.Covariate.bounds"]], "bounds_scale (fastdfe.optimization.covariate attribute)": [[5, "fastdfe.optimization.Covariate.bounds_scale"]], "callback (fastdfe.optimization.covariate attribute)": [[5, "fastdfe.optimization.Covariate.callback"]], "check_fixed_params_exist() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.check_fixed_params_exist"]], "check_fixed_params_exist() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.check_fixed_params_exist"]], "check_no_shared_params_fixed() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.check_no_shared_params_fixed"]], "check_shared_params() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.check_shared_params"]], "compare_nested_likelihoods() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.compare_nested_likelihoods"]], "compare_nested_likelihoods() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.compare_nested_likelihoods"]], "compare_nested_models() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.compare_nested_models"]], "compare_nested_models() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.compare_nested_models"]], "compute_histogram() (fastdfe.abstract_inference.inference static method)": [[5, "fastdfe.abstract_inference.Inference.compute_histogram"]], "covariates (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.covariates"]], "create_config() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.create_config"]], "create_config() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.create_config"]], "default_bounds (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.default_bounds"]], "default_bounds (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.default_bounds"]], "default_opts_mle (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.default_opts_mle"]], "default_opts_mle (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.default_opts_mle"]], "default_scales (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.default_scales"]], "default_scales (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.default_scales"]], "default_x0 (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.default_x0"]], "default_x0 (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.default_x0"]], "determine_unshared_covariates() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.determine_unshared_covariates"]], "discretization (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.discretization"]], "discretization (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.discretization"]], "do_bootstrap (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.do_bootstrap"]], "do_bootstrap (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.do_bootstrap"]], "evaluate_likelihood() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.evaluate_likelihood"]], "evaluate_likelihood() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.evaluate_likelihood"]], "execution_time (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.execution_time"]], "execution_time (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.execution_time"]], "fixed_params (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.fixed_params"]], "fixed_params (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.fixed_params"]], "folded (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.folded"]], "folded (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.folded"]], "from_config() (fastdfe.base_inference.baseinference class method)": [[5, "fastdfe.base_inference.BaseInference.from_config"]], "from_config() (fastdfe.joint_inference.jointinference class method)": [[5, "fastdfe.joint_inference.JointInference.from_config"]], "from_config_file() (fastdfe.base_inference.baseinference class method)": [[5, "fastdfe.base_inference.BaseInference.from_config_file"]], "from_config_file() (fastdfe.joint_inference.jointinference class method)": [[5, "fastdfe.joint_inference.JointInference.from_config_file"]], "from_file() (fastdfe.base_inference.baseinference class method)": [[5, "fastdfe.base_inference.BaseInference.from_file"]], "from_file() (fastdfe.joint_inference.jointinference class method)": [[5, "fastdfe.joint_inference.JointInference.from_file"]], "from_json() (fastdfe.base_inference.baseinference class method)": [[5, "fastdfe.base_inference.BaseInference.from_json"]], "from_json() (fastdfe.joint_inference.jointinference class method)": [[5, "fastdfe.joint_inference.JointInference.from_json"]], "get_l2_residual() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_L2_residual"]], "get_alpha() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.get_alpha"]], "get_alpha() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_alpha"]], "get_bootstrap_param_names() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.get_bootstrap_param_names"]], "get_bootstrap_param_names() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_bootstrap_param_names"]], "get_bootstrap_params() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.get_bootstrap_params"]], "get_bootstrap_params() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_bootstrap_params"]], "get_bounds_linear() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.get_bounds_linear"]], "get_bounds_linear() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_bounds_linear"]], "get_cis_params_mle() (fastdfe.abstract_inference.inference static method)": [[5, "fastdfe.abstract_inference.Inference.get_cis_params_mle"]], "get_cis_params_mle() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.get_cis_params_mle"]], "get_cis_params_mle() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_cis_params_mle"]], "get_counts() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.get_counts"]], "get_counts() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_counts"]], "get_discretized() (fastdfe.abstract_inference.inference static method)": [[5, "fastdfe.abstract_inference.Inference.get_discretized"]], "get_discretized() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.get_discretized"]], "get_discretized() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_discretized"]], "get_errors_discretized_dfe() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.get_errors_discretized_dfe"]], "get_errors_discretized_dfe() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_errors_discretized_dfe"]], "get_errors_params_mle() (fastdfe.abstract_inference.inference static method)": [[5, "fastdfe.abstract_inference.Inference.get_errors_params_mle"]], "get_fixed_param_names() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.get_fixed_param_names"]], "get_fixed_param_names() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_fixed_param_names"]], "get_inferences() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_inferences"]], "get_n_optimized() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.get_n_optimized"]], "get_n_optimized() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_n_optimized"]], "get_optimized_param_names() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.get_optimized_param_names"]], "get_optimized_param_names() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_optimized_param_names"]], "get_scales_linear() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.get_scales_linear"]], "get_scales_linear() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_scales_linear"]], "get_shared_param_names() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_shared_param_names"]], "get_stats_discretized() (fastdfe.abstract_inference.inference static method)": [[5, "fastdfe.abstract_inference.Inference.get_stats_discretized"]], "get_summary() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.get_summary"]], "get_summary() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_summary"]], "get_x0() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.get_x0"]], "get_x0() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.get_x0"]], "joint_inference_makes_sense() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.joint_inference_makes_sense"]], "joint_inferences (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.joint_inferences"]], "likelihood (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.likelihood"]], "likelihood (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.likelihood"]], "likelihoods (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.likelihoods"]], "likelihoods (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.likelihoods"]], "locked (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.locked"]], "locked (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.locked"]], "lrt() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.lrt"]], "lrt() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.lrt"]], "marginal_inferences (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.marginal_inferences"]], "marginals_without_all() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.marginals_without_all"]], "model (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.model"]], "model (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.model"]], "model_sfs() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.model_sfs"]], "model_sfs() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.model_sfs"]], "n (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.n"]], "n (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.n"]], "n_bootstraps (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.n_bootstraps"]], "n_bootstraps (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.n_bootstraps"]], "n_runs (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.n_runs"]], "n_runs (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.n_runs"]], "optimization (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.optimization"]], "optimization (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.optimization"]], "parallelize (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.parallelize"]], "parallelize (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.parallelize"]], "param (fastdfe.optimization.covariate attribute)": [[5, "fastdfe.optimization.Covariate.param"]], "param_names (fastdfe.base_inference.baseinference property)": [[5, "fastdfe.base_inference.BaseInference.param_names"]], "param_names (fastdfe.joint_inference.jointinference property)": [[5, "fastdfe.joint_inference.JointInference.param_names"]], "params (fastdfe.optimization.sharedparams attribute)": [[5, "fastdfe.optimization.SharedParams.params"]], "params_mle (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.params_mle"]], "params_mle (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.params_mle"]], "params_mle_raw (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.params_mle_raw"]], "perform_lrt_covariates() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.perform_lrt_covariates"]], "perform_lrt_shared() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.perform_lrt_shared"]], "plot_all() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.plot_all"]], "plot_all() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.plot_all"]], "plot_bucket_sizes() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.plot_bucket_sizes"]], "plot_bucket_sizes() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.plot_bucket_sizes"]], "plot_continuous() (fastdfe.abstract_inference.inference static method)": [[5, "fastdfe.abstract_inference.Inference.plot_continuous"]], "plot_continuous() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.plot_continuous"]], "plot_continuous() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.plot_continuous"]], "plot_discretized() (fastdfe.abstract_inference.inference static method)": [[5, "fastdfe.abstract_inference.Inference.plot_discretized"]], "plot_discretized() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.plot_discretized"]], "plot_discretized() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.plot_discretized"]], "plot_inferred_parameters() (fastdfe.abstract_inference.inference static method)": [[5, "fastdfe.abstract_inference.Inference.plot_inferred_parameters"]], "plot_inferred_parameters() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.plot_inferred_parameters"]], "plot_inferred_parameters() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.plot_inferred_parameters"]], "plot_inferred_parameters_boxplot() (fastdfe.abstract_inference.inference static method)": [[5, "fastdfe.abstract_inference.Inference.plot_inferred_parameters_boxplot"]], "plot_inferred_parameters_boxplot() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.plot_inferred_parameters_boxplot"]], "plot_inferred_parameters_boxplot() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.plot_inferred_parameters_boxplot"]], "plot_interval_density() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.plot_interval_density"]], "plot_interval_density() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.plot_interval_density"]], "plot_likelihoods() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.plot_likelihoods"]], "plot_likelihoods() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.plot_likelihoods"]], "plot_nested_likelihoods() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.plot_nested_likelihoods"]], "plot_nested_likelihoods() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.plot_nested_likelihoods"]], "plot_observed_sfs() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.plot_observed_sfs"]], "plot_observed_sfs() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.plot_observed_sfs"]], "plot_sfs_comparison() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.plot_sfs_comparison"]], "plot_sfs_comparison() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.plot_sfs_comparison"]], "raise_if_locked() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.raise_if_locked"]], "raise_if_locked() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.raise_if_locked"]], "report_result() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.report_result"]], "report_result() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.report_result"]], "resample_sfs() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.resample_sfs"]], "resample_sfs() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.resample_sfs"]], "result (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.result"]], "result (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.result"]], "rng (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.rng"]], "rng (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.rng"]], "run() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.run"]], "run() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.run"]], "run_bootstrap_sample() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.run_bootstrap_sample"]], "run_bootstrap_sample() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.run_bootstrap_sample"]], "run_if_required() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.run_if_required"]], "run_if_required() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.run_if_required"]], "run_if_required_wrapper() (fastdfe.base_inference.baseinference static method)": [[5, "fastdfe.base_inference.BaseInference.run_if_required_wrapper"]], "run_if_required_wrapper() (fastdfe.joint_inference.jointinference static method)": [[5, "fastdfe.joint_inference.JointInference.run_if_required_wrapper"]], "run_joint() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.run_joint"]], "run_joint_bootstrap_sample() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.run_joint_bootstrap_sample"]], "run_joint_without_covariates() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.run_joint_without_covariates"]], "run_marginal() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.run_marginal"]], "scales (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.scales"]], "scales (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.scales"]], "seed (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.seed"]], "seed (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.seed"]], "sfs_mle (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.sfs_mle"]], "sfs_mle (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.sfs_mle"]], "sfs_neut (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.sfs_neut"]], "sfs_neut (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.sfs_neut"]], "sfs_sel (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.sfs_sel"]], "sfs_sel (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.sfs_sel"]], "shared_params (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.shared_params"]], "theta (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.theta"]], "theta (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.theta"]], "to_file() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.to_file"]], "to_file() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.to_file"]], "to_json() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.to_json"]], "to_json() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.to_json"]], "types (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.types"]], "types (fastdfe.optimization.sharedparams attribute)": [[5, "fastdfe.optimization.SharedParams.types"]], "update_properties() (fastdfe.base_inference.baseinference method)": [[5, "fastdfe.base_inference.BaseInference.update_properties"]], "update_properties() (fastdfe.joint_inference.jointinference method)": [[5, "fastdfe.joint_inference.JointInference.update_properties"]], "values (fastdfe.optimization.covariate attribute)": [[5, "fastdfe.optimization.Covariate.values"]], "x0 (fastdfe.base_inference.baseinference attribute)": [[5, "fastdfe.base_inference.BaseInference.x0"]], "x0 (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.x0"]], "x0 (fastdfe.optimization.covariate attribute)": [[5, "fastdfe.optimization.Covariate.x0"]], "x0_cov (fastdfe.joint_inference.jointinference attribute)": [[5, "fastdfe.joint_inference.JointInference.x0_cov"]], "discretefractionalparametrization (class in fastdfe.parametrization)": [[6, "fastdfe.parametrization.DiscreteFractionalParametrization"]], "discreteparametrization (class in fastdfe.parametrization)": [[6, "fastdfe.parametrization.DiscreteParametrization"]], "displacedgammaparametrization (class in fastdfe.parametrization)": [[6, "fastdfe.parametrization.DisplacedGammaParametrization"]], "gammadiscreteparametrization (class in fastdfe.parametrization)": [[6, "fastdfe.parametrization.GammaDiscreteParametrization"]], "gammaexpparametrization (class in fastdfe.parametrization)": [[6, "fastdfe.parametrization.GammaExpParametrization"]], "parametrization (class in fastdfe.parametrization)": [[6, "fastdfe.parametrization.Parametrization"]], "__init__() (fastdfe.parametrization.discretefractionalparametrization method)": [[6, "fastdfe.parametrization.DiscreteFractionalParametrization.__init__"]], "__init__() (fastdfe.parametrization.discreteparametrization method)": [[6, "fastdfe.parametrization.DiscreteParametrization.__init__"]], "__init__() (fastdfe.parametrization.parametrization method)": [[6, "fastdfe.parametrization.Parametrization.__init__"]], "bounds (fastdfe.parametrization.displacedgammaparametrization attribute)": [[6, "fastdfe.parametrization.DisplacedGammaParametrization.bounds"]], "bounds (fastdfe.parametrization.gammadiscreteparametrization attribute)": [[6, "fastdfe.parametrization.GammaDiscreteParametrization.bounds"]], "bounds (fastdfe.parametrization.gammaexpparametrization attribute)": [[6, "fastdfe.parametrization.GammaExpParametrization.bounds"]], "bounds (fastdfe.parametrization.parametrization attribute)": [[6, "fastdfe.parametrization.Parametrization.bounds"]], "fastdfe.parametrization": [[6, "module-fastdfe.parametrization"]], "fixed_params (fastdfe.parametrization.discretefractionalparametrization attribute)": [[6, "fastdfe.parametrization.DiscreteFractionalParametrization.fixed_params"]], "fixed_params (fastdfe.parametrization.discreteparametrization attribute)": [[6, "fastdfe.parametrization.DiscreteParametrization.fixed_params"]], "get_cdf() (fastdfe.parametrization.discretefractionalparametrization method)": [[6, "fastdfe.parametrization.DiscreteFractionalParametrization.get_cdf"]], "get_cdf() (fastdfe.parametrization.discreteparametrization method)": [[6, "fastdfe.parametrization.DiscreteParametrization.get_cdf"]], "get_cdf() (fastdfe.parametrization.displacedgammaparametrization static method)": [[6, "fastdfe.parametrization.DisplacedGammaParametrization.get_cdf"]], "get_cdf() (fastdfe.parametrization.gammadiscreteparametrization static method)": [[6, "fastdfe.parametrization.GammaDiscreteParametrization.get_cdf"]], "get_cdf() (fastdfe.parametrization.gammaexpparametrization static method)": [[6, "fastdfe.parametrization.GammaExpParametrization.get_cdf"]], "get_cdf() (fastdfe.parametrization.parametrization method)": [[6, "fastdfe.parametrization.Parametrization.get_cdf"]], "get_pdf() (fastdfe.parametrization.discretefractionalparametrization method)": [[6, "fastdfe.parametrization.DiscreteFractionalParametrization.get_pdf"]], "get_pdf() (fastdfe.parametrization.discreteparametrization method)": [[6, "fastdfe.parametrization.DiscreteParametrization.get_pdf"]], "get_pdf() (fastdfe.parametrization.displacedgammaparametrization static method)": [[6, "fastdfe.parametrization.DisplacedGammaParametrization.get_pdf"]], "get_pdf() (fastdfe.parametrization.gammadiscreteparametrization static method)": [[6, "fastdfe.parametrization.GammaDiscreteParametrization.get_pdf"]], "get_pdf() (fastdfe.parametrization.gammaexpparametrization static method)": [[6, "fastdfe.parametrization.GammaExpParametrization.get_pdf"]], "get_pdf() (fastdfe.parametrization.parametrization method)": [[6, "fastdfe.parametrization.Parametrization.get_pdf"]], "interval_sizes (fastdfe.parametrization.discretefractionalparametrization attribute)": [[6, "fastdfe.parametrization.DiscreteFractionalParametrization.interval_sizes"]], "interval_sizes (fastdfe.parametrization.discreteparametrization attribute)": [[6, "fastdfe.parametrization.DiscreteParametrization.interval_sizes"]], "intervals (fastdfe.parametrization.discretefractionalparametrization attribute)": [[6, "fastdfe.parametrization.DiscreteFractionalParametrization.intervals"]], "intervals (fastdfe.parametrization.discreteparametrization attribute)": [[6, "fastdfe.parametrization.DiscreteParametrization.intervals"]], "k (fastdfe.parametrization.discretefractionalparametrization attribute)": [[6, "fastdfe.parametrization.DiscreteFractionalParametrization.k"]], "k (fastdfe.parametrization.discreteparametrization attribute)": [[6, "fastdfe.parametrization.DiscreteParametrization.k"]], "param_names (fastdfe.parametrization.discretefractionalparametrization attribute)": [[6, "fastdfe.parametrization.DiscreteFractionalParametrization.param_names"]], "param_names (fastdfe.parametrization.discreteparametrization attribute)": [[6, "fastdfe.parametrization.DiscreteParametrization.param_names"]], "param_names (fastdfe.parametrization.parametrization attribute)": [[6, "fastdfe.parametrization.Parametrization.param_names"]], "params (fastdfe.parametrization.discretefractionalparametrization attribute)": [[6, "fastdfe.parametrization.DiscreteFractionalParametrization.params"]], "params (fastdfe.parametrization.discreteparametrization attribute)": [[6, "fastdfe.parametrization.DiscreteParametrization.params"]], "scales (fastdfe.parametrization.displacedgammaparametrization attribute)": [[6, "fastdfe.parametrization.DisplacedGammaParametrization.scales"]], "scales (fastdfe.parametrization.gammadiscreteparametrization attribute)": [[6, "fastdfe.parametrization.GammaDiscreteParametrization.scales"]], "scales (fastdfe.parametrization.gammaexpparametrization attribute)": [[6, "fastdfe.parametrization.GammaExpParametrization.scales"]], "scales (fastdfe.parametrization.parametrization attribute)": [[6, "fastdfe.parametrization.Parametrization.scales"]], "submodels (fastdfe.parametrization.displacedgammaparametrization attribute)": [[6, "fastdfe.parametrization.DisplacedGammaParametrization.submodels"]], "submodels (fastdfe.parametrization.gammadiscreteparametrization attribute)": [[6, "fastdfe.parametrization.GammaDiscreteParametrization.submodels"]], "submodels (fastdfe.parametrization.gammaexpparametrization attribute)": [[6, "fastdfe.parametrization.GammaExpParametrization.submodels"]], "submodels (fastdfe.parametrization.parametrization attribute)": [[6, "fastdfe.parametrization.Parametrization.submodels"]], "to_fractional() (fastdfe.parametrization.discretefractionalparametrization method)": [[6, "fastdfe.parametrization.DiscreteFractionalParametrization.to_fractional"]], "to_nominal() (fastdfe.parametrization.discretefractionalparametrization method)": [[6, "fastdfe.parametrization.DiscreteFractionalParametrization.to_nominal"]], "x0 (fastdfe.parametrization.displacedgammaparametrization attribute)": [[6, "fastdfe.parametrization.DisplacedGammaParametrization.x0"]], "x0 (fastdfe.parametrization.gammadiscreteparametrization attribute)": [[6, "fastdfe.parametrization.GammaDiscreteParametrization.x0"]], "x0 (fastdfe.parametrization.gammaexpparametrization attribute)": [[6, "fastdfe.parametrization.GammaExpParametrization.x0"]], "x0 (fastdfe.parametrization.parametrization attribute)": [[6, "fastdfe.parametrization.Parametrization.x0"]], "ancestralbasestratification (class in fastdfe.parser)": [[7, "fastdfe.parser.AncestralBaseStratification"]], "basecontextstratification (class in fastdfe.parser)": [[7, "fastdfe.parser.BaseContextStratification"]], "basetransitionstratification (class in fastdfe.parser)": [[7, "fastdfe.parser.BaseTransitionStratification"]], "chunkedstratification (class in fastdfe.parser)": [[7, "fastdfe.parser.ChunkedStratification"]], "contigstratification (class in fastdfe.parser)": [[7, "fastdfe.parser.ContigStratification"]], "degeneracystratification (class in fastdfe.parser)": [[7, "fastdfe.parser.DegeneracyStratification"]], "genomepositiondependentstratification (class in fastdfe.parser)": [[7, "fastdfe.parser.GenomePositionDependentStratification"]], "parser (class in fastdfe.parser)": [[7, "fastdfe.parser.Parser"]], "snpeffstratification (class in fastdfe.parser)": [[7, "fastdfe.parser.SnpEffStratification"]], "stratification (class in fastdfe.parser)": [[7, "fastdfe.parser.Stratification"]], "synonymystratification (class in fastdfe.parser)": [[7, "fastdfe.parser.SynonymyStratification"]], "transitiontransversionstratification (class in fastdfe.parser)": [[7, "fastdfe.parser.TransitionTransversionStratification"]], "vepstratification (class in fastdfe.parser)": [[7, "fastdfe.parser.VEPStratification"]], "__init__() (fastdfe.parser.basecontextstratification method)": [[7, "fastdfe.parser.BaseContextStratification.__init__"]], "__init__() (fastdfe.parser.chunkedstratification method)": [[7, "fastdfe.parser.ChunkedStratification.__init__"]], "__init__() (fastdfe.parser.degeneracystratification method)": [[7, "fastdfe.parser.DegeneracyStratification.__init__"]], "__init__() (fastdfe.parser.parser method)": [[7, "fastdfe.parser.Parser.__init__"]], "__init__() (fastdfe.parser.stratification method)": [[7, "fastdfe.parser.Stratification.__init__"]], "aliases (fastdfe.parser.basecontextstratification attribute)": [[7, "fastdfe.parser.BaseContextStratification.aliases"]], "annotations (fastdfe.parser.parser attribute)": [[7, "fastdfe.parser.Parser.annotations"]], "chunk_sizes (fastdfe.parser.chunkedstratification attribute)": [[7, "fastdfe.parser.ChunkedStratification.chunk_sizes"]], "contig (fastdfe.parser.basecontextstratification attribute)": [[7, "fastdfe.parser.BaseContextStratification.contig"]], "counter (fastdfe.parser.chunkedstratification attribute)": [[7, "fastdfe.parser.ChunkedStratification.counter"]], "fastdfe.parser": [[7, "module-fastdfe.parser"]], "filtrations (fastdfe.parser.parser attribute)": [[7, "fastdfe.parser.Parser.filtrations"]], "get_degeneracy (fastdfe.parser.degeneracystratification attribute)": [[7, "fastdfe.parser.DegeneracyStratification.get_degeneracy"]], "get_type() (fastdfe.parser.ancestralbasestratification method)": [[7, "fastdfe.parser.AncestralBaseStratification.get_type"]], "get_type() (fastdfe.parser.basecontextstratification method)": [[7, "fastdfe.parser.BaseContextStratification.get_type"]], "get_type() (fastdfe.parser.basetransitionstratification method)": [[7, "fastdfe.parser.BaseTransitionStratification.get_type"]], "get_type() (fastdfe.parser.chunkedstratification method)": [[7, "fastdfe.parser.ChunkedStratification.get_type"]], "get_type() (fastdfe.parser.contigstratification method)": [[7, "fastdfe.parser.ContigStratification.get_type"]], "get_type() (fastdfe.parser.degeneracystratification method)": [[7, "fastdfe.parser.DegeneracyStratification.get_type"]], "get_type() (fastdfe.parser.stratification method)": [[7, "fastdfe.parser.Stratification.get_type"]], "get_type() (fastdfe.parser.synonymystratification method)": [[7, "fastdfe.parser.SynonymyStratification.get_type"]], "get_type() (fastdfe.parser.transitiontransversionstratification method)": [[7, "fastdfe.parser.TransitionTransversionStratification.get_type"]], "get_type() (fastdfe.parser.vepstratification method)": [[7, "fastdfe.parser.VEPStratification.get_type"]], "get_types() (fastdfe.parser.ancestralbasestratification method)": [[7, "fastdfe.parser.AncestralBaseStratification.get_types"]], "get_types() (fastdfe.parser.basecontextstratification method)": [[7, "fastdfe.parser.BaseContextStratification.get_types"]], "get_types() (fastdfe.parser.basetransitionstratification method)": [[7, "fastdfe.parser.BaseTransitionStratification.get_types"]], "get_types() (fastdfe.parser.chunkedstratification method)": [[7, "fastdfe.parser.ChunkedStratification.get_types"]], "get_types() (fastdfe.parser.contigstratification method)": [[7, "fastdfe.parser.ContigStratification.get_types"]], "get_types() (fastdfe.parser.degeneracystratification method)": [[7, "fastdfe.parser.DegeneracyStratification.get_types"]], "get_types() (fastdfe.parser.stratification method)": [[7, "fastdfe.parser.Stratification.get_types"]], "get_types() (fastdfe.parser.synonymystratification method)": [[7, "fastdfe.parser.SynonymyStratification.get_types"]], "get_types() (fastdfe.parser.transitiontransversionstratification method)": [[7, "fastdfe.parser.TransitionTransversionStratification.get_types"]], "get_types() (fastdfe.parser.vepstratification method)": [[7, "fastdfe.parser.VEPStratification.get_types"]], "info_tag (fastdfe.parser.snpeffstratification attribute)": [[7, "fastdfe.parser.SnpEffStratification.info_tag"]], "info_tag (fastdfe.parser.vepstratification attribute)": [[7, "fastdfe.parser.VEPStratification.info_tag"]], "n (fastdfe.parser.parser attribute)": [[7, "fastdfe.parser.Parser.n"]], "n_chunks (fastdfe.parser.chunkedstratification attribute)": [[7, "fastdfe.parser.ChunkedStratification.n_chunks"]], "n_flanking (fastdfe.parser.basecontextstratification attribute)": [[7, "fastdfe.parser.BaseContextStratification.n_flanking"]], "n_no_type (fastdfe.parser.stratification attribute)": [[7, "fastdfe.parser.Stratification.n_no_type"]], "n_skipped (fastdfe.parser.parser attribute)": [[7, "fastdfe.parser.Parser.n_skipped"]], "n_target_sites (fastdfe.parser.parser attribute)": [[7, "fastdfe.parser.Parser.n_target_sites"]], "parse() (fastdfe.parser.parser method)": [[7, "fastdfe.parser.Parser.parse"]], "parser (fastdfe.parser.stratification attribute)": [[7, "fastdfe.parser.Stratification.parser"]], "reader (fastdfe.parser.parser attribute)": [[7, "fastdfe.parser.Parser.reader"]], "samples (fastdfe.parser.parser attribute)": [[7, "fastdfe.parser.Parser.samples"]], "samples_mask (fastdfe.parser.parser attribute)": [[7, "fastdfe.parser.Parser.samples_mask"]], "sfs (fastdfe.parser.parser attribute)": [[7, "fastdfe.parser.Parser.sfs"]], "skip_non_polarized (fastdfe.parser.parser attribute)": [[7, "fastdfe.parser.Parser.skip_non_polarized"]], "stratifications (fastdfe.parser.parser attribute)": [[7, "fastdfe.parser.Parser.stratifications"]], "spectra (class in fastdfe.spectrum)": [[8, "fastdfe.spectrum.Spectra"]], "__init__() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.__init__"]], "all (fastdfe.spectrum.spectra property)": [[8, "fastdfe.spectrum.Spectra.all"]], "combine() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.combine"]], "copy() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.copy"]], "drop_empty() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.drop_empty"]], "drop_sparse() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.drop_sparse"]], "drop_zero_entries() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.drop_zero_entries"]], "fold() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.fold"]], "from_dataframe() (fastdfe.spectrum.spectra static method)": [[8, "fastdfe.spectrum.Spectra.from_dataframe"]], "from_dict() (fastdfe.spectrum.spectra static method)": [[8, "fastdfe.spectrum.Spectra.from_dict"]], "from_file() (fastdfe.spectrum.spectra static method)": [[8, "fastdfe.spectrum.Spectra.from_file"]], "from_list() (fastdfe.spectrum.spectra static method)": [[8, "fastdfe.spectrum.Spectra.from_list"]], "from_spectra() (fastdfe.spectrum.spectra static method)": [[8, "fastdfe.spectrum.Spectra.from_spectra"]], "from_spectrum() (fastdfe.spectrum.spectra static method)": [[8, "fastdfe.spectrum.Spectra.from_spectrum"]], "get_empty() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.get_empty"]], "has_div (fastdfe.spectrum.spectra property)": [[8, "fastdfe.spectrum.Spectra.has_div"]], "has_dots() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.has_dots"]], "is_folded() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.is_folded"]], "k (fastdfe.spectrum.spectra property)": [[8, "fastdfe.spectrum.Spectra.k"]], "merge_groups() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.merge_groups"]], "n (fastdfe.spectrum.spectra property)": [[8, "fastdfe.spectrum.Spectra.n"]], "n_div (fastdfe.spectrum.spectra property)": [[8, "fastdfe.spectrum.Spectra.n_div"]], "n_monomorphic (fastdfe.spectrum.spectra property)": [[8, "fastdfe.spectrum.Spectra.n_monomorphic"]], "n_polymorphic (fastdfe.spectrum.spectra property)": [[8, "fastdfe.spectrum.Spectra.n_polymorphic"]], "n_sites (fastdfe.spectrum.spectra property)": [[8, "fastdfe.spectrum.Spectra.n_sites"]], "normalize() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.normalize"]], "plot() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.plot"]], "polymorphic (fastdfe.spectrum.spectra property)": [[8, "fastdfe.spectrum.Spectra.polymorphic"]], "prefix() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.prefix"]], "print() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.print"]], "rename() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.rename"]], "replace_dots() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.replace_dots"]], "sort_types() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.sort_types"]], "to_dataframe() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.to_dataframe"]], "to_dict() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.to_dict"]], "to_file() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.to_file"]], "to_list() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.to_list"]], "to_multi_index() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.to_multi_index"]], "to_numpy() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.to_numpy"]], "to_single_index() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.to_single_index"]], "to_spectra() (fastdfe.spectrum.spectra method)": [[8, "fastdfe.spectrum.Spectra.to_spectra"]], "types (fastdfe.spectrum.spectra property)": [[8, "fastdfe.spectrum.Spectra.types"]], "spectrum (class in fastdfe.spectrum)": [[9, "fastdfe.spectrum.Spectrum"]], "__init__() (fastdfe.spectrum.spectrum method)": [[9, "fastdfe.spectrum.Spectrum.__init__"]], "copy() (fastdfe.spectrum.spectrum method)": [[9, "fastdfe.spectrum.Spectrum.copy"]], "fold() (fastdfe.spectrum.spectrum method)": [[9, "fastdfe.spectrum.Spectrum.fold"]], "from_list() (fastdfe.spectrum.spectrum static method)": [[9, "fastdfe.spectrum.Spectrum.from_list"]], "from_polydfe() (fastdfe.spectrum.spectrum static method)": [[9, "fastdfe.spectrum.Spectrum.from_polydfe"]], "from_polymorphic() (fastdfe.spectrum.spectrum static method)": [[9, "fastdfe.spectrum.Spectrum.from_polymorphic"]], "has_div (fastdfe.spectrum.spectrum property)": [[9, "fastdfe.spectrum.Spectrum.has_div"]], "is_folded() (fastdfe.spectrum.spectrum method)": [[9, "fastdfe.spectrum.Spectrum.is_folded"]], "n (fastdfe.spectrum.spectrum property)": [[9, "fastdfe.spectrum.Spectrum.n"]], "n_div (fastdfe.spectrum.spectrum property)": [[9, "fastdfe.spectrum.Spectrum.n_div"]], "n_monomorphic (fastdfe.spectrum.spectrum property)": [[9, "fastdfe.spectrum.Spectrum.n_monomorphic"]], "n_polymorphic (fastdfe.spectrum.spectrum property)": [[9, "fastdfe.spectrum.Spectrum.n_polymorphic"]], "n_sites (fastdfe.spectrum.spectrum property)": [[9, "fastdfe.spectrum.Spectrum.n_sites"]], "plot() (fastdfe.spectrum.spectrum method)": [[9, "fastdfe.spectrum.Spectrum.plot"]], "polymorphic (fastdfe.spectrum.spectrum property)": [[9, "fastdfe.spectrum.Spectrum.polymorphic"]], "standard_kingman() (fastdfe.spectrum.spectrum static method)": [[9, "fastdfe.spectrum.Spectrum.standard_kingman"]], "theta (fastdfe.spectrum.spectrum property)": [[9, "fastdfe.spectrum.Spectrum.theta"]], "to_list() (fastdfe.spectrum.spectrum method)": [[9, "fastdfe.spectrum.Spectrum.to_list"]], "to_numpy() (fastdfe.spectrum.spectrum method)": [[9, "fastdfe.spectrum.Spectrum.to_numpy"]]}})