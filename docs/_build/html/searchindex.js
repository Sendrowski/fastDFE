Search.setIndex({"docnames": ["index", "modules/annotation", "modules/config", "modules/filtration", "modules/inference", "modules/parametrization", "modules/parser", "modules/spectra", "modules/spectrum", "reference/config", "reference/example_pendula_biased_gc", "reference/example_pendula_complex", "reference/example_pendula_marginal", "reference/example_pendula_simple", "reference/example_sapiens", "reference/inference", "reference/inference_R", "reference/installation_python", "reference/installation_r", "reference/introduction", "reference/miscellaneous", "reference/parametrizations", "reference/parser", "reference/quickstart_python", "reference/quickstart_r", "reference/spectra"], "filenames": ["index.rst", "modules/annotation.rst", "modules/config.rst", "modules/filtration.rst", "modules/inference.rst", "modules/parametrization.rst", "modules/parser.rst", "modules/spectra.rst", "modules/spectrum.rst", "reference/config.rst", "reference/example_pendula_biased_gc.ipynb", "reference/example_pendula_complex.ipynb", "reference/example_pendula_marginal.ipynb", "reference/example_pendula_simple.ipynb", "reference/example_sapiens.ipynb", "reference/inference.ipynb", "reference/inference_R.ipynb", "reference/installation_python.rst", "reference/installation_r.rst", "reference/introduction.rst", "reference/miscellaneous.rst", "reference/parametrizations.ipynb", "reference/parser.ipynb", "reference/quickstart_python.ipynb", "reference/quickstart_r.ipynb", "reference/spectra.ipynb"], "titles": ["Welcome to fastDFE\u2019s documentation", "VCF Annotation", "Configuration class", "VCF Filtration", "Inference", "Parametrizations", "VCF Parsing", "Spectra class", "Spectrum class", "Configuration files", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Inference on H. sapiens", "DFE Inference", "DFE Inference", "Installation", "Installation", "Introduction", "Miscellaneous", "DFE parametrizations", "Parsing SFS from VCF file", "Quickstart", "Quickstart", "Working with SFS"], "terms": {"i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "packag": [0, 17, 18, 19], "fast": [0, 9], "flexibl": [0, 5, 19], "hierarch": 0, "infer": [0, 2, 3, 6, 10, 11, 12, 13, 19, 21, 22, 25], "distribut": [0, 4, 5, 6, 19, 22], "fit": [0, 4, 15, 16, 19], "effect": [0, 4, 19], "dfe": [0, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 19, 22, 23, 24, 25], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9, 14, 15, 16, 19, 20, 21, 23, 24, 25], "site": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 19, 22, 23, 24, 25], "frequenc": [0, 2, 6, 8, 10, 19, 22, 25], "spectra": [0, 1, 2, 3, 4, 6, 8, 10, 11, 12, 14, 15, 16, 19, 22], "sf": [0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 23, 24], "introduct": 0, "motiv": 0, "how": [0, 4, 15, 16, 21, 22], "work": [0, 15, 16], "featur": 0, "instal": 0, "pypi": 0, "conda": 0, "quickstart": 0, "basic": [0, 4], "bootstrap": [0, 2, 4, 9, 10, 12, 13, 19, 20, 21], "serial": [0, 4, 19], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 22, 25], "fix": [0, 2, 4, 5, 7, 9], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 23], "nest": [0, 4, 7, 19], "model": [0, 2, 4, 5, 9, 10, 13, 19, 21, 23, 24], "comparison": [0, 4, 19, 23, 24], "visual": [0, 4, 7, 19, 22], "likelihood": [0, 2, 4, 9, 10, 11, 12, 13, 19, 21, 23, 24], "fold": [0, 1, 4, 6, 7, 8, 10, 22], "joint": [0, 4, 6, 10, 19], "covari": [0, 2, 4, 9, 10, 11, 19], "configur": [0, 6, 15, 16, 19, 24], "file": [0, 1, 2, 3, 4, 6, 7, 8, 10, 14, 15, 16, 17, 19, 20, 23, 24, 25], "usag": [0, 4, 6, 19], "json": [0, 2, 4, 15, 16, 23, 24], "exampl": [0, 6, 15, 16, 20, 21, 22, 23, 24], "parametr": [0, 2, 4, 9, 15, 16, 19, 23, 24], "subtyp": [0, 4], "group": [0, 7], "prefix": [0, 7], "pars": [0, 2, 3, 10, 11, 12, 14, 15, 16, 20], "vcf": [0, 10, 11, 12, 14, 15, 16, 19, 20], "simpl": [0, 4], "stratif": [0, 6, 10, 11, 12, 14, 15, 16, 19], "annot": [0, 3, 6, 14, 19], "degeneraci": [0, 1, 6], "synonymi": [0, 1, 6], "ancestr": [0, 1, 3, 4, 6, 15, 16, 25], "allel": [0, 1, 3, 6, 7, 15, 16, 19, 25], "filtrat": [0, 6, 14], "miscellan": 0, "log": [0, 2, 4, 5, 9, 10, 11, 12, 13, 15, 16, 21, 23], "debug": 0, "seed": [0, 1, 2, 3, 4, 6, 9, 10], "baseinfer": [0, 2, 4, 9, 10, 11, 12, 13, 15, 16, 20, 21, 23, 24], "default_x0": [0, 4], "default_bound": [0, 4], "default_scal": [0, 4], "default_opts_ml": [0, 4], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10], "sfs_neut": [0, 2, 4, 9, 10, 11, 12, 13, 15, 16, 21, 23, 24], "sfs_sel": [0, 2, 4, 9, 10, 11, 12, 13, 15, 16, 21, 23, 24], "n": [0, 2, 4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 22], "discret": [0, 4, 5, 10, 11, 12, 13, 15, 16, 23, 24], "theta": [0, 4, 8], "params_ml": [0, 4], "sfs_mle": [0, 4], "n_run": [0, 2, 4, 9, 10, 12, 13, 15, 16, 23], "result": [0, 2, 4, 5, 15, 16, 19, 22], "do_bootstrap": [0, 2, 4, 9, 10, 13, 15, 16, 21], "n_bootstrap": [0, 2, 4, 9, 10, 13], "parallel": [0, 2, 4, 9, 10, 20], "fixed_param": [0, 2, 4, 5, 9, 10, 11, 15, 16], "scale": [0, 2, 4, 5, 9, 10, 15, 16], "bound": [0, 2, 4, 5, 9, 10, 11, 12, 13, 15, 16, 23, 24], "optim": [0, 2, 4, 5, 9, 10, 11, 12, 13, 15, 16, 19, 20, 23, 24], "x0": [0, 2, 4, 5, 9, 10], "bootstrap_result": [0, 4], "l2_residu": [0, 4], "rng": [0, 4], "execution_tim": [0, 4], "lock": [0, 4], "get_fixed_param_nam": [0, 4], "check_fixed_params_exist": [0, 4], "raise_if_lock": [0, 4], "run_if_requir": [0, 4], "run_if_required_wrapp": [0, 4], "run": [0, 2, 4, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 23, 24], "get_count": [0, 4], "evaluate_likelihood": [0, 4], "assign_result": [0, 4], "report_result": [0, 4], "update_properti": [0, 4], "add_alpha_to_bootstrap": [0, 4], "resample_sf": [0, 4], "run_bootstrap_sampl": [0, 4], "get_scales_linear": [0, 4], "get_bounds_linear": [0, 4], "model_sf": [0, 4], "adjust_polar": [0, 4], "add_demographi": [0, 4], "plot_continu": [0, 4], "plot_bucket_s": [0, 4], "plot_interval_dens": [0, 4], "plot_sfs_comparison": [0, 4, 13, 15, 16, 23, 24], "plot_observed_sf": [0, 4], "plot_al": [0, 4], "get_errors_discretized_df": [0, 4], "plot_inferred_paramet": [0, 4, 10, 12, 13, 15, 16], "plot_inferred_parameters_boxplot": [0, 4], "plot_likelihood": [0, 4, 15, 16], "lrt": [0, 4, 15, 16, 19], "compare_nest": [0, 4], "compare_nested_model": [0, 4], "plot_nested_model": [0, 4, 13, 15, 16], "plot_discret": [0, 4, 10, 11, 13, 15, 16, 21, 23, 24], "get_alpha": [0, 4], "alpha": [0, 4, 12, 15, 16], "get_bootstrap_param": [0, 4], "get_bootstrap_param_nam": [0, 4], "get_optimized_param_nam": [0, 4], "get_n_optim": [0, 4], "create_config": [0, 4, 9], "from_config": [0, 4, 9], "from_config_fil": [0, 4], "get_summari": [0, 4, 15, 16, 23, 24], "get_x0": [0, 4], "param_nam": [0, 4, 5, 10], "to_json": [0, 2, 4], "from_fil": [0, 2, 4, 7, 9, 15, 16, 23, 24, 25], "from_json": [0, 2, 4, 9], "get_cis_params_ml": [0, 4], "get_discret": [0, 4], "to_fil": [0, 2, 4, 7, 9, 15, 16, 23, 24, 25], "jointinfer": [0, 2, 4, 10, 11, 15, 16, 20], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 22, 25], "params_mle_raw": [0, 4], "shared_param": [0, 2, 4, 9, 10, 11, 15, 16], "x0_cov": [0, 4], "marginal_infer": [0, 4, 15, 16], "joint_infer": [0, 2, 4, 10, 16], "check_shared_param": [0, 4, 10], "check_no_shared_params_fix": [0, 4], "get_shared_param_nam": [0, 4], "add_covariates_as_shar": [0, 4, 10], "determine_unshared_covari": [0, 4], "run_margin": [0, 4], "marginals_without_al": [0, 4], "run_joint": [0, 4], "joint_inference_makes_sens": [0, 4, 10], "run_joint_without_covari": [0, 4], "perform_lrt_covari": [0, 4, 15, 16], "add_covari": [0, 4], "bootstrap_if_requir": [0, 4], "run_joint_bootstrap_sampl": [0, 4], "perform_lrt_shar": [0, 4, 15, 16], "get_infer": [0, 4], "get_l2_residu": [0, 4], "get_errors_params_ml": [0, 4], "get_stats_discret": [0, 4], "compute_histogram": [0, 4], "sharedparam": [0, 2, 4, 10, 11, 15, 16], "param": [0, 2, 4, 5, 9, 10, 11, 15, 16], "valu": [0, 1, 2, 4, 5, 9, 10, 14, 15, 16, 20], "callback": [0, 4, 6, 15, 16], "bounds_scal": [0, 4], "appli": [0, 1, 3, 4, 6, 19], "apply_default": [0, 4], "class": [0, 1, 3, 4, 5, 6, 9, 16, 22, 23, 24, 25], "config": [0, 2, 4, 9], "updat": [0, 2, 4], "parse_polydfe_init_fil": [0, 2], "create_polydfe_init_fil": [0, 2], "parse_polydfe_sfs_config": [0, 2], "create_polydfe_sfs_config": [0, 2], "to_dict": [0, 2, 7], "to_yaml": [0, 2], "from_dict": [0, 2, 7], "from_yaml": [0, 2], "get_polydfe_model": [0, 2], "submodel": [0, 5], "get_pdf": [0, 5], "get_cdf": [0, 5], "gammaexpparametr": [0, 2, 4, 5, 9, 15, 16, 21, 23, 24], "displacedgammaparametr": [0, 5, 21], "gammadiscreteparametr": [0, 5, 21], "discreteparametr": [0, 5, 21], "interv": [0, 2, 4, 5, 10, 12, 13, 15, 16, 21, 23], "interval_s": [0, 5], "k": [0, 5, 7], "discretefractionalparametr": [0, 5, 10], "to_nomin": [0, 5], "to_fract": [0, 5], "spectrum": [0, 2, 4, 6, 7, 10, 13, 15, 16, 19, 21, 23, 24, 25], "n_site": [0, 7, 8], "n_div": [0, 7, 8], "has_div": [0, 7, 8], "n_monomorph": [0, 7, 8], "polymorph": [0, 4, 6, 7, 8], "n_polymorph": [0, 7, 8], "to_list": [0, 7, 8], "to_numpi": [0, 7, 8], "is_fold": [0, 7, 8, 25], "normal": [0, 5, 7, 8, 10, 12, 13, 15, 23], "copi": [0, 7, 8, 14], "from_polymorph": [0, 8], "from_list": [0, 7, 8], "from_polydf": [0, 8], "plot": [0, 4, 6, 7, 8, 10, 15, 16, 21, 22, 23, 24, 25], "standard_kingman": [0, 8, 25], "to_spectra": [0, 7], "to_datafram": [0, 7], "select": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24], "to_multi_index": [0, 7], "to_single_index": [0, 7], "get_empti": [0, 7], "merge_group": [0, 7, 10, 11, 12, 15, 16, 25], "has_dot": [0, 7], "replace_dot": [0, 7], "all": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 22, 23, 25], "combin": [0, 7, 25], "from_datafram": [0, 7], "from_spectra": [0, 7, 25], "from_spectrum": [0, 7], "drop_empti": [0, 7], "drop_zero_entri": [0, 7], "drop_spars": [0, 7], "renam": [0, 7], "print": [0, 7], "sort_typ": [0, 7], "parser": [0, 1, 6, 10, 11, 12, 14, 15, 16, 19, 20, 22, 25], "n_no_typ": [0, 6], "get_typ": [0, 6], "basecontextstratif": [0, 6], "n_flank": [0, 6], "alias": [0, 1, 3, 6, 14], "contig": [0, 1, 3, 6], "basetransitionstratif": [0, 6, 10], "ancestralbasestratif": [0, 1, 6, 11, 12, 15, 16, 22], "transitiontransversionstratif": [0, 6], "degeneracystratif": [0, 1, 6, 10, 11, 12, 14, 15, 16, 22], "get_degeneraci": [0, 6], "synonymystratif": [0, 1, 6, 22], "vepstratif": [0, 6], "info_tag": [0, 6], "snpeffstratif": [0, 6], "genomepositiondependentstratif": [0, 6], "contigstratif": [0, 6], "chunkedstratif": [0, 6], "n_chunk": [0, 6], "chunk_siz": [0, 6], "counter": [0, 6], "n_target_sit": [0, 1, 6, 22], "sampl": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 23], "samples_mask": [0, 6], "skip_non_polar": [0, 6], "n_skip": [0, 1, 6], "reader": [0, 6], "logger": [0, 1, 16], "n_annot": [0, 1], "annotate_sit": [0, 1], "count_target_sit": [0, 1, 6], "ancestralalleleannot": [0, 1], "maximumparsimonyannot": [0, 1, 6, 14, 22], "degeneracyannot": [0, 1, 6, 14, 22], "cd": [0, 1, 3, 14], "cd_next": [0, 1], "cd_prev": [0, 1], "mismatch": [0, 1], "error": [0, 1, 4, 10, 20, 22], "synonymyannot": [0, 1, 6, 22], "vep_mismatch": [0, 1], "snpeff_mismatch": [0, 1], "n_vep_comparison": [0, 1], "n_snpeff_comparison": [0, 1], "mutat": [0, 1, 2, 4, 5, 6, 7, 8, 10, 15, 16, 22, 25], "is_synonym": [0, 1], "n_filter": [0, 3], "filter_sit": [0, 3], "snpfiltrat": [0, 3], "snvfiltrat": [0, 3], "polyallelicfiltr": [0, 3, 6, 10, 11, 12, 22], "allfiltr": [0, 3], "nofiltr": [0, 3], "codingsequencefiltr": [0, 3, 6, 14, 22], "n_process": [0, 3], "deviantoutgroupfiltr": [0, 1, 3, 22], "ingroup": [0, 1, 3], "outgroup": [0, 1, 3], "strict_mod": [0, 3], "ingroup_mask": [0, 3], "outgroup_mask": [0, 3], "create_mask": [0, 3], "biasedgcconversionfiltr": [0, 3, 22], "filter": [0, 1, 3, 6, 10, 11, 12, 14, 22], "output": [0, 1, 3], "is_filt": [0, 3], "index": [0, 4, 6, 7, 14, 25], "an": [1, 2, 3, 4, 5, 6, 9, 15, 16, 17, 20, 22], "them": [1, 3, 10, 25], "fastdf": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "object": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 15, 16, 19, 21, 23, 24, 25], "creat": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 21, 22, 23, 24, 25], "new": [1, 3, 7, 15, 16, 17], "instanc": [1, 3, 4, 6], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 21, 22, 23, 24, 25], "option": [1, 2, 3, 4, 6, 7, 8, 9, 15, 16, 22], "int": [1, 2, 3, 4, 6, 7, 8, 10], "number": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 22, 23, 24, 25], "variant": [1, 3, 6], "cyvcf2": [1, 3, 6], "singl": [1, 3, 4, 5, 7, 15, 16, 23, 24, 25], "return": [1, 2, 3, 4, 5, 6, 7, 8, 14], "static": [1, 2, 4, 5, 7, 8], "str": [1, 2, 3, 4, 5, 6, 7, 8], "count": [1, 2, 4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 22, 23, 24, 25], "target": [1, 2, 6, 7, 8, 22], "gff": [1, 3, 6, 14, 22], "path": [1, 2, 4, 6], "possibli": [1, 6, 7], "gzip": [1, 6], "url": [1, 3, 6], "dict": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 15], "per": [1, 6], "chromosom": [1, 6, 14], "abc": [1, 6], "list": [1, 2, 3, 4, 5, 6, 7, 8, 10, 16, 22], "none": [1, 2, 3, 4, 6, 7, 8], "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "maximum": [1, 3, 5, 6, 15, 16, 19, 21, 22, 23, 24], "parsimoni": [1, 22], "info": [1, 3, 6, 20, 22], "field": [1, 3, 6, 19, 22], "aa": [1, 3, 6, 22], "ad": [1, 4, 10, 15, 16, 25], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 18, 19, 20, 22, 23, 24, 25], "hold": [1, 5, 7, 8, 15, 16, 23, 24, 25], "To": [1, 4, 15, 16, 17, 18, 19, 21, 22, 25], "note": [1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 16, 22, 23, 24], "reliabl": [1, 19], "wai": [1, 17, 18, 21, 23, 24], "determin": [1, 4, 5, 6, 22], "so": [1, 4, 5, 6, 7, 8], "recommend": [1, 2, 3, 4, 5, 6, 17], "thi": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24], "togeth": [1, 6, 22], "misidentif": [1, 4, 15, 16], "ep": [1, 4, 9, 10, 11, 12, 13, 15, 16, 23], "altogeth": 1, "altern": [1, 6, 18, 22, 23, 24], "you": [1, 4, 6, 9, 17, 18, 20, 21, 22], "can": [1, 3, 4, 5, 6, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "out": [1, 2, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 22, 23, 24, 25], "where": [1, 3, 4, 5, 15, 16, 23, 24], "major": [1, 3, 15, 16], "among": [1, 4, 9, 15, 16, 19], "doe": [1, 2, 4, 5, 10], "coincid": 1, "consid": [1, 2, 3, 4, 6, 10, 12, 13, 15, 16, 22, 23], "when": [1, 3, 4, 9, 15, 16, 20, 25], "If": [1, 4, 6, 20], "ar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 16, 17, 21, 22, 23, 24, 25], "gff_file": [1, 3, 6, 14], "fasta_fil": [1, 6, 14], "cach": [1, 3, 4, 6, 14], "bool": [1, 2, 3, 4, 6, 7, 8], "true": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 20, 21, 25], "gffhandler": [1, 3], "fastahandl": [1, 6], "we": [1, 2, 3, 4, 5, 6, 7, 9, 15, 16, 18, 19, 21, 22, 23, 24, 25], "look": [1, 4, 6, 9, 22], "each": [1, 4, 6, 7, 15, 16, 25], "codon": 1, "code": [1, 3, 6, 22], "also": [1, 4, 5, 6, 9, 15, 16, 18, 20, 21, 22, 23, 24, 25], "mono": [1, 3, 6], "add": [1, 4, 8], "degeneracy_info": 1, "0": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 22, 23, 25], "2": [1, 7, 9, 10, 12, 13, 14, 15, 16, 25], "4": [1, 5, 6, 10, 12, 15, 16], "extra": 1, "inform": [1, 4, 6, 15, 16, 22, 25], "about": [1, 4, 10, 11, 12, 13, 15, 16, 23], "respect": [1, 5, 15, 16, 22], "fasta": [1, 3, 6, 14], "dictionari": [1, 2, 3, 4, 6, 7], "e": [1, 3, 4, 5, 6, 7, 9, 15, 16], "g": [1, 3, 6, 10, 11, 12, 15, 16, 22], "chr1": [1, 3, 6], "1": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 25], "match": [1, 3, 6, 7, 10], "name": [1, 2, 3, 4, 5, 6, 7, 16, 17], "whether": [1, 2, 3, 4, 6, 7, 8, 9, 15, 16], "download": [1, 3, 6], "seri": [1, 3, 7], "current": [1, 3, 6, 22], "sequenc": [1, 3, 6, 22], "closest": [1, 3], "downstream": [1, 3], "follow": [1, 5, 17, 20], "preced": 1, "seqrecord": [1, 6], "could": [1, 6, 15, 16], "correctli": [1, 4, 10], "were": [1, 4, 6, 7, 10], "skip": [1, 6], "becaus": [1, 6], "thei": [1, 5, 6, 7], "region": [1, 6, 19], "runtim": 1, "v": [1, 3, 4], "synonym": [1, 4, 6, 15, 16, 19, 22], "non": [1, 4, 5, 6, 7, 8, 15, 16, 19, 22], "statu": 1, "present": [1, 3, 9, 16], "synonymous_info": 1, "sinc": [1, 6], "cannot": [1, 6], "monomorph": [1, 2, 3, 4, 6, 7, 8, 10, 15, 16, 22, 23, 24], "dynam": [1, 6], "up": [1, 5, 7, 8, 15, 16], "contain": [1, 6, 7, 15, 16, 22], "broadcast": 1, "set": [1, 5, 6, 7, 9, 10, 14, 15, 16, 21, 25], "did": [1, 3, 10, 12, 13, 15, 23], "vep": [1, 6, 22], "math": 1, "provid": [1, 4, 5, 6, 10, 15, 16, 19, 22, 25], "snpeff": [1, 6, 22], "concord": 1, "alt": [1, 3], "po": 1, "given": [1, 2, 3, 4, 5, 6, 7], "posit": [1, 3, 5], "codon1": 1, "codon2": 1, "check": [1, 3, 4, 7, 8, 10, 15, 16], "two": [1, 4, 5, 7, 15, 16, 25], "first": [1, 2, 4, 7, 15, 16, 18, 23, 24], "second": [1, 4], "fals": [1, 2, 3, 4, 6, 7, 8, 15], "otherwis": [1, 3, 4, 5, 6, 7, 8], "info_ancestr": [1, 3, 6], "max_sit": [1, 3, 6], "inf": [1, 3, 4, 6, 9, 10, 11, 13, 15, 16, 23, 24], "vcfhandler": [1, 3, 6], "support": [1, 5, 6, 15, 16, 19, 22], "tag": [1, 6, 22], "random": [1, 2, 3, 4, 6, 9, 19, 20], "gener": [1, 2, 3, 4, 5, 6, 9], "polydfe_spectra_config": 2, "polydfe_init_fil": 2, "polydfe_init_file_id": 2, "union": [2, 3, 4, 6, 7], "intervals_del": [2, 4, 10], "float": [2, 4, 5, 7, 8], "100000000": [2, 4], "1e": [2, 4], "05": [2, 4, 5, 10, 11, 12, 22], "1000": [2, 4, 5, 10], "intervals_ben": [2, 4, 10], "10000": [2, 4, 9], "integration_mod": [2, 4, 10], "liter": [2, 4, 6], "midpoint": [2, 4, 10, 11, 12, 13, 15, 23], "quad": [2, 4], "linear": [2, 4, 5, 9, 10, 11, 12, 13, 15, 16, 19, 23], "tupl": [2, 4, 7], "lin": [2, 4, 5, 9, 15, 16], "symlog": [2, 4, 9], "loss_typ": [2, 4, 9, 10], "l2": [2, 4], "opts_ml": [2, 4, 9, 10], "10": [2, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 22, 23, 24, 25], "100": [2, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23], "kwarg": [2, 4, 5, 10], "polydf": [2, 5, 8, 19], "init": 2, "id": 2, "neutral": [2, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24], "requir": [2, 4, 5, 6, 15, 16, 20, 22, 23, 24], "specifi": [2, 3, 4, 6, 7, 8, 9, 10, 15, 16, 22, 23, 24, 25], "order": [2, 3, 4, 6, 15, 16, 21], "rate": [2, 4, 6, 10, 15, 16], "integr": [2, 4, 10, 11, 12, 13, 15, 19, 23], "deleteri": [2, 4, 5, 15, 16], "space": [2, 4, 5], "benefici": [2, 4, 5, 6, 15, 16, 19, 22, 25], "mode": [2, 4, 5], "version": [2, 4], "initi": [2, 3, 4, 5, 6, 7, 8, 9, 15, 16, 20], "form": [2, 4, 15, 16, 23, 24], "lower": [2, 4, 5, 10, 11, 12, 13, 15, 23], "upper": [2, 4, 10, 11, 12, 13, 15, 23], "loss": [2, 4], "function": [2, 4, 5, 10, 11, 12, 13, 15, 16, 18, 19, 23], "independ": [2, 4, 9], "best": [2, 4, 19], "one": [2, 3, 4, 5, 9, 15, 16, 23, 24], "chosen": [2, 4], "increas": [2, 3, 4, 10, 12, 13, 15, 16, 23], "produc": [2, 4, 5, 15, 16], "good": [2, 4, 5, 10, 15, 16, 23, 24], "share": [2, 4, 5, 9, 10, 11, 15, 16, 19], "do": [2, 3, 4, 9, 15, 16, 17, 20], "automat": [2, 15, 16], "addit": [2, 4, 6], "keyword": [2, 4, 7, 8], "argument": [2, 4, 5, 7, 8, 15, 16, 22], "ignor": [2, 4, 7, 8], "data": [2, 4, 7, 8, 15, 16, 19, 21, 25], "defin": [2, 4, 6, 22], "ones": [2, 5], "held": [2, 4, 9, 15, 16], "dure": [2, 10, 12, 13, 15, 16, 22, 23], "size": [2, 4, 5, 6, 7, 8, 10, 15, 22, 23, 25], "repres": 2, "represent": [2, 5, 7], "string": [2, 4, 7, 25], "yaml": [2, 9, 19], "save": [2, 4, 7, 8, 15, 16, 23, 24, 25], "load": [2, 4, 7, 14, 16, 18, 24], "get": [2, 4, 5, 6, 7, 8, 23, 24, 25], "correspond": [2, 5, 6, 22, 25], "certain": 3, "criteria": 3, "didn": [3, 6], "t": [3, 4, 6, 10, 11, 12, 14, 15, 16, 22], "pass": [3, 4, 5, 7, 8, 15, 16, 22, 23, 24], "should": [3, 4, 5, 6, 9], "kept": 3, "onli": [3, 6, 8, 9, 15, 16, 21, 22], "keep": 3, "snp": 3, "includ": [3, 4, 5, 6, 8, 10, 11, 12, 14, 15, 16, 19, 22, 25], "discard": 3, "morphic": 3, "indel": 3, "mnp": 3, "poli": [3, 6], "don": [3, 10], "explicitli": [3, 16], "rather": [3, 5, 21], "reli": [3, 22], "test": [3, 4, 15, 16, 19, 22], "purpos": 3, "ani": [3, 4, 6, 10, 15, 16], "find": [3, 9, 10, 15, 16, 23, 24], "frequent": 3, "By": [3, 4, 5, 6, 15, 16, 20, 22, 23, 24], "unnecessari": 3, "avoid": [3, 15, 16, 17, 22], "speed": [3, 19], "assum": [3, 4, 6, 19], "here": [3, 4, 6, 8, 9, 22, 25], "within": [3, 10, 11, 12, 13, 15, 17, 19, 23], "sort": [3, 7], "ascend": 3, "enclos": 3, "process": [3, 10, 11, 12, 14, 22], "differ": [3, 4, 5, 6, 9, 15, 16, 19, 20, 21], "construct": 3, "default": [3, 4, 5, 6, 15, 16, 17, 20, 21, 22, 23, 24], "ndarrai": [3, 4, 5, 6, 7, 8], "found": [3, 4, 15, 16], "mask": [3, 6], "retain": 3, "A": [3, 5, 6, 9, 10, 11, 12, 14, 15, 16, 18, 22], "c": [3, 5, 10, 11, 12, 15, 16, 22, 24], "substitut": [3, 4, 15, 16, 19], "unaffect": 3, "bias": 3, "gene": 3, "convers": 3, "see": [3, 4, 9, 14, 15, 16, 20, 21, 22, 25], "citgb": 3, "alwai": 3, "most": [3, 5, 6, 9, 10], "bi": [3, 6], "pouyet": 3, "et": [3, 19], "al": [3, 19], "background": 3, "affect": [3, 15, 16, 19, 21], "more": [3, 4, 9, 15, 16, 19, 20, 22], "than": [3, 4, 5, 6, 7, 15, 16], "95": [3, 10, 12, 15, 16], "human": [3, 6], "genom": [3, 10, 11, 12, 19, 22], "bia": 3, "demograph": 3, "elif": 3, "7": [3, 10, 25], "e36317": 3, "2018": 3, "remov": [3, 4, 7], "iter": [3, 6, 8, 10, 11, 12, 13, 15, 23], "base_infer": [4, 16, 24], "abstractinfer": 4, "import": [4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "177130": [4, 9, 13, 15, 16, 21, 23, 24], "997": [4, 9, 13, 15, 16, 21, 23, 24], "441": [4, 9, 13, 15, 16, 21, 23, 24], "228": [4, 9, 13, 15, 16, 21, 23, 24], "156": [4, 9, 10, 13, 15, 16, 21, 23, 24], "117": [4, 9, 10, 13, 15, 16, 21, 23, 24], "114": [4, 9, 13, 15, 16, 21, 23, 24], "83": [4, 9, 13, 15, 16, 21, 23, 24], "105": [4, 9, 13, 15, 16, 21, 23, 24], "109": [4, 6, 9, 13, 14, 15, 16, 21, 23, 24], "652": [4, 9, 13, 15, 16, 21, 23, 24], "797939": [4, 9, 13, 15, 16, 21, 23, 24], "1329": [4, 9, 13, 15, 16, 21, 23, 24], "499": [4, 9, 13, 15, 16, 21, 23, 24], "265": [4, 9, 13, 15, 16, 21, 23, 24], "162": [4, 9, 13, 15, 16, 21, 23, 24], "104": [4, 9, 13, 15, 16, 21, 23, 24], "90": [4, 9, 11, 13, 15, 16, 21, 23, 24], "94": [4, 9, 13, 15, 16, 21, 23, 24], "119": [4, 9, 13, 15, 16, 21, 23, 24], "794": [4, 9, 13, 15, 16, 21, 23, 24], "connect": 4, "15": 4, "mle": [4, 10, 11, 12, 13, 15, 16, 19, 23, 24], "attribut": 4, "start": [4, 10, 11, 12, 14, 22, 23, 24], "stop": 4, "n_interv": 4, "popul": 4, "coeffici": [4, 5, 15, 16], "log10": 4, "same": [4, 5, 7, 19, 22], "dfeparametr": 4, "both": [4, 5, 6, 15, 16], "appear": [4, 15, 16, 21], "mainli": 4, "intend": 4, "intern": 4, "estim": [4, 8, 10, 11, 12, 13, 15, 16, 19, 21, 23, 24], "mai": [4, 5], "after": [4, 10, 11, 12, 13, 15, 20, 23], "ml": 4, "control": 4, "perform": [4, 9, 15, 16, 23, 24], "optimizeresult": 4, "numer": [4, 9, 10, 12, 13, 15, 22, 23], "datafram": [4, 7, 14], "norm": 4, "minu": 4, "observ": [4, 5, 15, 16, 19, 23, 24], "total": [4, 5, 6, 7, 8, 10, 11, 12, 14, 22], "execut": 4, "time": [4, 9, 19], "itself": [4, 15, 16], "valid": [4, 6, 10, 11, 12, 14, 22], "rais": [4, 6, 10], "except": 4, "arg": 4, "yet": 4, "func": 4, "decor": 4, "pbar": 4, "show": [4, 7, 8, 15, 16, 21], "progress": [4, 15, 16, 20], "bar": [4, 15, 16, 20], "evalu": [4, 10, 11, 12, 13, 15, 23], "scipi": 4, "_optim": 4, "assign": 4, "properti": [4, 6, 7, 8, 9, 22, 25], "its": [4, 6, 19], "entri": [4, 7, 15, 16, 23, 24], "self": [4, 7, 10], "n_sampl": [4, 15, 16, 23], "update_likelihood": 4, "mean": [4, 5, 15, 16], "resampl": 4, "poisson": [4, 19], "rerun": 4, "procedur": [4, 5], "take": [4, 5, 6, 20], "close": 4, "arrai": [4, 5, 7, 8, 10, 15, 16], "numpi": [4, 5, 7, 8, 10, 15], "adjust": [4, 6, 10, 12, 13, 15, 16, 23], "polar": [4, 6, 22], "counts_sel": 4, "demographi": [4, 19], "counts_neut": 4, "perturb": 4, "rel": [4, 6], "standard": [4, 8, 19, 20], "coalesc": 4, "confidence_interv": 4, "ci_level": 4, "bootstrap_typ": 4, "percentil": 4, "bca": 4, "scale_dens": 4, "titl": [4, 7, 8, 10, 12], "kwargs_legend": [4, 7, 8], "prop": [4, 7, 8], "8": [4, 7, 8, 10, 15], "ax": [4, 7, 8, 10, 12, 13, 15, 22, 23, 25], "matplotlib": [4, 7, 8, 12, 13, 15, 25], "_ax": [4, 7, 8], "continu": [4, 16], "special": 4, "constant": [4, 5], "np": [4, 10, 15], "pdf": [4, 5], "due": [4, 5, 15, 16], "logarithm": 4, "x": [4, 5, 12], "axi": [4, 16], "wrong": 4, "intuit": 4, "mass": [4, 5], "howev": [4, 5, 6, 17, 22, 25], "better": [4, 15, 16], "densiti": [4, 5], "ha": [4, 5, 9, 15, 16, 23, 24], "disadvantag": 4, "now": [4, 15, 16, 17, 23, 24], "chang": [4, 5, 9, 19, 20], "even": [4, 9], "warp": 4, "confid": [4, 5, 10, 12, 13, 15, 16, 21, 23], "level": [4, 7, 15, 16, 20, 21], "y": [4, 16], "boundari": 4, "yield": 4, "shape": [4, 5, 7, 19, 21], "bin": [4, 5, 25], "plt": [4, 7, 8, 12, 13, 15, 25], "legend": [4, 7, 8], "bucket": 4, "appropri": 4, "interval_label": 4, "color": 4, "c0": [4, 10, 15], "although": [4, 8, 22], "similar": [4, 5, 21], "label": [4, 10, 12, 21], "sfs_type": [4, 13], "use_subplot": [4, 7], "show_monomorph": [4, 7, 8], "subplot": [4, 7, 13, 15, 25], "bunch": 4, "loc": [4, 14], "right": 4, "valueerror": [4, 10], "scatter": 4, "ll_simpl": 4, "ll_complex": 4, "df": 4, "ratio": [4, 15, 16, 19], "complex": [4, 15, 16, 19], "degre": 4, "freedom": 4, "p": [4, 6, 10, 11, 12, 15, 16, 21, 22, 24], "": [4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23], "need": [4, 7, 9, 10, 15, 16, 19, 21, 23, 24], "proper": [4, 18], "subset": [4, 15, 16], "compar": [4, 15, 16], "variou": [4, 6], "accur": [4, 19, 22], "matrix": 4, "remove_empti": 4, "transpos": 4, "cmap": 4, "empti": [4, 7], "row": [4, 12], "column": [4, 7, 12], "colormap": 4, "proport": [4, 15, 16, 19], "calcul": [4, 8], "classmethod": 4, "summari": [4, 15, 16, 19, 23, 24], "inferenceresult": 4, "unseri": [4, 15, 16, 23, 24], "include_diverg": [4, 10], "enabl": [4, 22], "sever": [4, 15, 16, 22], "pendula": [4, 9, 15, 16, 21], "pubescen": [4, 9, 15, 16], "172528": [4, 9, 15, 16], "3612": [4, 9, 15, 16], "1359": [4, 9, 15, 16], "790": [4, 9, 15, 16], "584": [4, 9, 15, 16], "427": [4, 9, 15, 16], "325": [4, 9, 15, 16], "234": [4, 9, 10, 15, 16], "166": [4, 9, 15, 16], "76": [4, 9, 15, 16], "31": [4, 9, 10, 11, 12, 15, 16], "791106": [4, 9, 15, 16], "5326": [4, 9, 15, 16], "1741": [4, 9, 15, 16], "1005": [4, 9, 15, 16], "756": [4, 9, 15, 16], "546": [4, 9, 15, 16], "416": [4, 9, 15, 16], "294": [4, 9, 15, 16], "177": [4, 9, 15, 16], "41": [4, 9, 10, 11, 15, 16, 22], "diverg": [4, 7, 8], "origin": [4, 5, 25], "befor": 4, "unpack": 4, "expand": 4, "margin": [4, 10, 11, 15, 16], "without": [4, 6], "make": [4, 5, 10, 15, 16, 19, 23, 24], "sens": [4, 10], "devoid": 4, "against": [4, 22], "In": [4, 6, 10, 15, 16, 19, 22, 23, 24], "across": [4, 9], "low": 4, "indic": [4, 5, 15, 16], "signific": [4, 15, 16, 19], "improv": [4, 15, 16, 19], "access": [4, 15, 16, 22, 25], "call": [4, 9, 10, 17], "accuraci": 4, "wa": [4, 7, 8, 22], "previous": 4, "won": 4, "have": [4, 5, 6, 7, 9, 10, 16, 21, 25], "statist": 4, "comput": [4, 5, 9], "done": [4, 6, 15, 16, 22], "product": [4, 15, 16], "achiev": [4, 15, 16, 22], "justifi": 4, "difficult": 4, "properli": 4, "conserv": [4, 19], "report": 4, "might": [4, 9, 10, 11, 12, 13, 15, 16, 22, 23], "larger": [4, 5, 21], "what": [4, 15, 16], "realli": 4, "deseri": 4, "longer": 4, "other": [4, 5, 7, 9, 15, 16, 17, 21], "thing": [4, 15, 16], "pleas": [4, 10], "refer": [4, 6, 15, 16, 22, 25], "residu": 4, "over": [4, 5, 6, 7, 9, 19, 25], "jointli": [4, 10, 15, 16], "pd": 4, "abstract_infer": 4, "util": [4, 22, 25], "method": [4, 22, 25], "uniqu": 4, "panda": [4, 7, 14], "core": [4, 7, 9], "frame": [4, 7], "avail": [4, 6, 9, 22, 25], "s_d": [4, 5, 9, 10, 11, 12, 13, 15, 16, 23], "callabl": [4, 5, 6, 16], "0001": [4, 5, 10, 11, 12, 13, 15, 23], "induc": 4, "relationship": [4, 15, 16], "mani": 4, "modifi": [4, 15, 16], "introduc": [4, 15, 16, 19], "scale_valu": 4, "detail": [4, 15, 16], "custom": [4, 6, 15, 16, 22], "input": 4, "implement": [5, 19, 21, 22], "highli": [5, 6, 10], "dele": 5, "full": 5, "kind": 5, "some": [5, 6, 7, 15, 16, 19, 21, 22], "either": [5, 6], "abstract": [5, 6], "probabl": 5, "accept": 5, "cumul": 5, "mixtur": 5, "gamma": 5, "exponenti": 5, "phi": 5, "b": [5, 9, 10, 11, 12, 13, 15, 16, 21, 23, 24], "p_b": [5, 9, 10, 11, 12, 13, 15, 16, 23], "s_b": [5, 9, 10, 11, 12, 13, 15, 16, 23], "f_": 5, "cdot": 5, "mathbf": 5, "_": [5, 7], "f_e": 5, "geq": 5, "m": 5, "denot": [5, 15, 16], "often": [5, 6, 25], "been": [5, 15, 16, 23, 24], "multi": [5, 7], "modal": 5, "neg": [5, 15, 16], "amount": 5, "accommod": 5, "100000": [5, 10, 11, 12, 15], "01": [5, 10, 11, 12, 14, 15, 21], "5": [5, 10], "zero": [5, 7, 15, 16], "cdf": 5, "reflect": 5, "displac": 5, "hat": 5, "s_": 5, "max": [5, 10], "leq": 5, "less": [5, 25], "while": [5, 22], "fewer": [5, 6, 7], "It": [5, 25], "allow": [5, 6, 18], "pure": [5, 15, 16], "sub": 5, "s_max": 5, "s_mean": 5, "001": 5, "case": [5, 6, 9, 22], "d": 5, "6": [5, 10, 12], "constructor": 5, "s_1": 5, "s_2": 5, "dot": [5, 7], "s_k": 5, "That": 5, "sum_": 5, "s_i": 5, "c_i": 5, "b_i": 5, "width": 5, "advantag": 5, "impos": 5, "For": [5, 9, 15, 16, 22, 25], "reason": [5, 6, 15, 16, 23, 24], "fine": 5, "those": 5, "well": [5, 6, 9, 15, 16, 22], "effici": [5, 19], "re": [5, 15, 16], "sure": [5, 15, 16, 23, 24], "sum": [5, 7], "infinit": [5, 16], "s1": [5, 10], "s2": [5, 10], "sk": 5, "_1": 5, "_2": 5, "ith": 5, "left": [5, 9], "_i": 5, "j": 5, "s_j": 5, "prefer": 5, "constraint": 5, "convert": [5, 7, 8], "fraction": [5, 10], "s0": 5, "invert": 5, "oper": 5, "back": 5, "nomin": 5, "extract": [6, 10, 12, 19], "stratifi": [6, 15, 16, 22, 25], "possibl": [6, 19], "context": 6, "flank": 6, "attempt": 6, "middl": 6, "abl": 6, "transit": [6, 22], "notypeexcept": 6, "subclass": [6, 21], "ancestralannot": 6, "transvers": 6, "custom_callback": 6, "side": 6, "degener": 6, "facilit": [6, 9, 19], "csq": 6, "ann": 6, "chunk": 6, "roughli": 6, "equal": [6, 7], "window": 6, "seen": 6, "far": 6, "retriev": [6, 22], "correct": [6, 19, 22], "littl": [6, 22], "21": [6, 10, 14, 22], "http": [6, 14], "ftp": [6, 14], "1000genom": [6, 14], "ebi": [6, 14], "ac": [6, 14], "uk": [6, 14], "vol1": [6, 14], "data_collect": [6, 14], "1000_genomes_project": [6, 14], "releas": [6, 14], "20181203_biallelic_snv": [6, 14], "chr21": [6, 14], "shapeit2_integrated_v1a": [6, 14], "grch38": [6, 14], "20181129": [6, 14], "phase": [6, 14], "gz": [6, 10, 11, 12, 14, 15, 16, 22], "ensembl": [6, 14], "org": [6, 14], "pub": [6, 14], "homo_sapien": [6, 14], "dna": [6, 14], "fa": [6, 14, 15, 16], "gff3": [6, 14], "individu": 6, "down": 6, "draw": 6, "replac": [6, 7, 16], "ideal": 6, "obtain": [6, 10, 11, 12, 13, 15, 16, 19, 20, 23, 25], "calibr": 6, "extrapol": 6, "length": [6, 14, 22], "manual": [6, 22, 25], "manipul": [7, 8, 25], "multipl": [7, 9, 25], "kei": 7, "ndim": 7, "alia": 7, "__getitem__": 7, "regex": [7, 10], "depend": [7, 17], "notat": 7, "merg": [7, 25], "whose": 7, "last": [7, 10, 15, 16, 23, 24], "deriv": [7, 15, 16, 25], "alphabet": 7, "wise": 8, "watterson": 8, "rtype": 8, "specif": 8, "treat": 8, "separ": [8, 15, 16], "kingman": [8, 19], "directli": [9, 22], "reproduc": [9, 20], "consist": 9, "analys": 9, "simplifi": 9, "manag": [9, 19], "hyperparamet": 9, "typic": 9, "like": [9, 20], "thu": [9, 10, 12, 13, 15, 23], "resort": 9, "veri": 9, "usual": [9, 25], "untouch": 9, "invok": 9, "guarante": 9, "determinist": 9, "behaviour": 9, "just": 9, "173705": 9, "3294": 9, "1115": 9, "534": 9, "326": 9, "239": 9, "225": 9, "214": 9, "231": 9, "176": 9, "73": 9, "792884": 9, "4762": 9, "1397": 9, "720": 9, "423": 9, "259": 9, "247": 9, "256": 9, "209": 9, "alreadi": [9, 16, 25], "exist": [9, 16, 19], "person": 9, "readabl": 9, "would": [9, 25], "involv": 9, "32623": 9, "595481483513": 9, "426": 9, "59080558648185": 9, "fd": [10, 11, 12, 13, 14, 17], "resourc": [10, 11, 12, 22], "betula": [10, 11, 12, 15, 16, 22], "2439037it": [10, 11, 12, 22], "00": [10, 11, 12, 13, 14, 15, 21, 22, 23], "58823": 10, "11it": 10, "32minfo": [10, 11, 12, 13, 14, 15, 22, 23], "0m": [10, 11, 12, 13, 14, 15, 22, 23], "2439037": [10, 11, 12, 22], "30": [10, 12, 16], "7388": 10, "54it": 10, "91224": 10, "1548617": 10, "981644": [10, 11, 12, 22], "xlabel": 10, "figur": [10, 15, 22, 23, 25], "512x384": [10, 15, 22, 23, 25], "neut": [10, 12], "sel": [10, 12], "33mwarn": [10, 11, 12, 13, 15, 23], "unusu": 10, "remind": 10, "precomput": [10, 11, 12, 13, 15, 23], "transform": [10, 11, 12, 13, 15, 23], "noth": [10, 11, 12, 13, 15, 23], "worri": [10, 11, 12, 13, 15, 23], "successfulli": [10, 11, 12, 13, 15, 23], "finish": [10, 11, 12, 13, 15, 23], "19": 10, "138": 10, "24": 10, "914217983522075": 10, "s3": 10, "4594999163725839": 10, "s4": 10, "8564984167403228": 10, "129": 10, "01it": 10, "20": [10, 15], "022839771992494": 10, "3600023106856762": 10, "202": 10, "65it": 10, "termin": [10, 12, 13, 15, 23], "unreli": [10, 12, 13, 15, 23], "gtol": [10, 12, 13, 15, 23], "decreas": [10, 12, 13, 15, 23], "37": [10, 11], "258": 10, "34": [10, 13, 15, 23], "3671111014056": 10, "12817267732799753": 10, "010323679106065416": 10, "009174211460959952": 10, "124": 10, "16it": 10, "22": 10, "144": 10, "25": [10, 21], "475375215288608": 10, "11928977848583686": 10, "615869562627708": 10, "019263299838964024": 10, "39it": 10, "16": 10, "108": 10, "468833337430766": 10, "5846558887680596": 10, "282": 10, "29it": [10, 22], "32": [10, 11], "29": [10, 11], "682901017745053": 10, "30746187589641": 10, "40455830317845365": 10, "932973607767187": 10, "30it": 10, "36": 10, "38": 10, "199479587045985": 10, "38338017269595326": 10, "9783636846779312": 10, "145": 10, "22it": 10, "23": [10, 14], "174": 10, "770373796111585": 10, "18601401092014383": 10, "33898326285021646": 10, "27it": 10, "210": 10, "28": 10, "529378505340308": 10, "04456723721483778": 10, "49148973090950193": 10, "148": 10, "61it": 10, "150": 10, "35": [10, 15], "771914171887104": 10, "13396428310264583": 10, "4412430748097687": 10, "178": 10, "44it": 10, "252": 10, "33": 10, "30327874167497": 10, "08605769588041276": 10, "32069661118788106": 10, "9551595448209943": 10, "121": 10, "36it": 10, "14": 10, "126": 10, "804263015169496": 10, "22481984572414715": 10, "207": 10, "02it": 10, "0x194f87fd0": 10, "0x191878310": 10, "0x192582f50": 10, "0x191c3dc90": 10, "0x191c3d1b0": 10, "0x1921161d0": 10, "0x1925e31f0": 10, "0x1925f76d0": 10, "0x1950b9000": 10, "0x1926ad8a0": 10, "0x1926ac400": 10, "0x1927629b0": 10, "center": [10, 12], "ylabel": 10, "traceback": [10, 16], "recent": 10, "cell": 10, "line": 10, "3": [10, 12, 13, 15, 16, 25], "9": [10, 12], "11": [10, 13], "12": [10, 14], "13": 10, "pycharmproject": [10, 14], "py": [10, 14], "153": 10, "155": 10, "158": 10, "throw": 10, "159": 10, "305": 10, "302": 10, "303": 10, "304": 10, "len": 10, "306": 10, "f": [10, 17], "307": 10, "308": 10, "310": 10, "311": 10, "48": [10, 12], "320": 10, "11273875592235": 10, "237006794498091": 10, "1458170683377238": 10, "011838391666043677": 10, "195": 10, "704319521655766": 10, "8567454840664306": 10, "29143034677368906": 10, "396979801318865": 10, "220": 10, "012275463201547": 10, "239183199810254": 10, "27802524131704337": 10, "006865462720810218": 10, "190": 10, "90111999594789": 10, "011232843334602316": 10, "011479822938903853": 10, "26": [10, 22], "261891419653175": 10, "610276055007697": 10, "36652863093931753": 10, "03569932398989778": 10, "130": 10, "138893406241486": 10, "1205379603542265": 10, "482862608756065": 10, "17": 10, "42025190546462": 10, "4799909983945452": 10, "16748120196875874": 10, "8537114057993476": 10, "071948363729746": 10, "828090886137": 10, "1584077616195951": 10, "235": 10, "6998772863962": 10, "608451652959161": 10, "9042969165049093": 10, "35474087234269114": 10, "85": [10, 11], "497094398987027": 10, "223931861806486": 10, "3246801507593634": 10, "92": 10, "55395724020116": 10, "110": 10, "222961471577335": 10, "117929611246703": 10, "21103125965514108": 10, "255": 10, "04133966408648": 10, "802931321924449": 10, "952062208073529": 10, "31800002143513917": 10, "725194868759536": 10, "923197089705358": 10, "8145869272910264": 10, "larg": 10, "awar": 10, "harder": 10, "optimum": [10, 15, 16, 23, 24], "312": 10, "6205": 10, "392": 10, "4972323914126": 10, "04240807049739001": 10, "014020203430891979": 10, "576838661756256": 10, "832925311021302": 10, "051291030167721616": 10, "09142144254109813": 10, "17377574363664494": 10, "17683501545665492": 10, "13281571672044995": 10, "978224368650702": 10, "09815078271461786": 10, "2423653254762814": 10, "062106223079901136": 10, "023255813973911417": 10, "1300": 10, "65": [10, 11], "03": [10, 14, 21], "27": 10, "07": 10, "iloc": 10, "40348634304522": 10, "instanti": [11, 12, 15, 16, 22], "59006": 11, "72it": 11, "7402": 11, "38it": 11, "980934": [11, 12, 22], "2438327": [11, 12, 22], "685": 11, "51293539207359": 11, "53949": 11, "40796474576": 11, "11366118571317227": 11, "0035695995726279578": 11, "18": [11, 14], "120": 11, "8637145820187": 11, "09522023308068508": 11, "006569641953718728": 11, "645": 11, "31745271402025": 11, "4185": 11, "848942283267": 11, "19089043196990704": 11, "006698568663111203": 11, "460": 11, "39": [11, 12, 21], "34106087078578": 11, "165": [11, 12], "01887014239622": 11, "23938783194502647": 11, "18076846503635546": 11, "46": [11, 22], "295": 11, "58658201021626": 11, "15428875493961483": 11, "17278065494179437": 11, "172": 11, "2365": 11, "146": 11, "11003066065462": 11, "09494023640538324": 11, "006134398085142732": 11, "44": 11, "275753637691146": 11, "4941": 11, "28735561608": 11, "1853951938413811": 11, "12013852605367349": 11, "1005073962112379": 11, "pyplot": [12, 13, 15, 25], "43": 12, "55635": 12, "67it": 12, "7379": 12, "49it": 12, "78": [12, 15], "429538741494866": 12, "09250725380768925": 12, "00010003368718414257": 12, "007131399121042546": 12, "420": 12, "781333903397154": 12, "4680": 12, "964377262656": 12, "18103245458802353": 12, "0016690592847306126": 12, "008521268228204374": 12, "70": 12, "552": 12, "34106087079692": 12, "01922058474526": 12, "23938807176874125": 12, "18076469877510834": 12, "53": 12, "360": 12, "58658201020549": 12, "15428868835376694": 12, "17278049460737993": 12, "87": 12, "26it": 12, "131": 12, "56it": [12, 14], "96": 12, "94it": [12, 22], "74": 12, "68it": 12, "99999": 12, "999995": 12, "107708": 12, "070929": 12, "006586": 12, "217027": 12, "000000": 12, "109729": 12, "078056": 12, "006550": 12, "238850": 12, "106905": 12, "075633": 12, "009989": 12, "226993": 12, "092369": 12, "007258": 12, "092633": 12, "007840": 12, "092453": 12, "006751": 12, "096245": 12, "018803": 12, "007973": 12, "058274": 12, "97": 12, "092126": 12, "006828": 12, "98": 12, "092910": 12, "007155": 12, "99": 12, "092115": 12, "007363": 12, "964377": 12, "181213": 12, "001669": 12, "008718": 12, "964381": 12, "184826": 12, "007134": 12, "000100": 12, "008475": 12, "036644": 12, "180935": 12, "008442": 12, "180756": 12, "008772": 12, "181145": 12, "008300": 12, "964367": 12, "190641": 12, "020606": 12, "001592": 12, "006240": 12, "114330": 12, "181881": 12, "007890": 12, "180451": 12, "001668": 12, "008380": 12, "181728": 12, "008656": 12, "180317": 12, "008479": 12, "021299": 12, "999100": 12, "242666": 12, "00469": 12, "904842": 12, "018806": 12, "237185": 12, "209108": 12, "00000": 12, "999957": 12, "019141": 12, "999925": 12, "238228": 12, "354965": 12, "999976": 12, "019021": 12, "999747": 12, "241067": 12, "127548": 12, "999926": 12, "019238": 12, "239614": 12, "174623": 12, "999948": 12, "018849": 12, "999458": 12, "240645": 12, "139773": 12, "999933": 12, "019967": 12, "236135": 12, "290712": 12, "999970": 12, "017626": 12, "997525": 12, "245683": 12, "039552": 12, "999752": 12, "018603": 12, "236898": 12, "223611": 12, "999960": 12, "019358": 12, "999935": 12, "241033": 12, "163738": 12, "999944": 12, "165492": 12, "191358": 12, "598316": 12, "999998": 12, "181340": 12, "213989": 12, "660550": 12, "152756": 12, "170284": 12, "536507": 12, "152751": 12, "170241": 12, "536429": 12, "154141": 12, "173122": 12, "544419": 12, "151335": 12, "176511": 12, "542307": 12, "999999": 12, "170290": 12, "198358": 12, "618442": 12, "131814": 12, "125572": 12, "400518": 12, "159440": 12, "180728": 12, "569011": 12, "146955": 12, "159420": 12, "503854": 12, "79": [13, 23], "594": [13, 23], "63216290448145": [13, 23], "9867": [13, 23], "852019677897": [13, 23], "15081059927802082": [13, 23], "00010000034366964345": [13, 23], "006854767570905897": [13, 23], "123": 13, "80it": 13, "nrow": 13, "ncol": [13, 15, 25], "figsiz": [13, 15, 25], "flatten": 13, "var": 14, "folder": 14, "w6": 14, "18ktl5312413jw46btlxrh59fzxvt4": 14, "b9755b5299a6": 14, "976599it": 14, "54065": 14, "13it": 14, "641b1ad7806": 14, "f36fd1bf6304": 14, "16046": 14, "976599": 14, "13333": 14, "user": [14, 19], "au732936": 14, "bio_handl": 14, "490": 14, "settingwithcopywarn": 14, "try": 14, "slice": 14, "row_index": 14, "col_index": 14, "instead": 14, "caveat": 14, "document": [14, 19], "pydata": 14, "doc": [14, 16, 24], "stabl": 14, "user_guid": 14, "html": 14, "view": 14, "versu": 14, "end": 14, "4810": 14, "71it": 14, "965325": 14, "8794": 14, "11274": 14, "pair": [15, 16, 23, 24], "69": 15, "510": 15, "6321629044744": 15, "9868": 15, "270989289615": 15, "1508097745704915": 15, "0002191946595685579": 15, "006854664823870646": 15, "local": [15, 16, 23, 24], "carri": [15, 16, 23, 24], "global": [15, 16, 23, 24], "furthermor": [15, 16, 23, 24], "cf": [15, 16, 21, 22, 23, 24], "uncertainti": [15, 16], "sfss": [15, 16, 23, 24], "redo": [15, 16, 23, 24], "32it": 15, "interpret": [15, 16], "mi": [15, 16], "identif": [15, 16, 19], "forc": [15, 16], "arbitrari": [15, 16], "later": [15, 16], "437981269154704": 15, "33214": 15, "794997237914": 15, "13054515138416597": 15, "301": 15, "08it": 15, "idenf": [15, 16], "disabl": [15, 16, 20], "warn": [15, 16, 21], "clutter": [15, 16], "disable_pbar": [15, 16, 20], "getlogg": [15, 20, 21], "setlevel": [15, 16, 20, 21], "neither": [15, 16], "nor": [15, 16], "significantli": [15, 16], "give": [15, 16], "u": [15, 16, 18], "There": [15, 16], "room": [15, 16], "variat": [15, 16, 19], "short": [15, 16], "il": [15, 16], "simpli": [15, 16], "whenev": [15, 16, 25], "ax1": [15, 25], "ax2": [15, 25], "tight_layout": 15, "between": [15, 16, 19], "modul": [15, 16, 20, 22], "join": [15, 16], "inde": [15, 16], "via": [15, 16], "investig": [15, 16], "exten": [15, 16], "4508265831290855": 15, "simpler": [15, 16], "explain": [15, 16], "suffici": [15, 16], "lot": [15, 16], "inclus": [15, 16, 19], "associ": [15, 16], "power": [15, 16], "reduc": [15, 16], "interest": [15, 16], "describ": [15, 16], "snakemak": [15, 16, 22], "contriv": [15, 16], "strength": [15, 16], "let": [15, 16], "vari": [15, 16], "question": [15, 16], "9998078235961599": 15, "As": [15, 16, 19], "expect": [15, 16, 19], "necessari": [16, 24], "setwd": [16, 24], "sourc": [16, 18, 24], "r": [16, 19, 24], "sfs_model": [16, 24], "sometim": 16, "cast": 16, "integ": 16, "truth": 16, "element": 16, "ambigu": 16, "py_call_impl": 16, "call_arg": 16, "unnam": 16, "nonetyp": 16, "iterabletraceback": 16, "1m": 16, "22mscale": 16, "32my": 16, "39m": 16, "anoth": [16, 22], "messag": 16, "22mtransform": 16, "450709524223151": 16, "ancestral_base_stratif": 16, "degeneracy_stratif": 16, "pip": 17, "potenti": 17, "conflict": 17, "isol": 17, "environ": [17, 18, 19], "easiest": [17, 23, 24], "mamba": 17, "yml": 17, "content": 17, "env": 17, "channel": 17, "python": [17, 18, 19, 20], "command": 17, "activ": 17, "newli": 17, "readi": 17, "reticul": [18, 19], "interfac": 18, "py_instal": 18, "subsequ": 18, "our": [18, 21], "further": 18, "librari": 18, "under": 18, "friendli": 19, "softwar": 19, "design": [19, 25], "evolutionari": 19, "biologi": 19, "ecologi": 19, "build": 19, "upon": 19, "foundat": 19, "laid": 19, "tataru": 19, "2017": 19, "address": 19, "limit": 19, "predecessor": 19, "faster": 19, "approach": 19, "offer": [19, 22, 25], "compat": 19, "through": 19, "ensur": [19, 20], "smooth": 19, "workflow": 19, "thoroughli": 19, "eas": 19, "research": 19, "plai": 19, "crucial": 19, "role": 19, "understand": 19, "natur": 19, "genet": 19, "speci": 19, "essenti": [19, 22], "wide": 19, "rang": 19, "applic": 19, "respons": 19, "aim": 19, "meet": 19, "grow": 19, "adapt": 19, "tool": 19, "easili": [19, 22], "adopt": 19, "increasingli": 19, "precursor": 19, "contrast": 19, "put": 19, "nuisanc": 19, "rescal": 19, "alik": 19, "sojourn": 19, "prf": 19, "theori": 19, "step": 19, "easi": 19, "assess": 19, "customiz": 19, "\u03b1": 19, "built": 19, "versatil": 19, "consol": 20, "encount": 20, "unexpect": 20, "descript": 20, "stack": 20, "trace": 20, "etc": 20, "choos": 20, "subsampl": 20, "amen": 21, "your": 21, "own": 21, "fatal": 21, "append": 21, "__class__": 21, "__name__": 21, "02": [21, 23], "41it": 21, "04it": 21, "81": 21, "89it": 21, "72": 21, "28it": 21, "overal": 21, "conveni": 22, "skip_not_polar": 22, "want": 22, "spp": 22, "52379": 22, "7581": 22, "93it": 22, "behavior": 22, "tandem": 22, "fed": 22, "routin": 22, "complet": [22, 25], "58696": 22, "7471": 22, "69it": 22, "state": [22, 25], "examin": 22, "These": 22, "accompani": 22, "almost": 22, "straightforward": 22, "suscept": 22, "incorpor": 22, "wrapper": 22, "est": 22, "emploi": 22, "sophist": 22, "immedi": 22, "api": 22, "compon": 22, "20it": 23, "handl": 25, "especi": 25, "subtype1": 25, "type1": 25, "type2": 25, "subtype2": 25, "wildcard": 25, "onc": 25, "rid": 25, "upp": 25, "restor": 25, "again": 25, "csv": 25, "spectra2": 25, "distinguish": 25, "collaps": 25, "onto": 25, "particularli": 25, "notic": 25, "easier": 25, "robust": 25, "misspecif": 25, "unknown": 25, "fig": 25}, "objects": {"fastdfe.abstract_inference": [[4, 0, 1, "", "Inference"]], "fastdfe.abstract_inference.Inference": [[4, 1, 1, "", "compute_histogram"], [4, 1, 1, "", "get_cis_params_mle"], [4, 1, 1, "", "get_discretized"], [4, 1, 1, "", "get_errors_params_mle"], [4, 1, 1, "", "get_stats_discretized"], [4, 1, 1, "", "plot_continuous"], [4, 1, 1, "", "plot_discretized"], [4, 1, 1, "", "plot_inferred_parameters"], [4, 1, 1, "", "plot_inferred_parameters_boxplot"]], "fastdfe": [[1, 2, 0, "-", "annotation"], [3, 2, 0, "-", "filtration"], [5, 2, 0, "-", "parametrization"], [6, 2, 0, "-", "parser"]], "fastdfe.annotation": [[1, 0, 1, "", "AncestralAlleleAnnotation"], [1, 0, 1, "", "Annotation"], [1, 0, 1, "", "Annotator"], [1, 0, 1, "", "DegeneracyAnnotation"], [1, 0, 1, "", "MaximumParsimonyAnnotation"], [1, 0, 1, "", "SynonymyAnnotation"]], "fastdfe.annotation.Annotation": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "annotate_site"], [1, 3, 1, "", "annotator"], [1, 1, 1, "", "count_target_sites"], [1, 3, 1, "", "logger"], [1, 3, 1, "", "n_annotated"]], "fastdfe.annotation.Annotator": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "annotate"]], "fastdfe.annotation.DegeneracyAnnotation": [[1, 1, 1, "", "__init__"], [1, 3, 1, "", "aliases"], [1, 1, 1, "", "annotate_site"], [1, 3, 1, "", "cd"], [1, 3, 1, "", "cd_next"], [1, 3, 1, "", "cd_prev"], [1, 3, 1, "", "contig"], [1, 3, 1, "", "errors"], [1, 3, 1, "", "mismatches"], [1, 3, 1, "", "n_skipped"], [1, 3, 1, "", "n_target_sites"]], "fastdfe.annotation.MaximumParsimonyAnnotation": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "annotate_site"], [1, 3, 1, "", "samples"]], "fastdfe.annotation.SynonymyAnnotation": [[1, 1, 1, "", "__init__"], [1, 3, 1, "", "aliases"], [1, 1, 1, "", "annotate_site"], [1, 1, 1, "", "is_synonymous"], [1, 1, 1, "", "mutate"], [1, 3, 1, "", "n_snpeff_comparisons"], [1, 3, 1, "", "n_vep_comparisons"], [1, 3, 1, "", "snpeff_mismatches"], [1, 3, 1, "", "vep_mismatches"]], "fastdfe.base_inference": [[4, 0, 1, "", "BaseInference"]], "fastdfe.base_inference.BaseInference": [[4, 3, 1, "", "L2_residual"], [4, 1, 1, "", "__init__"], [4, 1, 1, "", "add_alpha_to_bootstraps"], [4, 1, 1, "", "add_demography"], [4, 1, 1, "", "adjust_polarization"], [4, 4, 1, "", "alpha"], [4, 1, 1, "", "assign_result"], [4, 1, 1, "", "bootstrap"], [4, 3, 1, "", "bootstrap_results"], [4, 3, 1, "", "bootstraps"], [4, 3, 1, "", "bounds"], [4, 1, 1, "", "check_fixed_params_exist"], [4, 1, 1, "", "compare_nested"], [4, 1, 1, "", "compare_nested_models"], [4, 1, 1, "", "create_config"], [4, 3, 1, "", "default_bounds"], [4, 3, 1, "", "default_opts_mle"], [4, 3, 1, "", "default_scales"], [4, 3, 1, "", "default_x0"], [4, 3, 1, "", "discretization"], [4, 3, 1, "", "do_bootstrap"], [4, 1, 1, "", "evaluate_likelihood"], [4, 3, 1, "", "execution_time"], [4, 3, 1, "", "fixed_params"], [4, 3, 1, "", "folded"], [4, 1, 1, "", "from_config"], [4, 1, 1, "", "from_config_file"], [4, 1, 1, "", "from_file"], [4, 1, 1, "", "from_json"], [4, 1, 1, "", "get_alpha"], [4, 1, 1, "", "get_bootstrap_param_names"], [4, 1, 1, "", "get_bootstrap_params"], [4, 1, 1, "", "get_bounds_linear"], [4, 1, 1, "", "get_cis_params_mle"], [4, 1, 1, "", "get_counts"], [4, 1, 1, "", "get_discretized"], [4, 1, 1, "", "get_errors_discretized_dfe"], [4, 1, 1, "", "get_fixed_param_names"], [4, 1, 1, "", "get_n_optimized"], [4, 1, 1, "", "get_optimized_param_names"], [4, 1, 1, "", "get_scales_linear"], [4, 1, 1, "", "get_summary"], [4, 1, 1, "", "get_x0"], [4, 3, 1, "", "likelihood"], [4, 3, 1, "", "likelihoods"], [4, 3, 1, "", "locked"], [4, 1, 1, "", "lrt"], [4, 3, 1, "", "model"], [4, 1, 1, "", "model_sfs"], [4, 3, 1, "", "n"], [4, 3, 1, "", "n_bootstraps"], [4, 3, 1, "", "n_runs"], [4, 3, 1, "", "optimization"], [4, 3, 1, "", "parallelize"], [4, 4, 1, "", "param_names"], [4, 3, 1, "", "params_mle"], [4, 1, 1, "", "plot_all"], [4, 1, 1, "", "plot_bucket_sizes"], [4, 1, 1, "", "plot_continuous"], [4, 1, 1, "", "plot_discretized"], [4, 1, 1, "", "plot_inferred_parameters"], [4, 1, 1, "", "plot_inferred_parameters_boxplot"], [4, 1, 1, "", "plot_interval_density"], [4, 1, 1, "", "plot_likelihoods"], [4, 1, 1, "", "plot_nested_models"], [4, 1, 1, "", "plot_observed_sfs"], [4, 1, 1, "", "plot_sfs_comparison"], [4, 1, 1, "", "raise_if_locked"], [4, 1, 1, "", "report_result"], [4, 1, 1, "", "resample_sfs"], [4, 3, 1, "", "result"], [4, 3, 1, "", "rng"], [4, 1, 1, "", "run"], [4, 1, 1, "", "run_bootstrap_sample"], [4, 1, 1, "", "run_if_required"], [4, 1, 1, "", "run_if_required_wrapper"], [4, 3, 1, "", "scales"], [4, 3, 1, "", "seed"], [4, 3, 1, "", "sfs_mle"], [4, 3, 1, "", "sfs_neut"], [4, 3, 1, "", "sfs_sel"], [4, 3, 1, "", "theta"], [4, 1, 1, "", "to_file"], [4, 1, 1, "", "to_json"], [4, 1, 1, "", "update_properties"], [4, 3, 1, "", "x0"]], "fastdfe.config": [[2, 0, 1, "", "Config"]], "fastdfe.config.Config": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "create_polydfe_init_file"], [2, 1, 1, "", "create_polydfe_sfs_config"], [2, 1, 1, "", "from_dict"], [2, 1, 1, "", "from_file"], [2, 1, 1, "", "from_json"], [2, 1, 1, "", "from_yaml"], [2, 1, 1, "", "get_polydfe_model"], [2, 1, 1, "", "parse_polydfe_init_file"], [2, 1, 1, "", "parse_polydfe_sfs_config"], [2, 1, 1, "", "to_dict"], [2, 1, 1, "", "to_file"], [2, 1, 1, "", "to_json"], [2, 1, 1, "", "to_yaml"], [2, 1, 1, "", "update"]], "fastdfe.filtration": [[3, 0, 1, "", "AllFiltration"], [3, 0, 1, "", "BiasedGCConversionFiltration"], [3, 0, 1, "", "CodingSequenceFiltration"], [3, 0, 1, "", "DeviantOutgroupFiltration"], [3, 0, 1, "", "Filterer"], [3, 0, 1, "", "Filtration"], [3, 0, 1, "", "NoFiltration"], [3, 0, 1, "", "PolyAllelicFiltration"], [3, 0, 1, "", "SNPFiltration"], [3, 0, 1, "", "SNVFiltration"]], "fastdfe.filtration.AllFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.filtration.BiasedGCConversionFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.filtration.CodingSequenceFiltration": [[3, 1, 1, "", "__init__"], [3, 3, 1, "", "aliases"], [3, 3, 1, "", "cd"], [3, 1, 1, "", "filter_site"], [3, 3, 1, "", "n_processed"]], "fastdfe.filtration.DeviantOutgroupFiltration": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "create_masks"], [3, 1, 1, "", "filter_site"], [3, 3, 1, "", "ingroup_mask"], [3, 3, 1, "", "ingroups"], [3, 3, 1, "", "outgroup_mask"], [3, 3, 1, "", "outgroups"], [3, 3, 1, "", "samples"], [3, 3, 1, "", "strict_mode"]], "fastdfe.filtration.Filterer": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "filter"], [3, 3, 1, "", "filtrations"], [3, 1, 1, "", "is_filtered"], [3, 3, 1, "", "n_filtered"], [3, 3, 1, "", "output"]], "fastdfe.filtration.Filtration": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "filter_site"], [3, 3, 1, "", "n_filtered"]], "fastdfe.filtration.NoFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.filtration.PolyAllelicFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.filtration.SNPFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.filtration.SNVFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.joint_inference": [[4, 0, 1, "", "JointInference"]], "fastdfe.joint_inference.JointInference": [[4, 3, 1, "", "L2_residual"], [4, 1, 1, "", "__init__"], [4, 1, 1, "", "add_alpha_to_bootstraps"], [4, 1, 1, "", "add_covariates"], [4, 1, 1, "", "add_covariates_as_shared"], [4, 1, 1, "", "add_demography"], [4, 1, 1, "", "adjust_polarization"], [4, 4, 1, "", "alpha"], [4, 1, 1, "", "assign_result"], [4, 1, 1, "", "bootstrap"], [4, 1, 1, "", "bootstrap_if_required"], [4, 3, 1, "", "bootstrap_results"], [4, 3, 1, "", "bootstraps"], [4, 3, 1, "", "bounds"], [4, 1, 1, "", "check_fixed_params_exist"], [4, 1, 1, "", "check_no_shared_params_fixed"], [4, 1, 1, "", "check_shared_params"], [4, 1, 1, "", "compare_nested"], [4, 1, 1, "", "compare_nested_models"], [4, 3, 1, "", "covariates"], [4, 1, 1, "", "create_config"], [4, 3, 1, "", "default_bounds"], [4, 3, 1, "", "default_opts_mle"], [4, 3, 1, "", "default_scales"], [4, 3, 1, "", "default_x0"], [4, 1, 1, "", "determine_unshared_covariates"], [4, 3, 1, "", "discretization"], [4, 3, 1, "", "do_bootstrap"], [4, 1, 1, "", "evaluate_likelihood"], [4, 3, 1, "", "execution_time"], [4, 3, 1, "", "fixed_params"], [4, 3, 1, "", "folded"], [4, 1, 1, "", "from_config"], [4, 1, 1, "", "from_config_file"], [4, 1, 1, "", "from_file"], [4, 1, 1, "", "from_json"], [4, 1, 1, "", "get_L2_residual"], [4, 1, 1, "", "get_alpha"], [4, 1, 1, "", "get_bootstrap_param_names"], [4, 1, 1, "", "get_bootstrap_params"], [4, 1, 1, "", "get_bounds_linear"], [4, 1, 1, "", "get_cis_params_mle"], [4, 1, 1, "", "get_counts"], [4, 1, 1, "", "get_discretized"], [4, 1, 1, "", "get_errors_discretized_dfe"], [4, 1, 1, "", "get_fixed_param_names"], [4, 1, 1, "", "get_inferences"], [4, 1, 1, "", "get_n_optimized"], [4, 1, 1, "", "get_optimized_param_names"], [4, 1, 1, "", "get_scales_linear"], [4, 1, 1, "", "get_shared_param_names"], [4, 1, 1, "", "get_summary"], [4, 1, 1, "", "get_x0"], [4, 1, 1, "", "joint_inference_makes_sense"], [4, 3, 1, "", "joint_inferences"], [4, 3, 1, "", "likelihood"], [4, 3, 1, "", "likelihoods"], [4, 3, 1, "", "locked"], [4, 1, 1, "", "lrt"], [4, 3, 1, "", "marginal_inferences"], [4, 1, 1, "", "marginals_without_all"], [4, 3, 1, "", "model"], [4, 1, 1, "", "model_sfs"], [4, 3, 1, "", "n"], [4, 3, 1, "", "n_bootstraps"], [4, 3, 1, "", "n_runs"], [4, 3, 1, "", "optimization"], [4, 3, 1, "", "parallelize"], [4, 4, 1, "", "param_names"], [4, 3, 1, "", "params_mle"], [4, 3, 1, "", "params_mle_raw"], [4, 1, 1, "", "perform_lrt_covariates"], [4, 1, 1, "", "perform_lrt_shared"], [4, 1, 1, "", "plot_all"], [4, 1, 1, "", "plot_bucket_sizes"], [4, 1, 1, "", "plot_continuous"], [4, 1, 1, "", "plot_discretized"], [4, 1, 1, "", "plot_inferred_parameters"], [4, 1, 1, "", "plot_inferred_parameters_boxplot"], [4, 1, 1, "", "plot_interval_density"], [4, 1, 1, "", "plot_likelihoods"], [4, 1, 1, "", "plot_nested_models"], [4, 1, 1, "", "plot_observed_sfs"], [4, 1, 1, "", "plot_sfs_comparison"], [4, 1, 1, "", "raise_if_locked"], [4, 1, 1, "", "report_result"], [4, 1, 1, "", "resample_sfs"], [4, 3, 1, "", "result"], [4, 3, 1, "", "rng"], [4, 1, 1, "", "run"], [4, 1, 1, "", "run_bootstrap_sample"], [4, 1, 1, "", "run_if_required"], [4, 1, 1, "", "run_if_required_wrapper"], [4, 1, 1, "", "run_joint"], [4, 1, 1, "", "run_joint_bootstrap_sample"], [4, 1, 1, "", "run_joint_without_covariates"], [4, 1, 1, "", "run_marginal"], [4, 3, 1, "", "scales"], [4, 3, 1, "", "seed"], [4, 3, 1, "", "sfs_mle"], [4, 3, 1, "", "sfs_neut"], [4, 3, 1, "", "sfs_sel"], [4, 3, 1, "", "shared_params"], [4, 3, 1, "", "theta"], [4, 1, 1, "", "to_file"], [4, 1, 1, "", "to_json"], [4, 3, 1, "", "types"], [4, 1, 1, "", "update_properties"], [4, 3, 1, "", "x0"], [4, 3, 1, "", "x0_cov"]], "fastdfe.optimization": [[4, 0, 1, "", "Covariate"], [4, 0, 1, "", "SharedParams"]], "fastdfe.optimization.Covariate": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "apply"], [4, 1, 1, "", "apply_default"], [4, 3, 1, "", "bounds"], [4, 3, 1, "", "bounds_scale"], [4, 3, 1, "", "callback"], [4, 3, 1, "", "param"], [4, 3, 1, "", "values"], [4, 3, 1, "", "x0"]], "fastdfe.optimization.SharedParams": [[4, 1, 1, "", "__init__"], [4, 3, 1, "", "params"], [4, 3, 1, "", "types"]], "fastdfe.parametrization": [[5, 0, 1, "", "DiscreteFractionalParametrization"], [5, 0, 1, "", "DiscreteParametrization"], [5, 0, 1, "", "DisplacedGammaParametrization"], [5, 0, 1, "", "GammaDiscreteParametrization"], [5, 0, 1, "", "GammaExpParametrization"], [5, 0, 1, "", "Parametrization"]], "fastdfe.parametrization.DiscreteFractionalParametrization": [[5, 1, 1, "", "__init__"], [5, 3, 1, "", "fixed_params"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "interval_sizes"], [5, 3, 1, "", "intervals"], [5, 3, 1, "", "k"], [5, 3, 1, "", "param_names"], [5, 3, 1, "", "params"], [5, 1, 1, "", "to_fractional"], [5, 1, 1, "", "to_nominal"]], "fastdfe.parametrization.DiscreteParametrization": [[5, 1, 1, "", "__init__"], [5, 3, 1, "", "fixed_params"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "interval_sizes"], [5, 3, 1, "", "intervals"], [5, 3, 1, "", "k"], [5, 3, 1, "", "param_names"], [5, 3, 1, "", "params"]], "fastdfe.parametrization.DisplacedGammaParametrization": [[5, 3, 1, "", "bounds"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "scales"], [5, 3, 1, "", "submodels"], [5, 3, 1, "", "x0"]], "fastdfe.parametrization.GammaDiscreteParametrization": [[5, 3, 1, "", "bounds"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "scales"], [5, 3, 1, "", "submodels"], [5, 3, 1, "", "x0"]], "fastdfe.parametrization.GammaExpParametrization": [[5, 3, 1, "", "bounds"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "scales"], [5, 3, 1, "", "submodels"], [5, 3, 1, "", "x0"]], "fastdfe.parametrization.Parametrization": [[5, 1, 1, "", "__init__"], [5, 3, 1, "", "bounds"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "param_names"], [5, 3, 1, "", "scales"], [5, 3, 1, "", "submodels"], [5, 3, 1, "", "x0"]], "fastdfe.parser": [[6, 0, 1, "", "AncestralBaseStratification"], [6, 0, 1, "", "BaseContextStratification"], [6, 0, 1, "", "BaseTransitionStratification"], [6, 0, 1, "", "ChunkedStratification"], [6, 0, 1, "", "ContigStratification"], [6, 0, 1, "", "DegeneracyStratification"], [6, 0, 1, "", "GenomePositionDependentStratification"], [6, 0, 1, "", "Parser"], [6, 0, 1, "", "SnpEffStratification"], [6, 0, 1, "", "Stratification"], [6, 0, 1, "", "SynonymyStratification"], [6, 0, 1, "", "TransitionTransversionStratification"], [6, 0, 1, "", "VEPStratification"]], "fastdfe.parser.AncestralBaseStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.BaseContextStratification": [[6, 1, 1, "", "__init__"], [6, 3, 1, "", "aliases"], [6, 3, 1, "", "contig"], [6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"], [6, 3, 1, "", "n_flanking"]], "fastdfe.parser.BaseTransitionStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.ChunkedStratification": [[6, 1, 1, "", "__init__"], [6, 3, 1, "", "chunk_sizes"], [6, 3, 1, "", "counter"], [6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"], [6, 3, 1, "", "n_chunks"]], "fastdfe.parser.ContigStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.DegeneracyStratification": [[6, 1, 1, "", "__init__"], [6, 3, 1, "", "get_degeneracy"], [6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.Parser": [[6, 1, 1, "", "__init__"], [6, 3, 1, "", "annotations"], [6, 3, 1, "", "filtrations"], [6, 3, 1, "", "n"], [6, 3, 1, "", "n_skipped"], [6, 3, 1, "", "n_target_sites"], [6, 1, 1, "", "parse"], [6, 3, 1, "", "reader"], [6, 3, 1, "", "samples"], [6, 3, 1, "", "samples_mask"], [6, 3, 1, "", "sfs"], [6, 3, 1, "", "skip_non_polarized"], [6, 3, 1, "", "stratifications"]], "fastdfe.parser.SnpEffStratification": [[6, 3, 1, "", "info_tag"]], "fastdfe.parser.Stratification": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"], [6, 3, 1, "", "n_no_type"], [6, 3, 1, "", "parser"]], "fastdfe.parser.SynonymyStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.TransitionTransversionStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.VEPStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"], [6, 3, 1, "", "info_tag"]], "fastdfe.spectrum": [[7, 0, 1, "", "Spectra"], [8, 0, 1, "", "Spectrum"]], "fastdfe.spectrum.Spectra": [[7, 1, 1, "", "__init__"], [7, 4, 1, "", "all"], [7, 1, 1, "", "combine"], [7, 1, 1, "", "copy"], [7, 1, 1, "", "drop_empty"], [7, 1, 1, "", "drop_sparse"], [7, 1, 1, "", "drop_zero_entries"], [7, 1, 1, "", "fold"], [7, 1, 1, "", "from_dataframe"], [7, 1, 1, "", "from_dict"], [7, 1, 1, "", "from_file"], [7, 1, 1, "", "from_list"], [7, 1, 1, "", "from_spectra"], [7, 1, 1, "", "from_spectrum"], [7, 1, 1, "", "get_empty"], [7, 4, 1, "", "has_div"], [7, 1, 1, "", "has_dots"], [7, 1, 1, "", "is_folded"], [7, 4, 1, "", "k"], [7, 1, 1, "", "merge_groups"], [7, 4, 1, "", "n"], [7, 4, 1, "", "n_div"], [7, 4, 1, "", "n_monomorphic"], [7, 4, 1, "", "n_polymorphic"], [7, 4, 1, "", "n_sites"], [7, 1, 1, "", "normalize"], [7, 1, 1, "", "plot"], [7, 4, 1, "", "polymorphic"], [7, 1, 1, "", "prefix"], [7, 1, 1, "", "print"], [7, 1, 1, "", "rename"], [7, 1, 1, "", "replace_dots"], [7, 1, 1, "", "select"], [7, 1, 1, "", "sort_types"], [7, 1, 1, "", "to_dataframe"], [7, 1, 1, "", "to_dict"], [7, 1, 1, "", "to_file"], [7, 1, 1, "", "to_list"], [7, 1, 1, "", "to_multi_index"], [7, 1, 1, "", "to_numpy"], [7, 1, 1, "", "to_single_index"], [7, 1, 1, "", "to_spectra"], [7, 4, 1, "", "types"]], "fastdfe.spectrum.Spectrum": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "copy"], [8, 1, 1, "", "fold"], [8, 1, 1, "", "from_list"], [8, 1, 1, "", "from_polydfe"], [8, 1, 1, "", "from_polymorphic"], [8, 4, 1, "", "has_div"], [8, 1, 1, "", "is_folded"], [8, 4, 1, "", "n"], [8, 4, 1, "", "n_div"], [8, 4, 1, "", "n_monomorphic"], [8, 4, 1, "", "n_polymorphic"], [8, 4, 1, "", "n_sites"], [8, 1, 1, "", "normalize"], [8, 1, 1, "", "plot"], [8, 4, 1, "", "polymorphic"], [8, 1, 1, "", "standard_kingman"], [8, 4, 1, "", "theta"], [8, 1, 1, "", "to_list"], [8, 1, 1, "", "to_numpy"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "fastdf": 0, "": 0, "document": 0, "get": 0, "start": 0, "python": 0, "r": [0, 18], "refer": 0, "api": 0, "indic": 0, "tabl": 0, "vcf": [1, 3, 6, 22], "annot": [1, 22], "configur": [2, 9], "class": [2, 7, 8], "filtrat": [3, 22], "infer": [4, 9, 14, 15, 16, 23, 24], "parametr": [5, 21], "pars": [6, 22], "spectra": [7, 25], "spectrum": 8, "file": [9, 22], "basic": [9, 23, 24], "usag": 9, "json": 9, "joint": [9, 15, 16], "exampl": 9, "h": 14, "sapien": 14, "dfe": [15, 16, 21], "base": [15, 16], "bootstrap": [15, 16, 23, 24], "fix": [15, 16], "paramet": [15, 16], "nest": [15, 16], "model": [15, 16], "comparison": [15, 16], "visual": [15, 16], "likelihood": [15, 16], "serial": [15, 16, 23, 24, 25], "fold": [15, 16, 25], "covari": [15, 16], "instal": [17, 18], "pypi": 17, "conda": 17, "introduct": 19, "motiv": 19, "how": 19, "work": [19, 25], "featur": 19, "miscellan": 20, "log": 20, "debug": 20, "seed": 20, "sf": [22, 25], "from": 22, "simpl": 22, "stratif": 22, "degeneraci": 22, "synonymi": 22, "ancestr": 22, "allel": 22, "quickstart": [23, 24], "subtyp": 25, "group": 25, "prefix": 25}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to fastDFE\u2019s documentation": [[0, "welcome-to-fastdfe-s-documentation"]], "Getting Started (Python)": [[0, null]], "Getting Started (R)": [[0, null]], "Python Reference": [[0, null]], "API Reference": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "VCF Annotation": [[1, "module-fastdfe.annotation"]], "Configuration class": [[2, "configuration-class"]], "VCF Filtration": [[3, "module-fastdfe.filtration"]], "Inference": [[4, "inference"]], "Parametrizations": [[5, "module-fastdfe.parametrization"]], "VCF Parsing": [[6, "module-fastdfe.parser"]], "Spectra class": [[7, "spectra-class"]], "Spectrum class": [[8, "spectrum-class"]], "Configuration files": [[9, "configuration-files"]], "Basic usage": [[9, "basic-usage"]], "JSON files": [[9, "json-files"]], "Joint inference example": [[9, "joint-inference-example"]], "Inference on H. sapiens": [[14, "inference-on-h-sapiens"]], "DFE Inference": [[15, "dfe-inference"], [16, "dfe-inference"]], "Base inference": [[15, "base-inference"], [16, "base-inference"]], "Bootstrapping": [[15, "bootstrapping"], [16, "bootstrapping"], [23, "bootstrapping"], [24, "bootstrapping"]], "Fixing parameters": [[15, "fixing-parameters"], [16, "fixing-parameters"]], "Nested model comparison": [[15, "nested-model-comparison"], [16, "nested-model-comparison"]], "Visualize likelihoods": [[15, "visualize-likelihoods"], [16, "visualize-likelihoods"]], "Serialization": [[15, "serialization"], [16, "serialization"], [23, "serialization"], [24, "serialization"], [25, "serialization"]], "Folded inference": [[15, "folded-inference"], [16, "folded-inference"]], "Joint inference": [[15, "joint-inference"], [16, "joint-inference"]], "Model comparison": [[15, "model-comparison"], [15, "id1"], [16, "model-comparison"], [16, "id1"]], "Covariates": [[15, "covariates"], [16, "covariates"]], "Installation": [[17, "installation"], [18, "installation"]], "PyPi": [[17, "pypi"]], "Conda": [[17, "conda"]], "R": [[18, "r"]], "Introduction": [[19, "introduction"]], "Motivation": [[19, "motivation"]], "How it works": [[19, "how-it-works"]], "Features": [[19, "features"]], "Miscellaneous": [[20, "miscellaneous"]], "Logging": [[20, "logging"]], "Debugging": [[20, "debugging"]], "Seeding": [[20, "seeding"]], "DFE parametrizations": [[21, "dfe-parametrizations"]], "Parsing SFS from VCF file": [[22, "parsing-sfs-from-vcf-file"]], "Simple parsing": [[22, "simple-parsing"]], "Stratifications": [[22, "stratifications"]], "Annotations": [[22, "annotations"]], "Degeneracy and Synonymy Annotations": [[22, "degeneracy-and-synonymy-annotations"]], "Ancestral Allele Annotation": [[22, "ancestral-allele-annotation"]], "Filtrations": [[22, "filtrations"]], "Quickstart": [[23, "quickstart"], [24, "quickstart"]], "Basic inference": [[23, "basic-inference"], [24, "basic-inference"]], "Working with SFS": [[25, "working-with-sfs"]], "Subtypes": [[25, "subtypes"]], "Grouping": [[25, "grouping"]], "Prefixing": [[25, "prefixing"]], "Folded spectra": [[25, "folded-spectra"]]}, "indexentries": {"ancestralalleleannotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.AncestralAlleleAnnotation"]], "annotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.Annotation"]], "annotator (class in fastdfe.annotation)": [[1, "fastdfe.annotation.Annotator"]], "degeneracyannotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.DegeneracyAnnotation"]], "maximumparsimonyannotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.MaximumParsimonyAnnotation"]], "synonymyannotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.SynonymyAnnotation"]], "__init__() (fastdfe.annotation.annotation method)": [[1, "fastdfe.annotation.Annotation.__init__"]], "__init__() (fastdfe.annotation.annotator method)": [[1, "fastdfe.annotation.Annotator.__init__"]], "__init__() (fastdfe.annotation.degeneracyannotation method)": [[1, "fastdfe.annotation.DegeneracyAnnotation.__init__"]], "__init__() (fastdfe.annotation.maximumparsimonyannotation method)": [[1, "fastdfe.annotation.MaximumParsimonyAnnotation.__init__"]], "__init__() (fastdfe.annotation.synonymyannotation method)": [[1, "fastdfe.annotation.SynonymyAnnotation.__init__"]], "aliases (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.aliases"]], "aliases (fastdfe.annotation.synonymyannotation attribute)": [[1, "fastdfe.annotation.SynonymyAnnotation.aliases"]], "annotate() (fastdfe.annotation.annotator method)": [[1, "fastdfe.annotation.Annotator.annotate"]], "annotate_site() (fastdfe.annotation.annotation method)": [[1, "fastdfe.annotation.Annotation.annotate_site"]], "annotate_site() (fastdfe.annotation.degeneracyannotation method)": [[1, "fastdfe.annotation.DegeneracyAnnotation.annotate_site"]], "annotate_site() (fastdfe.annotation.maximumparsimonyannotation method)": [[1, "fastdfe.annotation.MaximumParsimonyAnnotation.annotate_site"]], "annotate_site() (fastdfe.annotation.synonymyannotation method)": [[1, "fastdfe.annotation.SynonymyAnnotation.annotate_site"]], "annotator (fastdfe.annotation.annotation attribute)": [[1, "fastdfe.annotation.Annotation.annotator"]], "cd (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.cd"]], "cd_next (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.cd_next"]], "cd_prev (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.cd_prev"]], "contig (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.contig"]], "count_target_sites() (fastdfe.annotation.annotation static method)": [[1, "fastdfe.annotation.Annotation.count_target_sites"]], "errors (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.errors"]], "fastdfe.annotation": [[1, "module-fastdfe.annotation"]], "is_synonymous() (fastdfe.annotation.synonymyannotation static method)": [[1, "fastdfe.annotation.SynonymyAnnotation.is_synonymous"]], "logger (fastdfe.annotation.annotation attribute)": [[1, "fastdfe.annotation.Annotation.logger"]], "mismatches (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.mismatches"]], "module": [[1, "module-fastdfe.annotation"], [3, "module-fastdfe.filtration"], [5, "module-fastdfe.parametrization"], [6, "module-fastdfe.parser"]], "mutate() (fastdfe.annotation.synonymyannotation static method)": [[1, "fastdfe.annotation.SynonymyAnnotation.mutate"]], "n_annotated (fastdfe.annotation.annotation attribute)": [[1, "fastdfe.annotation.Annotation.n_annotated"]], "n_skipped (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.n_skipped"]], "n_snpeff_comparisons (fastdfe.annotation.synonymyannotation attribute)": [[1, "fastdfe.annotation.SynonymyAnnotation.n_snpeff_comparisons"]], "n_target_sites (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.n_target_sites"]], "n_vep_comparisons (fastdfe.annotation.synonymyannotation attribute)": [[1, "fastdfe.annotation.SynonymyAnnotation.n_vep_comparisons"]], "samples (fastdfe.annotation.maximumparsimonyannotation attribute)": [[1, "fastdfe.annotation.MaximumParsimonyAnnotation.samples"]], "snpeff_mismatches (fastdfe.annotation.synonymyannotation attribute)": [[1, "fastdfe.annotation.SynonymyAnnotation.snpeff_mismatches"]], "vep_mismatches (fastdfe.annotation.synonymyannotation attribute)": [[1, "fastdfe.annotation.SynonymyAnnotation.vep_mismatches"]], "config (class in fastdfe.config)": [[2, "fastdfe.config.Config"]], "__init__() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.__init__"]], "create_polydfe_init_file() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.create_polydfe_init_file"]], "create_polydfe_sfs_config() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.create_polydfe_sfs_config"]], "from_dict() (fastdfe.config.config static method)": [[2, "fastdfe.config.Config.from_dict"]], "from_file() (fastdfe.config.config static method)": [[2, "fastdfe.config.Config.from_file"]], "from_json() (fastdfe.config.config static method)": [[2, "fastdfe.config.Config.from_json"]], "from_yaml() (fastdfe.config.config static method)": [[2, "fastdfe.config.Config.from_yaml"]], "get_polydfe_model() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.get_polydfe_model"]], "parse_polydfe_init_file() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.parse_polydfe_init_file"]], "parse_polydfe_sfs_config() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.parse_polydfe_sfs_config"]], "to_dict() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.to_dict"]], "to_file() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.to_file"]], "to_json() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.to_json"]], "to_yaml() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.to_yaml"]], "update() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.update"]], "allfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.AllFiltration"]], "biasedgcconversionfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.BiasedGCConversionFiltration"]], "codingsequencefiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.CodingSequenceFiltration"]], "deviantoutgroupfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration"]], "filterer (class in fastdfe.filtration)": [[3, "fastdfe.filtration.Filterer"]], "filtration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.Filtration"]], "nofiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.NoFiltration"]], "polyallelicfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.PolyAllelicFiltration"]], "snpfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.SNPFiltration"]], "snvfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.SNVFiltration"]], "__init__() (fastdfe.filtration.codingsequencefiltration method)": [[3, "fastdfe.filtration.CodingSequenceFiltration.__init__"]], "__init__() (fastdfe.filtration.deviantoutgroupfiltration method)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.__init__"]], "__init__() (fastdfe.filtration.filterer method)": [[3, "fastdfe.filtration.Filterer.__init__"]], "__init__() (fastdfe.filtration.filtration method)": [[3, "fastdfe.filtration.Filtration.__init__"]], "aliases (fastdfe.filtration.codingsequencefiltration attribute)": [[3, "fastdfe.filtration.CodingSequenceFiltration.aliases"]], "cd (fastdfe.filtration.codingsequencefiltration attribute)": [[3, "fastdfe.filtration.CodingSequenceFiltration.cd"]], "create_masks() (fastdfe.filtration.deviantoutgroupfiltration method)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.create_masks"]], "fastdfe.filtration": [[3, "module-fastdfe.filtration"]], "filter() (fastdfe.filtration.filterer method)": [[3, "fastdfe.filtration.Filterer.filter"]], "filter_site() (fastdfe.filtration.allfiltration method)": [[3, "fastdfe.filtration.AllFiltration.filter_site"]], "filter_site() (fastdfe.filtration.biasedgcconversionfiltration method)": [[3, "fastdfe.filtration.BiasedGCConversionFiltration.filter_site"]], "filter_site() (fastdfe.filtration.codingsequencefiltration method)": [[3, "fastdfe.filtration.CodingSequenceFiltration.filter_site"]], "filter_site() (fastdfe.filtration.deviantoutgroupfiltration method)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.filter_site"]], "filter_site() (fastdfe.filtration.filtration method)": [[3, "fastdfe.filtration.Filtration.filter_site"]], "filter_site() (fastdfe.filtration.nofiltration method)": [[3, "fastdfe.filtration.NoFiltration.filter_site"]], "filter_site() (fastdfe.filtration.polyallelicfiltration method)": [[3, "fastdfe.filtration.PolyAllelicFiltration.filter_site"]], "filter_site() (fastdfe.filtration.snpfiltration method)": [[3, "fastdfe.filtration.SNPFiltration.filter_site"]], "filter_site() (fastdfe.filtration.snvfiltration method)": [[3, "fastdfe.filtration.SNVFiltration.filter_site"]], "filtrations (fastdfe.filtration.filterer attribute)": [[3, "fastdfe.filtration.Filterer.filtrations"]], "ingroup_mask (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.ingroup_mask"]], "ingroups (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.ingroups"]], "is_filtered() (fastdfe.filtration.filterer method)": [[3, "fastdfe.filtration.Filterer.is_filtered"]], "n_filtered (fastdfe.filtration.filterer attribute)": [[3, "fastdfe.filtration.Filterer.n_filtered"]], "n_filtered (fastdfe.filtration.filtration attribute)": [[3, "fastdfe.filtration.Filtration.n_filtered"]], "n_processed (fastdfe.filtration.codingsequencefiltration attribute)": [[3, "fastdfe.filtration.CodingSequenceFiltration.n_processed"]], "outgroup_mask (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.outgroup_mask"]], "outgroups (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.outgroups"]], "output (fastdfe.filtration.filterer attribute)": [[3, "fastdfe.filtration.Filterer.output"]], "samples (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.samples"]], "strict_mode (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.strict_mode"]], "baseinference (class in fastdfe.base_inference)": [[4, "fastdfe.base_inference.BaseInference"]], "covariate (class in fastdfe.optimization)": [[4, "fastdfe.optimization.Covariate"]], "inference (class in fastdfe.abstract_inference)": [[4, "fastdfe.abstract_inference.Inference"]], "jointinference (class in fastdfe.joint_inference)": [[4, "fastdfe.joint_inference.JointInference"]], "l2_residual (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.L2_residual"]], "l2_residual (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.L2_residual"]], "sharedparams (class in fastdfe.optimization)": [[4, "fastdfe.optimization.SharedParams"]], "__init__() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.__init__"]], "__init__() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.__init__"]], "__init__() (fastdfe.optimization.covariate method)": [[4, "fastdfe.optimization.Covariate.__init__"]], "__init__() (fastdfe.optimization.sharedparams method)": [[4, "fastdfe.optimization.SharedParams.__init__"]], "add_alpha_to_bootstraps() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.add_alpha_to_bootstraps"]], "add_alpha_to_bootstraps() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.add_alpha_to_bootstraps"]], "add_covariates() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.add_covariates"]], "add_covariates_as_shared() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.add_covariates_as_shared"]], "add_demography() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.add_demography"]], "add_demography() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.add_demography"]], "adjust_polarization() (fastdfe.base_inference.baseinference static method)": [[4, "fastdfe.base_inference.BaseInference.adjust_polarization"]], "adjust_polarization() (fastdfe.joint_inference.jointinference static method)": [[4, "fastdfe.joint_inference.JointInference.adjust_polarization"]], "alpha (fastdfe.base_inference.baseinference property)": [[4, "fastdfe.base_inference.BaseInference.alpha"]], "alpha (fastdfe.joint_inference.jointinference property)": [[4, "fastdfe.joint_inference.JointInference.alpha"]], "apply() (fastdfe.optimization.covariate method)": [[4, "fastdfe.optimization.Covariate.apply"]], "apply_default() (fastdfe.optimization.covariate method)": [[4, "fastdfe.optimization.Covariate.apply_default"]], "assign_result() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.assign_result"]], "assign_result() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.assign_result"]], "bootstrap() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.bootstrap"]], "bootstrap() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.bootstrap"]], "bootstrap_if_required() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.bootstrap_if_required"]], "bootstrap_results (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.bootstrap_results"]], "bootstrap_results (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.bootstrap_results"]], "bootstraps (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.bootstraps"]], "bootstraps (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.bootstraps"]], "bounds (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.bounds"]], "bounds (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.bounds"]], "bounds (fastdfe.optimization.covariate attribute)": [[4, "fastdfe.optimization.Covariate.bounds"]], "bounds_scale (fastdfe.optimization.covariate attribute)": [[4, "fastdfe.optimization.Covariate.bounds_scale"]], "callback (fastdfe.optimization.covariate attribute)": [[4, "fastdfe.optimization.Covariate.callback"]], "check_fixed_params_exist() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.check_fixed_params_exist"]], "check_fixed_params_exist() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.check_fixed_params_exist"]], "check_no_shared_params_fixed() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.check_no_shared_params_fixed"]], "check_shared_params() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.check_shared_params"]], "compare_nested() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.compare_nested"]], "compare_nested() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.compare_nested"]], "compare_nested_models() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.compare_nested_models"]], "compare_nested_models() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.compare_nested_models"]], "compute_histogram() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.compute_histogram"]], "covariates (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.covariates"]], "create_config() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.create_config"]], "create_config() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.create_config"]], "default_bounds (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.default_bounds"]], "default_bounds (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.default_bounds"]], "default_opts_mle (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.default_opts_mle"]], "default_opts_mle (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.default_opts_mle"]], "default_scales (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.default_scales"]], "default_scales (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.default_scales"]], "default_x0 (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.default_x0"]], "default_x0 (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.default_x0"]], "determine_unshared_covariates() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.determine_unshared_covariates"]], "discretization (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.discretization"]], "discretization (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.discretization"]], "do_bootstrap (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.do_bootstrap"]], "do_bootstrap (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.do_bootstrap"]], "evaluate_likelihood() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.evaluate_likelihood"]], "evaluate_likelihood() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.evaluate_likelihood"]], "execution_time (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.execution_time"]], "execution_time (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.execution_time"]], "fixed_params (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.fixed_params"]], "fixed_params (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.fixed_params"]], "folded (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.folded"]], "folded (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.folded"]], "from_config() (fastdfe.base_inference.baseinference class method)": [[4, "fastdfe.base_inference.BaseInference.from_config"]], "from_config() (fastdfe.joint_inference.jointinference class method)": [[4, "fastdfe.joint_inference.JointInference.from_config"]], "from_config_file() (fastdfe.base_inference.baseinference class method)": [[4, "fastdfe.base_inference.BaseInference.from_config_file"]], "from_config_file() (fastdfe.joint_inference.jointinference class method)": [[4, "fastdfe.joint_inference.JointInference.from_config_file"]], "from_file() (fastdfe.base_inference.baseinference class method)": [[4, "fastdfe.base_inference.BaseInference.from_file"]], "from_file() (fastdfe.joint_inference.jointinference class method)": [[4, "fastdfe.joint_inference.JointInference.from_file"]], "from_json() (fastdfe.base_inference.baseinference class method)": [[4, "fastdfe.base_inference.BaseInference.from_json"]], "from_json() (fastdfe.joint_inference.jointinference class method)": [[4, "fastdfe.joint_inference.JointInference.from_json"]], "get_l2_residual() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_L2_residual"]], "get_alpha() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_alpha"]], "get_alpha() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_alpha"]], "get_bootstrap_param_names() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_bootstrap_param_names"]], "get_bootstrap_param_names() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_bootstrap_param_names"]], "get_bootstrap_params() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_bootstrap_params"]], "get_bootstrap_params() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_bootstrap_params"]], "get_bounds_linear() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_bounds_linear"]], "get_bounds_linear() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_bounds_linear"]], "get_cis_params_mle() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.get_cis_params_mle"]], "get_cis_params_mle() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_cis_params_mle"]], "get_cis_params_mle() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_cis_params_mle"]], "get_counts() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_counts"]], "get_counts() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_counts"]], "get_discretized() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.get_discretized"]], "get_discretized() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_discretized"]], "get_discretized() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_discretized"]], "get_errors_discretized_dfe() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_errors_discretized_dfe"]], "get_errors_discretized_dfe() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_errors_discretized_dfe"]], "get_errors_params_mle() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.get_errors_params_mle"]], "get_fixed_param_names() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_fixed_param_names"]], "get_fixed_param_names() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_fixed_param_names"]], "get_inferences() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_inferences"]], "get_n_optimized() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_n_optimized"]], "get_n_optimized() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_n_optimized"]], "get_optimized_param_names() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_optimized_param_names"]], "get_optimized_param_names() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_optimized_param_names"]], "get_scales_linear() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_scales_linear"]], "get_scales_linear() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_scales_linear"]], "get_shared_param_names() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_shared_param_names"]], "get_stats_discretized() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.get_stats_discretized"]], "get_summary() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_summary"]], "get_summary() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_summary"]], "get_x0() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_x0"]], "get_x0() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_x0"]], "joint_inference_makes_sense() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.joint_inference_makes_sense"]], "joint_inferences (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.joint_inferences"]], "likelihood (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.likelihood"]], "likelihood (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.likelihood"]], "likelihoods (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.likelihoods"]], "likelihoods (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.likelihoods"]], "locked (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.locked"]], "locked (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.locked"]], "lrt() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.lrt"]], "lrt() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.lrt"]], "marginal_inferences (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.marginal_inferences"]], "marginals_without_all() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.marginals_without_all"]], "model (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.model"]], "model (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.model"]], "model_sfs() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.model_sfs"]], "model_sfs() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.model_sfs"]], "n (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.n"]], "n (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.n"]], "n_bootstraps (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.n_bootstraps"]], "n_bootstraps (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.n_bootstraps"]], "n_runs (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.n_runs"]], "n_runs (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.n_runs"]], "optimization (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.optimization"]], "optimization (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.optimization"]], "parallelize (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.parallelize"]], "parallelize (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.parallelize"]], "param (fastdfe.optimization.covariate attribute)": [[4, "fastdfe.optimization.Covariate.param"]], "param_names (fastdfe.base_inference.baseinference property)": [[4, "fastdfe.base_inference.BaseInference.param_names"]], "param_names (fastdfe.joint_inference.jointinference property)": [[4, "fastdfe.joint_inference.JointInference.param_names"]], "params (fastdfe.optimization.sharedparams attribute)": [[4, "fastdfe.optimization.SharedParams.params"]], "params_mle (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.params_mle"]], "params_mle (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.params_mle"]], "params_mle_raw (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.params_mle_raw"]], "perform_lrt_covariates() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.perform_lrt_covariates"]], "perform_lrt_shared() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.perform_lrt_shared"]], "plot_all() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_all"]], "plot_all() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_all"]], "plot_bucket_sizes() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_bucket_sizes"]], "plot_bucket_sizes() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_bucket_sizes"]], "plot_continuous() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.plot_continuous"]], "plot_continuous() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_continuous"]], "plot_continuous() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_continuous"]], "plot_discretized() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.plot_discretized"]], "plot_discretized() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_discretized"]], "plot_discretized() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_discretized"]], "plot_inferred_parameters() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.plot_inferred_parameters"]], "plot_inferred_parameters() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_inferred_parameters"]], "plot_inferred_parameters() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_inferred_parameters"]], "plot_inferred_parameters_boxplot() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.plot_inferred_parameters_boxplot"]], "plot_inferred_parameters_boxplot() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_inferred_parameters_boxplot"]], "plot_inferred_parameters_boxplot() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_inferred_parameters_boxplot"]], "plot_interval_density() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_interval_density"]], "plot_interval_density() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_interval_density"]], "plot_likelihoods() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_likelihoods"]], "plot_likelihoods() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_likelihoods"]], "plot_nested_models() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_nested_models"]], "plot_nested_models() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_nested_models"]], "plot_observed_sfs() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_observed_sfs"]], "plot_observed_sfs() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_observed_sfs"]], "plot_sfs_comparison() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_sfs_comparison"]], "plot_sfs_comparison() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_sfs_comparison"]], "raise_if_locked() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.raise_if_locked"]], "raise_if_locked() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.raise_if_locked"]], "report_result() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.report_result"]], "report_result() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.report_result"]], "resample_sfs() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.resample_sfs"]], "resample_sfs() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.resample_sfs"]], "result (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.result"]], "result (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.result"]], "rng (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.rng"]], "rng (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.rng"]], "run() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.run"]], "run() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run"]], "run_bootstrap_sample() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.run_bootstrap_sample"]], "run_bootstrap_sample() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_bootstrap_sample"]], "run_if_required() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.run_if_required"]], "run_if_required() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_if_required"]], "run_if_required_wrapper() (fastdfe.base_inference.baseinference static method)": [[4, "fastdfe.base_inference.BaseInference.run_if_required_wrapper"]], "run_if_required_wrapper() (fastdfe.joint_inference.jointinference static method)": [[4, "fastdfe.joint_inference.JointInference.run_if_required_wrapper"]], "run_joint() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_joint"]], "run_joint_bootstrap_sample() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_joint_bootstrap_sample"]], "run_joint_without_covariates() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_joint_without_covariates"]], "run_marginal() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_marginal"]], "scales (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.scales"]], "scales (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.scales"]], "seed (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.seed"]], "seed (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.seed"]], "sfs_mle (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.sfs_mle"]], "sfs_mle (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.sfs_mle"]], "sfs_neut (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.sfs_neut"]], "sfs_neut (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.sfs_neut"]], "sfs_sel (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.sfs_sel"]], "sfs_sel (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.sfs_sel"]], "shared_params (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.shared_params"]], "theta (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.theta"]], "theta (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.theta"]], "to_file() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.to_file"]], "to_file() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.to_file"]], "to_json() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.to_json"]], "to_json() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.to_json"]], "types (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.types"]], "types (fastdfe.optimization.sharedparams attribute)": [[4, "fastdfe.optimization.SharedParams.types"]], "update_properties() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.update_properties"]], "update_properties() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.update_properties"]], "values (fastdfe.optimization.covariate attribute)": [[4, "fastdfe.optimization.Covariate.values"]], "x0 (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.x0"]], "x0 (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.x0"]], "x0 (fastdfe.optimization.covariate attribute)": [[4, "fastdfe.optimization.Covariate.x0"]], "x0_cov (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.x0_cov"]], "discretefractionalparametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization"]], "discreteparametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.DiscreteParametrization"]], "displacedgammaparametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization"]], "gammadiscreteparametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization"]], "gammaexpparametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.GammaExpParametrization"]], "parametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.Parametrization"]], "__init__() (fastdfe.parametrization.discretefractionalparametrization method)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.__init__"]], "__init__() (fastdfe.parametrization.discreteparametrization method)": [[5, "fastdfe.parametrization.DiscreteParametrization.__init__"]], "__init__() (fastdfe.parametrization.parametrization method)": [[5, "fastdfe.parametrization.Parametrization.__init__"]], "bounds (fastdfe.parametrization.displacedgammaparametrization attribute)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.bounds"]], "bounds (fastdfe.parametrization.gammadiscreteparametrization attribute)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.bounds"]], "bounds (fastdfe.parametrization.gammaexpparametrization attribute)": [[5, "fastdfe.parametrization.GammaExpParametrization.bounds"]], "bounds (fastdfe.parametrization.parametrization attribute)": [[5, "fastdfe.parametrization.Parametrization.bounds"]], "fastdfe.parametrization": [[5, "module-fastdfe.parametrization"]], "fixed_params (fastdfe.parametrization.discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.fixed_params"]], "fixed_params (fastdfe.parametrization.discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.fixed_params"]], "get_cdf() (fastdfe.parametrization.discretefractionalparametrization method)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.get_cdf"]], "get_cdf() (fastdfe.parametrization.discreteparametrization method)": [[5, "fastdfe.parametrization.DiscreteParametrization.get_cdf"]], "get_cdf() (fastdfe.parametrization.displacedgammaparametrization static method)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.get_cdf"]], "get_cdf() (fastdfe.parametrization.gammadiscreteparametrization static method)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.get_cdf"]], "get_cdf() (fastdfe.parametrization.gammaexpparametrization static method)": [[5, "fastdfe.parametrization.GammaExpParametrization.get_cdf"]], "get_cdf() (fastdfe.parametrization.parametrization method)": [[5, "fastdfe.parametrization.Parametrization.get_cdf"]], "get_pdf() (fastdfe.parametrization.discretefractionalparametrization method)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.get_pdf"]], "get_pdf() (fastdfe.parametrization.discreteparametrization method)": [[5, "fastdfe.parametrization.DiscreteParametrization.get_pdf"]], "get_pdf() (fastdfe.parametrization.displacedgammaparametrization static method)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.get_pdf"]], "get_pdf() (fastdfe.parametrization.gammadiscreteparametrization static method)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.get_pdf"]], "get_pdf() (fastdfe.parametrization.gammaexpparametrization static method)": [[5, "fastdfe.parametrization.GammaExpParametrization.get_pdf"]], "get_pdf() (fastdfe.parametrization.parametrization method)": [[5, "fastdfe.parametrization.Parametrization.get_pdf"]], "interval_sizes (fastdfe.parametrization.discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.interval_sizes"]], "interval_sizes (fastdfe.parametrization.discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.interval_sizes"]], "intervals (fastdfe.parametrization.discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.intervals"]], "intervals (fastdfe.parametrization.discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.intervals"]], "k (fastdfe.parametrization.discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.k"]], "k (fastdfe.parametrization.discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.k"]], "param_names (fastdfe.parametrization.discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.param_names"]], "param_names (fastdfe.parametrization.discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.param_names"]], "param_names (fastdfe.parametrization.parametrization attribute)": [[5, "fastdfe.parametrization.Parametrization.param_names"]], "params (fastdfe.parametrization.discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.params"]], "params (fastdfe.parametrization.discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.params"]], "scales (fastdfe.parametrization.displacedgammaparametrization attribute)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.scales"]], "scales (fastdfe.parametrization.gammadiscreteparametrization attribute)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.scales"]], "scales (fastdfe.parametrization.gammaexpparametrization attribute)": [[5, "fastdfe.parametrization.GammaExpParametrization.scales"]], "scales (fastdfe.parametrization.parametrization attribute)": [[5, "fastdfe.parametrization.Parametrization.scales"]], "submodels (fastdfe.parametrization.displacedgammaparametrization attribute)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.submodels"]], "submodels (fastdfe.parametrization.gammadiscreteparametrization attribute)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.submodels"]], "submodels (fastdfe.parametrization.gammaexpparametrization attribute)": [[5, "fastdfe.parametrization.GammaExpParametrization.submodels"]], "submodels (fastdfe.parametrization.parametrization attribute)": [[5, "fastdfe.parametrization.Parametrization.submodels"]], "to_fractional() (fastdfe.parametrization.discretefractionalparametrization method)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.to_fractional"]], "to_nominal() (fastdfe.parametrization.discretefractionalparametrization method)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.to_nominal"]], "x0 (fastdfe.parametrization.displacedgammaparametrization attribute)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.x0"]], "x0 (fastdfe.parametrization.gammadiscreteparametrization attribute)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.x0"]], "x0 (fastdfe.parametrization.gammaexpparametrization attribute)": [[5, "fastdfe.parametrization.GammaExpParametrization.x0"]], "x0 (fastdfe.parametrization.parametrization attribute)": [[5, "fastdfe.parametrization.Parametrization.x0"]], "ancestralbasestratification (class in fastdfe.parser)": [[6, "fastdfe.parser.AncestralBaseStratification"]], "basecontextstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.BaseContextStratification"]], "basetransitionstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.BaseTransitionStratification"]], "chunkedstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.ChunkedStratification"]], "contigstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.ContigStratification"]], "degeneracystratification (class in fastdfe.parser)": [[6, "fastdfe.parser.DegeneracyStratification"]], "genomepositiondependentstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.GenomePositionDependentStratification"]], "parser (class in fastdfe.parser)": [[6, "fastdfe.parser.Parser"]], "snpeffstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.SnpEffStratification"]], "stratification (class in fastdfe.parser)": [[6, "fastdfe.parser.Stratification"]], "synonymystratification (class in fastdfe.parser)": [[6, "fastdfe.parser.SynonymyStratification"]], "transitiontransversionstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.TransitionTransversionStratification"]], "vepstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.VEPStratification"]], "__init__() (fastdfe.parser.basecontextstratification method)": [[6, "fastdfe.parser.BaseContextStratification.__init__"]], "__init__() (fastdfe.parser.chunkedstratification method)": [[6, "fastdfe.parser.ChunkedStratification.__init__"]], "__init__() (fastdfe.parser.degeneracystratification method)": [[6, "fastdfe.parser.DegeneracyStratification.__init__"]], "__init__() (fastdfe.parser.parser method)": [[6, "fastdfe.parser.Parser.__init__"]], "__init__() (fastdfe.parser.stratification method)": [[6, "fastdfe.parser.Stratification.__init__"]], "aliases (fastdfe.parser.basecontextstratification attribute)": [[6, "fastdfe.parser.BaseContextStratification.aliases"]], "annotations (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.annotations"]], "chunk_sizes (fastdfe.parser.chunkedstratification attribute)": [[6, "fastdfe.parser.ChunkedStratification.chunk_sizes"]], "contig (fastdfe.parser.basecontextstratification attribute)": [[6, "fastdfe.parser.BaseContextStratification.contig"]], "counter (fastdfe.parser.chunkedstratification attribute)": [[6, "fastdfe.parser.ChunkedStratification.counter"]], "fastdfe.parser": [[6, "module-fastdfe.parser"]], "filtrations (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.filtrations"]], "get_degeneracy (fastdfe.parser.degeneracystratification attribute)": [[6, "fastdfe.parser.DegeneracyStratification.get_degeneracy"]], "get_type() (fastdfe.parser.ancestralbasestratification method)": [[6, "fastdfe.parser.AncestralBaseStratification.get_type"]], "get_type() (fastdfe.parser.basecontextstratification method)": [[6, "fastdfe.parser.BaseContextStratification.get_type"]], "get_type() (fastdfe.parser.basetransitionstratification method)": [[6, "fastdfe.parser.BaseTransitionStratification.get_type"]], "get_type() (fastdfe.parser.chunkedstratification method)": [[6, "fastdfe.parser.ChunkedStratification.get_type"]], "get_type() (fastdfe.parser.contigstratification method)": [[6, "fastdfe.parser.ContigStratification.get_type"]], "get_type() (fastdfe.parser.degeneracystratification method)": [[6, "fastdfe.parser.DegeneracyStratification.get_type"]], "get_type() (fastdfe.parser.stratification method)": [[6, "fastdfe.parser.Stratification.get_type"]], "get_type() (fastdfe.parser.synonymystratification method)": [[6, "fastdfe.parser.SynonymyStratification.get_type"]], "get_type() (fastdfe.parser.transitiontransversionstratification method)": [[6, "fastdfe.parser.TransitionTransversionStratification.get_type"]], "get_type() (fastdfe.parser.vepstratification method)": [[6, "fastdfe.parser.VEPStratification.get_type"]], "get_types() (fastdfe.parser.ancestralbasestratification method)": [[6, "fastdfe.parser.AncestralBaseStratification.get_types"]], "get_types() (fastdfe.parser.basecontextstratification method)": [[6, "fastdfe.parser.BaseContextStratification.get_types"]], "get_types() (fastdfe.parser.basetransitionstratification method)": [[6, "fastdfe.parser.BaseTransitionStratification.get_types"]], "get_types() (fastdfe.parser.chunkedstratification method)": [[6, "fastdfe.parser.ChunkedStratification.get_types"]], "get_types() (fastdfe.parser.contigstratification method)": [[6, "fastdfe.parser.ContigStratification.get_types"]], "get_types() (fastdfe.parser.degeneracystratification method)": [[6, "fastdfe.parser.DegeneracyStratification.get_types"]], "get_types() (fastdfe.parser.stratification method)": [[6, "fastdfe.parser.Stratification.get_types"]], "get_types() (fastdfe.parser.synonymystratification method)": [[6, "fastdfe.parser.SynonymyStratification.get_types"]], "get_types() (fastdfe.parser.transitiontransversionstratification method)": [[6, "fastdfe.parser.TransitionTransversionStratification.get_types"]], "get_types() (fastdfe.parser.vepstratification method)": [[6, "fastdfe.parser.VEPStratification.get_types"]], "info_tag (fastdfe.parser.snpeffstratification attribute)": [[6, "fastdfe.parser.SnpEffStratification.info_tag"]], "info_tag (fastdfe.parser.vepstratification attribute)": [[6, "fastdfe.parser.VEPStratification.info_tag"]], "n (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.n"]], "n_chunks (fastdfe.parser.chunkedstratification attribute)": [[6, "fastdfe.parser.ChunkedStratification.n_chunks"]], "n_flanking (fastdfe.parser.basecontextstratification attribute)": [[6, "fastdfe.parser.BaseContextStratification.n_flanking"]], "n_no_type (fastdfe.parser.stratification attribute)": [[6, "fastdfe.parser.Stratification.n_no_type"]], "n_skipped (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.n_skipped"]], "n_target_sites (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.n_target_sites"]], "parse() (fastdfe.parser.parser method)": [[6, "fastdfe.parser.Parser.parse"]], "parser (fastdfe.parser.stratification attribute)": [[6, "fastdfe.parser.Stratification.parser"]], "reader (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.reader"]], "samples (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.samples"]], "samples_mask (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.samples_mask"]], "sfs (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.sfs"]], "skip_non_polarized (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.skip_non_polarized"]], "stratifications (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.stratifications"]], "spectra (class in fastdfe.spectrum)": [[7, "fastdfe.spectrum.Spectra"]], "__init__() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.__init__"]], "all (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.all"]], "combine() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.combine"]], "copy() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.copy"]], "drop_empty() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.drop_empty"]], "drop_sparse() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.drop_sparse"]], "drop_zero_entries() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.drop_zero_entries"]], "fold() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.fold"]], "from_dataframe() (fastdfe.spectrum.spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_dataframe"]], "from_dict() (fastdfe.spectrum.spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_dict"]], "from_file() (fastdfe.spectrum.spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_file"]], "from_list() (fastdfe.spectrum.spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_list"]], "from_spectra() (fastdfe.spectrum.spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_spectra"]], "from_spectrum() (fastdfe.spectrum.spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_spectrum"]], "get_empty() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.get_empty"]], "has_div (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.has_div"]], "has_dots() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.has_dots"]], "is_folded() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.is_folded"]], "k (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.k"]], "merge_groups() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.merge_groups"]], "n (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.n"]], "n_div (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.n_div"]], "n_monomorphic (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.n_monomorphic"]], "n_polymorphic (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.n_polymorphic"]], "n_sites (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.n_sites"]], "normalize() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.normalize"]], "plot() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.plot"]], "polymorphic (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.polymorphic"]], "prefix() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.prefix"]], "print() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.print"]], "rename() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.rename"]], "replace_dots() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.replace_dots"]], "select() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.select"]], "sort_types() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.sort_types"]], "to_dataframe() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.to_dataframe"]], "to_dict() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.to_dict"]], "to_file() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.to_file"]], "to_list() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.to_list"]], "to_multi_index() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.to_multi_index"]], "to_numpy() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.to_numpy"]], "to_single_index() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.to_single_index"]], "to_spectra() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.to_spectra"]], "types (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.types"]], "spectrum (class in fastdfe.spectrum)": [[8, "fastdfe.spectrum.Spectrum"]], "__init__() (fastdfe.spectrum.spectrum method)": [[8, "fastdfe.spectrum.Spectrum.__init__"]], "copy() (fastdfe.spectrum.spectrum method)": [[8, "fastdfe.spectrum.Spectrum.copy"]], "fold() (fastdfe.spectrum.spectrum method)": [[8, "fastdfe.spectrum.Spectrum.fold"]], "from_list() (fastdfe.spectrum.spectrum static method)": [[8, "fastdfe.spectrum.Spectrum.from_list"]], "from_polydfe() (fastdfe.spectrum.spectrum static method)": [[8, "fastdfe.spectrum.Spectrum.from_polydfe"]], "from_polymorphic() (fastdfe.spectrum.spectrum static method)": [[8, "fastdfe.spectrum.Spectrum.from_polymorphic"]], "has_div (fastdfe.spectrum.spectrum property)": [[8, "fastdfe.spectrum.Spectrum.has_div"]], "is_folded() (fastdfe.spectrum.spectrum method)": [[8, "fastdfe.spectrum.Spectrum.is_folded"]], "n (fastdfe.spectrum.spectrum property)": [[8, "fastdfe.spectrum.Spectrum.n"]], "n_div (fastdfe.spectrum.spectrum property)": [[8, "fastdfe.spectrum.Spectrum.n_div"]], "n_monomorphic (fastdfe.spectrum.spectrum property)": [[8, "fastdfe.spectrum.Spectrum.n_monomorphic"]], "n_polymorphic (fastdfe.spectrum.spectrum property)": [[8, "fastdfe.spectrum.Spectrum.n_polymorphic"]], "n_sites (fastdfe.spectrum.spectrum property)": [[8, "fastdfe.spectrum.Spectrum.n_sites"]], "normalize() (fastdfe.spectrum.spectrum method)": [[8, "fastdfe.spectrum.Spectrum.normalize"]], "plot() (fastdfe.spectrum.spectrum method)": [[8, "fastdfe.spectrum.Spectrum.plot"]], "polymorphic (fastdfe.spectrum.spectrum property)": [[8, "fastdfe.spectrum.Spectrum.polymorphic"]], "standard_kingman() (fastdfe.spectrum.spectrum static method)": [[8, "fastdfe.spectrum.Spectrum.standard_kingman"]], "theta (fastdfe.spectrum.spectrum property)": [[8, "fastdfe.spectrum.Spectrum.theta"]], "to_list() (fastdfe.spectrum.spectrum method)": [[8, "fastdfe.spectrum.Spectrum.to_list"]], "to_numpy() (fastdfe.spectrum.spectrum method)": [[8, "fastdfe.spectrum.Spectrum.to_numpy"]]}})