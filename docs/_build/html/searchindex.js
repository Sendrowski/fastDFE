Search.setIndex({"docnames": ["index", "modules/annotation", "modules/config", "modules/filtration", "modules/inference", "modules/parametrization", "modules/parser", "modules/spectra", "modules/spectrum", "reference/Python/config", "reference/Python/example_pendula_biased_gc", "reference/Python/example_pendula_complex", "reference/Python/example_pendula_marginal", "reference/Python/example_pendula_simple", "reference/Python/example_sapiens", "reference/Python/inference", "reference/Python/installation", "reference/Python/miscellaneous", "reference/Python/parametrizations", "reference/Python/parser", "reference/Python/quickstart", "reference/Python/spectra", "reference/R/config", "reference/R/inference", "reference/R/installation", "reference/R/miscellaneous", "reference/R/parametrizations", "reference/R/parser", "reference/R/quickstart", "reference/R/spectra", "reference/introduction"], "filenames": ["index.rst", "modules/annotation.rst", "modules/config.rst", "modules/filtration.rst", "modules/inference.rst", "modules/parametrization.rst", "modules/parser.rst", "modules/spectra.rst", "modules/spectrum.rst", "reference/Python/config.rst", "reference/Python/example_pendula_biased_gc.ipynb", "reference/Python/example_pendula_complex.ipynb", "reference/Python/example_pendula_marginal.ipynb", "reference/Python/example_pendula_simple.ipynb", "reference/Python/example_sapiens.ipynb", "reference/Python/inference.ipynb", "reference/Python/installation.rst", "reference/Python/miscellaneous.rst", "reference/Python/parametrizations.ipynb", "reference/Python/parser.ipynb", "reference/Python/quickstart.ipynb", "reference/Python/spectra.ipynb", "reference/R/config.rst", "reference/R/inference.ipynb", "reference/R/installation.rst", "reference/R/miscellaneous.rst", "reference/R/parametrizations.ipynb", "reference/R/parser.ipynb", "reference/R/quickstart.ipynb", "reference/R/spectra.ipynb", "reference/introduction.rst"], "titles": ["Welcome to fastDFE\u2019s documentation", "VCF Annotation", "Configuration class", "VCF Filtration", "Inference", "DFE Parametrizations", "VCF Parsing", "Spectra class", "Spectrum class", "Configuration files", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Inference on H. sapiens", "DFE Inference", "Installation", "Miscellaneous", "DFE parametrizations", "VCF Parsing", "Quickstart", "Working with SFS", "Configuration files", "DFE Inference", "Installation", "Miscellaneous", "DFE parametrizations", "VCF Parsing", "Quickstart", "Working with SFS", "Introduction"], "terms": {"i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "packag": [0, 16, 23, 24, 25, 26, 27, 28, 29, 30], "fast": [0, 9, 22], "flexibl": [0, 5, 30], "hierarch": 0, "infer": [0, 1, 2, 3, 6, 10, 11, 12, 13, 18, 19, 21, 25, 26, 27, 29, 30], "distribut": [0, 4, 5, 19, 27, 30], "fit": [0, 4, 15, 23, 30], "effect": [0, 4, 30], "dfe": [0, 2, 3, 4, 6, 9, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9, 14, 15, 19, 20, 21, 22, 23, 27, 28, 29, 30], "site": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 15, 19, 20, 21, 23, 27, 28, 29, 30], "frequenc": [0, 1, 2, 6, 7, 8, 10, 19, 21, 27, 29, 30], "spectra": [0, 1, 2, 3, 4, 6, 8, 10, 11, 12, 14, 15, 19, 23, 27, 30], "sf": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 22, 23, 27, 28, 30], "introduct": 0, "motiv": 0, "how": [0, 1, 4, 15, 18, 23, 25, 26], "work": [0, 1, 3, 6, 15, 23], "featur": 0, "instal": 0, "pypi": 0, "conda": 0, "quickstart": 0, "basic": 0, "bootstrap": [0, 2, 4, 9, 10, 12, 13, 17, 18, 22, 25, 30], "serial": [0, 4, 30], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 19, 21, 27, 29], "fix": [0, 1, 2, 4, 5, 7, 9, 22], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 22, 30], "nest": [0, 4, 7, 30], "model": [0, 1, 2, 4, 5, 9, 10, 13, 18, 19, 20, 22, 26, 27, 28, 30], "comparison": [0, 4, 20, 28, 30], "visual": [0, 1, 4, 7, 19, 24, 27, 30], "likelihood": [0, 1, 2, 4, 9, 10, 11, 12, 13, 18, 20, 22, 26, 28, 30], "fold": [0, 1, 4, 6, 7, 8, 10, 19, 27], "joint": [0, 4, 6, 10, 30], "covari": [0, 2, 4, 9, 10, 11, 22, 30], "configur": [0, 1, 6, 15, 23, 28, 30], "file": [0, 1, 2, 3, 4, 6, 7, 8, 10, 14, 15, 16, 19, 20, 21, 23, 27, 28, 29, 30], "usag": [0, 1, 3, 4, 6, 30], "json": [0, 2, 4, 15, 20, 23, 28], "exampl": [0, 1, 3, 4, 6, 15, 17, 18, 19, 20, 23, 25, 26, 27, 28], "parametr": [0, 2, 4, 9, 15, 20, 22, 23, 28, 30], "subtyp": [0, 4], "group": [0, 1, 7], "prefix": [0, 7], "vcf": [0, 10, 11, 12, 14, 15, 17, 23, 25, 30], "pars": [0, 1, 2, 3, 10, 11, 12, 14, 15, 17, 23, 25], "stratif": [0, 6, 10, 11, 12, 14, 15, 23, 30], "annot": [0, 3, 6, 14, 30], "degeneraci": [0, 1, 6, 30], "ancestr": [0, 1, 3, 4, 6, 15, 21, 23, 29, 30], "allel": [0, 1, 3, 6, 7, 15, 21, 23, 29, 30], "filtrat": [0, 6, 14, 30], "miscellan": 0, "log": [0, 1, 2, 4, 5, 9, 10, 11, 12, 13, 15, 18, 20, 22, 23, 26], "debug": 0, "seed": [0, 1, 2, 3, 4, 6, 9, 10, 22], "object": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 15, 18, 20, 21, 22, 23, 26, 28, 29, 30], "orient": 0, "design": [0, 21, 29, 30], "baseinfer": [0, 2, 4, 9, 10, 11, 12, 13, 15, 17, 18, 20, 22, 23, 25, 26, 28], "default_x0": [0, 4], "default_bound": [0, 4], "default_scal": [0, 4], "default_opts_ml": [0, 4], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10], "sfs_neut": [0, 2, 4, 9, 10, 11, 12, 13, 15, 18, 20, 22, 23, 26, 28], "sfs_sel": [0, 2, 4, 9, 10, 11, 12, 13, 15, 18, 20, 22, 23, 26, 28], "n": [0, 2, 4, 6, 7, 8, 10, 11, 12, 14, 15, 19, 23, 27], "discret": [0, 4, 5, 10, 11, 12, 13, 15, 20, 23, 26, 28], "theta": [0, 4, 8], "params_ml": [0, 1, 4], "sfs_mle": [0, 4], "n_run": [0, 1, 2, 4, 9, 10, 12, 13, 15, 22, 23], "result": [0, 1, 2, 4, 5, 6, 15, 19, 23, 27, 30], "do_bootstrap": [0, 2, 4, 9, 10, 13, 15, 18, 22, 23, 26], "n_bootstrap": [0, 2, 4, 9, 10, 13, 22], "parallel": [0, 1, 2, 4, 9, 10, 17, 22, 25], "fixed_param": [0, 1, 2, 4, 5, 9, 10, 11, 15, 22, 23], "scale": [0, 1, 2, 4, 5, 9, 10, 15, 22, 23], "bound": [0, 1, 2, 4, 5, 9, 10, 11, 12, 13, 15, 20, 22, 23, 28], "optim": [0, 1, 2, 4, 5, 9, 10, 11, 12, 13, 15, 17, 19, 20, 22, 23, 25, 28, 30], "x0": [0, 2, 4, 5, 9, 10, 22], "bootstrap_result": [0, 4], "l2_residu": [0, 4], "rng": [0, 1, 4], "execution_tim": [0, 4], "lock": [0, 4], "get_fixed_param_nam": [0, 4], "check_fixed_params_exist": [0, 4], "raise_if_lock": [0, 4], "run_if_requir": [0, 4], "run_if_required_wrapp": [0, 4], "run": [0, 1, 2, 4, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 22, 23, 25, 26, 28], "get_count": [0, 4], "evaluate_likelihood": [0, 1, 4], "assign_result": [0, 4], "report_result": [0, 4], "update_properti": [0, 4], "add_alpha_to_bootstrap": [0, 4], "resample_sf": [0, 4], "run_bootstrap_sampl": [0, 4], "get_scales_linear": [0, 4], "get_bounds_linear": [0, 4], "model_sf": [0, 4], "adjust_polar": [0, 4], "add_demographi": [0, 4], "plot_continu": [0, 4], "plot_bucket_s": [0, 4], "plot_interval_dens": [0, 4], "plot_sfs_comparison": [0, 4, 13, 15, 20, 23, 28], "plot_observed_sf": [0, 4], "plot_al": [0, 4], "get_errors_discretized_df": [0, 4], "plot_inferred_paramet": [0, 4, 10, 12, 13, 15, 23], "plot_inferred_parameters_boxplot": [0, 4], "plot_likelihood": [0, 1, 4, 15, 23], "lrt": [0, 4, 15, 23, 30], "compare_nest": [0, 4], "compare_nested_model": [0, 4], "plot_nested_model": [0, 4, 13, 15, 23], "plot_discret": [0, 4, 10, 11, 13, 15, 18, 20, 23, 26, 28], "get_alpha": [0, 4], "alpha": [0, 4, 12, 15, 23], "get_bootstrap_param": [0, 4], "get_bootstrap_param_nam": [0, 4], "get_optimized_param_nam": [0, 4], "get_n_optim": [0, 4], "create_config": [0, 4, 9, 22], "from_config": [0, 4, 9, 22], "from_config_fil": [0, 4], "get_summari": [0, 4, 15, 20, 23, 28], "get_x0": [0, 1, 4], "param_nam": [0, 1, 4, 5, 10], "to_json": [0, 2, 4], "from_fil": [0, 2, 4, 7, 9, 15, 20, 21, 22, 23, 28, 29], "from_json": [0, 2, 4, 9, 22], "get_cis_params_ml": [0, 4], "get_discret": [0, 4], "to_fil": [0, 2, 4, 7, 9, 15, 20, 21, 22, 23, 28, 29], "jointinfer": [0, 2, 4, 6, 10, 11, 15, 17, 23, 25], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 19, 21, 22, 23, 27, 29, 30], "params_mle_raw": [0, 4], "shared_param": [0, 2, 4, 9, 10, 11, 15, 22, 23], "x0_cov": [0, 4], "marginal_infer": [0, 4, 15, 23], "joint_infer": [0, 2, 4, 10, 23], "check_shared_param": [0, 4, 10], "check_no_shared_params_fix": [0, 4], "get_shared_param_nam": [0, 4], "add_covariates_as_shar": [0, 4, 10], "determine_unshared_covari": [0, 4], "run_margin": [0, 4], "marginals_without_al": [0, 4], "run_joint": [0, 4], "joint_inference_makes_sens": [0, 4, 10], "run_joint_without_covari": [0, 4], "perform_lrt_covari": [0, 4, 15, 23], "add_covari": [0, 4], "bootstrap_if_requir": [0, 4], "run_joint_bootstrap_sampl": [0, 4], "perform_lrt_shar": [0, 4, 15, 23], "get_infer": [0, 4], "get_l2_residu": [0, 4], "get_errors_params_ml": [0, 4], "get_stats_discret": [0, 4], "compute_histogram": [0, 4], "sharedparam": [0, 2, 4, 10, 11, 15, 23], "param": [0, 1, 2, 4, 5, 9, 10, 11, 15, 22, 23], "valu": [0, 1, 2, 4, 5, 6, 9, 10, 14, 15, 17, 22, 23, 25], "callback": [0, 4, 6, 15, 23], "bounds_scal": [0, 4], "appli": [0, 1, 3, 4, 6, 30], "apply_default": [0, 4], "class": [0, 1, 3, 4, 5, 6, 9, 19, 20, 21, 22, 23, 25, 27, 28, 29], "config": [0, 1, 2, 4, 9, 22], "updat": [0, 2, 4, 6], "parse_polydfe_init_fil": [0, 2], "create_polydfe_init_fil": [0, 2], "parse_polydfe_sfs_config": [0, 2], "create_polydfe_sfs_config": [0, 2], "to_dict": [0, 2, 7], "to_yaml": [0, 2], "from_dict": [0, 2, 7], "from_yaml": [0, 2], "get_polydfe_model": [0, 2], "submodel": [0, 5], "get_pdf": [0, 5], "get_cdf": [0, 5], "gammaexpparametr": [0, 2, 4, 5, 9, 15, 18, 20, 22, 23, 26, 28], "displacedgammaparametr": [0, 5, 18, 26], "gammadiscreteparametr": [0, 5, 18, 26], "discreteparametr": [0, 5, 18, 26], "interv": [0, 2, 4, 5, 10, 12, 13, 15, 18, 23, 26], "interval_s": [0, 5], "k": [0, 1, 5, 7], "discretefractionalparametr": [0, 5, 10], "to_nomin": [0, 5], "to_fract": [0, 5], "spectrum": [0, 2, 4, 6, 7, 10, 13, 15, 18, 20, 21, 23, 26, 28, 29, 30], "n_site": [0, 1, 7, 8], "n_div": [0, 7, 8], "has_div": [0, 7, 8], "n_monomorph": [0, 7, 8], "polymorph": [0, 4, 6, 7, 8, 30], "n_polymorph": [0, 7, 8], "to_list": [0, 7, 8], "to_numpi": [0, 7, 8], "is_fold": [0, 7, 8, 21, 29], "normal": [0, 5, 7, 8, 10, 12, 13, 15], "copi": [0, 1, 7, 8, 14], "from_polymorph": [0, 8], "from_list": [0, 7, 8], "from_polydf": [0, 8], "plot": [0, 1, 4, 6, 7, 8, 10, 15, 18, 19, 20, 21, 23, 26, 27, 28, 29], "standard_kingman": [0, 8, 21, 29], "to_spectra": [0, 7], "to_datafram": [0, 7], "select": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 19, 20, 22, 23, 28, 29, 30], "to_multi_index": [0, 7], "to_single_index": [0, 7], "get_empti": [0, 7], "merge_group": [0, 7, 10, 11, 12, 15, 21, 23, 29], "has_dot": [0, 7], "replace_dot": [0, 7], "all": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 29], "combin": [0, 7, 21, 29], "from_datafram": [0, 1, 7], "from_spectra": [0, 7, 21, 29], "from_spectrum": [0, 7], "drop_empti": [0, 7], "drop_zero_entri": [0, 7], "drop_spars": [0, 7], "renam": [0, 7], "print": [0, 7], "sort_typ": [0, 7], "parser": [0, 1, 3, 6, 10, 11, 12, 14, 15, 17, 19, 21, 23, 25, 27, 29, 30], "n_valid": [0, 6], "get_typ": [0, 6], "snpstratif": [0, 6], "basecontextstratif": [0, 6], "n_flank": [0, 6], "contig": [0, 1, 3, 6], "basetransitionstratif": [0, 6, 10], "transitiontransversionstratif": [0, 6], "ancestralbasestratif": [0, 1, 6, 11, 12, 15, 19, 23, 27], "degeneracystratif": [0, 1, 6, 10, 11, 12, 14, 15, 19, 23, 27], "get_degeneraci": [0, 6], "synonymystratif": [0, 1, 6], "vepstratif": [0, 6], "info_tag": [0, 6], "snpeffstratif": [0, 6], "genomepositiondependentstratif": [0, 6], "contigstratif": [0, 6], "chunkedstratif": [0, 6], "n_chunk": [0, 6], "chunk_siz": [0, 1, 6], "counter": [0, 6], "targetsitecount": [0, 6], "logger": [0, 1, 3, 6, 17, 23, 25, 26], "n_target_sit": [0, 6], "n_sampl": [0, 4, 6, 15, 20, 23], "count": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 14, 15, 19, 20, 21, 23, 28, 29], "target_site_count": [0, 6], "include_sampl": [0, 3, 6], "exclude_sampl": [0, 3, 6], "skip_non_polar": [0, 6], "n_skip": [0, 1, 6], "handler": [0, 1, 3], "n_annot": [0, 1], "annotate_sit": [0, 1], "count_target_sit": [0, 1, 6], "degeneracyannot": [0, 1, 6, 14, 19, 27], "cd": [0, 1, 3, 14], "cd_next": [0, 1], "cd_prev": [0, 1], "mismatch": [0, 1, 19], "error": [0, 1, 4, 10, 17, 19, 25, 27], "synonymyannot": [0, 1, 6], "vep_mismatch": [0, 1], "snpeff_mismatch": [0, 1], "n_vep_comparison": [0, 1], "n_snpeff_comparison": [0, 1], "mutat": [0, 1, 2, 4, 5, 6, 7, 8, 10, 15, 19, 21, 23, 27, 29], "is_synonym": [0, 1], "ancestralalleleannot": [0, 1], "maximumparsimonyancestralannot": [0, 1, 14, 19, 27], "sampl": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 19, 22, 23], "substitutionmodel": [0, 1], "pool_branch_r": [0, 1], "cach": [0, 1, 3, 4, 6, 14, 19], "get_bound": [0, 1], "validate_bound": [0, 1], "get_prob": [0, 1], "jcsubstitutionmodel": [0, 1], "k2substitutionmodel": [0, 1], "siteconfig": [0, 1], "n_major": [0, 1], "major_bas": [0, 1], "minor_bas": [0, 1], "outgroup_bas": [0, 1], "multipl": [0, 1, 7, 9, 21, 22, 29], "p_ancestr": [0, 1], "p_minor": [0, 1], "p_major": [0, 1], "siteinfo": [0, 1], "p_major_ancestr": [0, 1], "major_ancestr": [0, 1], "p_bases_first_nod": [0, 1], "p_first_node_ancestr": [0, 1], "first_node_ancestr": [0, 1], "ancestral_bas": [0, 1], "rate_param": [0, 1], "plot_tre": [0, 1], "basetyp": [0, 1], "minor": [0, 1], "major": [0, 1, 3, 15, 23], "polarizationprior": [0, 1], "allow_diverg": [0, 1], "probabl": [0, 1, 5], "get_prior": [0, 1], "plot_polar": [0, 1], "kingmanpolarizationprior": [0, 1], "adaptivepolarizationprior": [0, 1], "outgroupancestralalleleannot": [0, 1], "ingroup": [0, 1, 3, 19], "exclud": [0, 1, 3, 6], "outgroup": [0, 1, 3, 19, 27], "n_ingroup": [0, 1, 19, 27], "n_outgroup": [0, 1], "get_base_str": [0, 1], "get_base_index": [0, 1], "maximumlikelihoodancestralannot": [0, 1, 19, 27], "max_sit": [0, 1, 3, 6], "confidence_threshold": [0, 1], "prior": [0, 1], "p_bin": [0, 1], "from_est_sf": [0, 1], "to_est_sf": [0, 1], "from_data": [0, 1], "p_polar": [0, 1], "get_p_tre": [0, 1], "get_p_config": [0, 1], "get_site_info": [0, 1], "output": [0, 1, 3, 19, 27], "n_filter": [0, 3], "filter_sit": [0, 3], "maskedfiltr": [0, 3], "use_pars": [0, 3], "snpfiltrat": [0, 3, 6], "snvfiltrat": [0, 3], "polyallelicfiltr": [0, 1, 3, 6, 10, 11, 12, 19], "allfiltr": [0, 3], "nofiltr": [0, 3], "codingsequencefiltr": [0, 3, 6, 14, 19, 27], "n_process": [0, 3], "deviantoutgroupfiltr": [0, 1, 3, 19, 27], "strict_mod": [0, 3], "retain_monomorph": [0, 3], "ingroup_mask": [0, 3], "outgroup_mask": [0, 3], "existingoutgroupfiltr": [0, 1, 3], "biasedgcconversionfiltr": [0, 3, 19, 27], "filter": [0, 1, 3, 6, 10, 11, 12, 14, 19, 27], "is_filt": [0, 3], "index": [0, 1, 4, 6, 7, 14, 21, 29], "an": [1, 2, 3, 4, 5, 6, 9, 15, 16, 17, 22, 23, 25], "them": [1, 3, 10, 21, 29], "creat": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 18, 20, 21, 22, 23, 26, 28, 29], "new": [1, 3, 7, 15, 16, 23], "instanc": [1, 3, 4, 6, 25], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "option": [1, 2, 3, 4, 6, 7, 8, 9, 15, 22, 23, 26, 29], "int": [1, 2, 3, 4, 6, 7, 8, 10], "number": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 27, 28, 29], "variant": [1, 3, 6], "cyvcf2": [1, 3, 6], "fastdf": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "io_handl": [1, 3, 6], "dummyvari": [1, 3, 6], "singl": [1, 3, 4, 5, 7, 15, 20, 21, 23, 28, 29], "return": [1, 2, 3, 4, 5, 6, 7, 8, 14], "static": [1, 2, 4, 5, 7, 8], "str": [1, 2, 3, 4, 5, 6, 7, 8], "remove_overlap": 1, "bool": [1, 2, 3, 4, 6, 7, 8], "fals": [1, 2, 3, 4, 6, 7, 8, 15], "list": [1, 2, 3, 4, 5, 6, 7, 8, 10, 19, 23, 26, 27, 29], "none": [1, 2, 3, 4, 6, 7, 8], "target": [1, 2, 6, 7, 8], "gff": [1, 3, 6, 14, 19, 27], "path": [1, 2, 4, 6, 23, 28], "possibli": [1, 3, 6, 7], "gzip": [1, 3, 6], "url": [1, 3, 6, 19, 27], "whether": [1, 2, 3, 4, 6, 7, 8, 9, 15, 22, 23], "remov": [1, 3, 4, 7], "overlap": 1, "dict": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 15], "per": [1, 6], "chromosom": [1, 3, 6, 14], "we": [1, 2, 3, 4, 5, 6, 7, 9, 15, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30], "look": [1, 4, 6, 9, 15, 19, 22, 23, 27], "each": [1, 4, 7, 15, 21, 23, 29], "codon": 1, "code": [1, 3, 6], "thi": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 30], "also": [1, 4, 5, 6, 9, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30], "mono": [1, 3, 6], "add": [1, 4, 6, 8], "info": [1, 3, 6, 17, 19, 25, 27], "field": [1, 3, 6, 19, 27, 30], "degeneracy_info": 1, "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30], "hold": [1, 5, 7, 8, 15, 20, 21, 23, 28, 29], "0": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 19, 20, 21, 22, 23, 27], "2": [1, 7, 9, 10, 12, 13, 14, 15, 19, 21, 22, 23, 29], "4": [1, 5, 6, 10, 12, 15, 19, 23, 26, 27], "extra": 1, "inform": [1, 4, 6, 15, 19, 21, 23, 24, 27, 29], "about": [1, 4, 6, 10, 11, 12, 13, 15, 20, 23], "respect": [1, 5, 15, 23], "To": [1, 4, 6, 15, 16, 18, 19, 21, 23, 24, 25, 26, 27, 29, 30], "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "For": [1, 3, 5, 9, 15, 19, 21, 22, 23, 25, 27, 29], "requir": [1, 2, 3, 4, 5, 6, 15, 17, 19, 20, 23, 25, 27, 28], "fasta": [1, 6, 14, 19, 27], "pass": [1, 3, 4, 5, 6, 7, 8, 15, 19, 20, 23, 25, 27, 28], "seri": [1, 3, 7], "current": [1, 3, 6, 19, 27], "sequenc": [1, 3, 6], "closest": [1, 3], "downstream": [1, 3], "follow": [1, 5, 16, 17, 24, 25], "preced": 1, "seqrecord": [1, 6], "could": [1, 6, 15, 23], "correctli": [1, 4, 6, 10], "were": [1, 4, 6, 7, 10, 19], "skip": [1, 6], "becaus": [1, 6, 15, 23, 24], "thei": [1, 5, 6, 7], "region": [1, 30], "determin": [1, 4, 5, 6, 19, 27], "v": [1, 3, 4], "synonymi": [1, 6, 19, 27, 30], "synonym": [1, 4, 6, 15, 19, 23, 27, 30], "non": [1, 4, 5, 6, 7, 8, 15, 19, 23, 27, 30], "statu": 1, "synonymous_info": 1, "1": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 23, 29, 30], "wa": [1, 4, 7, 8], "test": [1, 3, 4, 15, 23, 30], "against": [1, 4], "vep": [1, 6], "snpeff": [1, 6], "provid": [1, 4, 5, 6, 10, 15, 19, 21, 23, 25, 27, 29, 30], "same": [1, 4, 5, 6, 7, 30], "almost": 1, "case": [1, 5, 6, 9, 22], "Not": 1, "recommend": [1, 2, 4, 5, 6, 16, 19, 27], "need": [1, 3, 4, 6, 7, 9, 10, 15, 18, 20, 22, 23, 26, 28, 30], "consid": [1, 2, 3, 4, 6, 10, 12, 13, 15, 19, 23, 27], "instead": [1, 14], "did": [1, 3, 10, 12, 13, 15], "match": [1, 6, 7, 10], "math": 1, "concord": 1, "alt": [1, 3], "po": 1, "given": [1, 2, 3, 4, 5, 6, 7], "posit": [1, 3, 5, 6], "altern": [1, 19, 20, 25, 27, 28], "codon1": 1, "codon2": 1, "check": [1, 3, 4, 7, 8, 10, 15, 23], "two": [1, 4, 5, 7, 15, 19, 21, 23, 27, 29], "ar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29], "first": [1, 2, 4, 7, 15, 20, 23, 25, 28], "second": [1, 4], "true": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29], "otherwis": [1, 3, 4, 5, 7, 8], "abc": [1, 3, 6], "maximum": [1, 3, 4, 5, 6, 15, 18, 20, 23, 26, 28, 30], "parsimoni": 1, "note": [1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 19, 20, 22, 23, 27, 28], "reliabl": [1, 30], "wai": [1, 16, 18, 20, 26, 28], "so": [1, 4, 5, 6, 7, 8], "togeth": [1, 3], "misidentif": [1, 4, 15, 23], "ep": [1, 4, 9, 10, 11, 12, 13, 15, 20, 22, 23], "altogeth": 1, "you": [1, 4, 6, 9, 16, 17, 18, 22, 25, 26], "can": [1, 3, 4, 5, 6, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "out": [1, 2, 3, 4, 6, 10, 11, 12, 13, 14, 15, 19, 20, 21, 23, 27, 28, 29], "where": [1, 3, 4, 5, 15, 20, 23, 28], "among": [1, 4, 9, 15, 22, 23, 30], "doe": [1, 2, 4, 5, 6, 10, 15, 23], "coincid": 1, "ha": [1, 3, 4, 5, 9, 15, 20, 22, 23, 28], "advantag": [1, 5], "data": [1, 2, 4, 7, 8, 15, 18, 21, 23, 26, 29, 30], "If": [1, 4, 6, 17, 25], "avail": [1, 4, 6, 9, 19, 21, 22, 23, 24, 27, 28, 29], "mleancestralalleleannot": 1, "when": [1, 3, 4, 6, 9, 15, 19, 21, 22, 23, 27, 29], "tupl": [1, 2, 4, 5, 7], "float": [1, 2, 4, 5, 8], "substitut": [1, 3, 4, 15, 23, 30], "pool": 1, "branch": 1, "rate": [1, 2, 4, 10, 15, 19, 23], "By": [1, 3, 4, 5, 6, 15, 17, 19, 20, 23, 25, 27, 28], "default": [1, 3, 4, 5, 6, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28], "its": [1, 4, 6, 30], "own": [1, 18, 26], "mle": [1, 4, 10, 11, 12, 13, 15, 20, 23, 28, 30], "small": 1, "n_branch": 1, "numpi": [1, 4, 5, 7, 8, 10, 15], "random": [1, 2, 3, 4, 6, 9, 17, 22, 25, 30], "_gener": 1, "gener": [1, 2, 3, 4, 5, 6, 9, 22], "get": [1, 2, 4, 5, 6, 7, 8, 20, 21, 28, 29], "initi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 17, 22, 23, 24, 25], "make": [1, 4, 5, 6, 10, 15, 20, 23, 28, 30], "sure": [1, 5, 6, 15, 20, 23, 28], "lower": [1, 2, 4, 5, 10, 11, 12, 13, 15, 20], "upper": [1, 2, 4, 10, 11, 12, 13, 15, 20], "larger": [1, 4, 5, 6, 18, 26], "than": [1, 3, 4, 5, 6, 7, 15, 23], "valid": [1, 4, 6, 10, 11, 12, 14, 19], "rais": [1, 4, 6, 10], "valueerror": [1, 4, 10], "invalid": 1, "b1": 1, "b2": 1, "nucleotid": 1, "state": [1, 6, 19, 21, 27, 29], "1e": [1, 2, 4], "05": [1, 2, 4, 5, 10, 11, 12, 15, 23], "10": [1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 28, 29, 30], "juke": 1, "cantor": 1, "denot": [1, 5, 15, 23], "kimura": 1, "transit": [1, 6, 19, 27], "transvers": [1, 6], "ratio": [1, 4, 6, 15, 23, 30], "ndarrai": [1, 3, 4, 5, 6, 7, 8], "arrai": [1, 4, 5, 7, 8, 10, 15], "dtype": 1, "float64": 1, "nan": 1, "A": [1, 3, 5, 6, 9, 10, 11, 12, 14, 15, 19, 22, 23], "vector": [1, 26], "oper": [1, 5], "rather": [1, 3, 5, 18, 26], "individu": [1, 6, 19], "more": [1, 3, 4, 6, 9, 15, 17, 19, 22, 23, 24, 25, 27, 30], "effici": [1, 5, 30], "mani": [1, 4, 6], "differ": [1, 3, 4, 5, 6, 9, 15, 17, 18, 22, 23, 25, 26, 30], "indic": [1, 4, 5, 15, 23], "factori": 1, "being": [1, 6, 25], "either": [1, 5, 6], "intern": [1, 4], "node": 1, "mostli": 1, "like": [1, 9, 17, 19, 22, 25], "depend": [1, 6, 7, 16, 23, 28], "ax": [1, 4, 7, 8, 10, 12, 13, 15, 19, 20, 21], "matplotlib": [1, 4, 7, 8, 12, 13, 15, 21], "_ax": [1, 4, 7, 8], "show": [1, 4, 7, 8, 15, 18, 23, 26], "tree": 1, "self": [1, 4, 7, 10], "enum": 1, "incorpor": [1, 19, 27], "across": [1, 4, 9, 22], "have": [1, 4, 5, 6, 7, 9, 10, 18, 21, 22, 26, 29, 30], "particular": 1, "good": [1, 2, 4, 5, 6, 10, 15, 20, 23, 28], "know": [1, 6], "estim": [1, 4, 5, 6, 8, 10, 11, 12, 13, 15, 18, 19, 20, 23, 26, 27, 28, 30], "allow": [1, 5, 6], "diverg": [1, 4, 7, 8], "contain": [1, 6, 7, 15, 23], "subsampl": [1, 17, 19, 25], "specifi": [1, 2, 3, 4, 6, 7, 8, 9, 10, 15, 19, 20, 21, 22, 23, 27, 28, 29], "taken": 1, "present": [1, 3, 6, 9, 22, 23], "hack": 1, "u": [1, 15, 23], "polar": [1, 4, 6, 19, 27], "abstract": [1, 5, 6], "panda": [1, 4, 7, 14], "core": [1, 4, 7, 9, 22], "frame": [1, 4, 7], "datafram": [1, 4, 7, 14], "titl": [1, 4, 7, 8, 10, 12], "liter": [1, 2, 4, 5, 6], "lin": [1, 2, 4, 5, 9, 15, 22, 23], "ylabel": [1, 4, 10], "p": [1, 4, 6, 10, 11, 12, 15, 18, 19, 23, 26, 27, 28, 29], "scatter": [1, 4], "y": [1, 4], "save": [1, 2, 4, 7, 8, 15, 20, 21, 23, 28, 29], "axi": [1, 4], "label": [1, 4, 10, 12, 18, 26], "standard": [1, 4, 8, 17, 25, 30], "kingman": [1, 8, 30], "coalesc": [1, 4], "adapt": [1, 30], "est": [1, 19, 27], "paper": 1, "sens": [1, 4, 10], "most": [1, 3, 5, 6, 9, 10, 19, 22], "found": [1, 3, 4, 6, 15, 23], "accur": [1, 4, 30], "lot": [1, 15, 23], "order": [1, 2, 3, 4, 6, 15, 18, 23, 26], "properli": [1, 4], "smooth": [1, 30], "enough": 1, "call": [1, 3, 4, 9, 10, 16, 22, 25], "increas": [1, 2, 3, 4, 10, 12, 13, 15, 23], "decreas": [1, 10, 12, 13, 15], "perform": [1, 4, 9, 15, 19, 20, 22, 23, 27, 28], "One": 1, "should": [1, 3, 4, 5, 6, 9, 22], "suffici": [1, 15, 23], "onli": [1, 3, 6, 8, 9, 15, 18, 19, 22, 23, 26, 27], "one": [1, 2, 3, 4, 5, 9, 15, 19, 20, 22, 23, 27, 28], "name": [1, 2, 3, 4, 5, 6, 7, 15, 16, 23], "appear": [1, 4, 15, 18, 23, 26, 28], "minimum": 1, "must": [1, 24], "except": [1, 4], "string": [1, 2, 4, 7, 21, 29], "": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 27], "classmethod": [1, 4], "base_str": 1, "inf": [1, 3, 4, 6, 9, 10, 11, 13, 15, 20, 22, 23, 28], "8": [1, 4, 7, 8, 10, 15, 19, 27], "method": [1, 4, 21, 25, 29], "veri": [1, 9, 18, 19, 22, 26, 27], "similar": [1, 4, 5, 18, 19, 26, 27], "http": [1, 3, 6, 14, 19, 27], "doi": [1, 30], "org": [1, 3, 6, 14], "1534": [1, 30], "genet": [1, 30], "118": 1, "301120": 1, "aa": [1, 3, 6, 19, 27], "ad": [1, 4, 6, 10, 15, 19, 21, 23, 29], "independ": [1, 2, 4, 9, 22], "see": [1, 3, 4, 6, 9, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29], "choos": [1, 17, 25], "eventu": 1, "everi": 1, "calcul": [1, 4, 8], "simpl": [1, 4], "hoc": [1, 19], "disagre": 1, "bi": [1, 3, 6], "correspond": [1, 2, 5, 19, 21, 29], "possibl": [1, 5, 6, 30], "larg": [1, 10], "after": [1, 4, 10, 11, 12, 13, 15, 20, 24], "deal": 1, "fewer": [1, 5, 6, 7], "len": [1, 10], "below": [1, 25], "might": [1, 4, 5, 9, 10, 11, 12, 13, 15, 17, 19, 20, 22, 23, 25, 27], "necessari": 1, "known": 1, "limit": [1, 30], "common": 1, "handl": [1, 6, 21, 29], "It": [1, 5, 6, 21, 29], "oppos": [1, 6], "former": [1, 19, 27], "approach": [1, 25, 30], "cannot": 1, "assign": [1, 4], "In": [1, 4, 6, 10, 15, 19, 20, 23, 25, 27, 28, 30], "some": [1, 3, 5, 7, 15, 18, 19, 23, 26, 27], "actual": [1, 6], "deriv": [1, 7, 15, 21, 23, 29], "due": [1, 4, 5], "right": [1, 4], "howev": [1, 4, 5, 6, 16, 19, 21, 23, 27, 28, 29], "still": 1, "least": [1, 3], "thu": [1, 6, 9, 10, 12, 13, 15, 22], "That": [1, 5], "said": 1, "assum": [1, 3, 4, 6, 30], "topologi": 1, "fine": [1, 5], "chosen": [1, 2, 4], "distant": 1, "todo": 1, "notic": [1, 21, 29], "onc": [1, 21, 24, 29], "been": [1, 5, 15, 20, 23, 28, 30], "thoroughli": [1, 30], "experiment": 1, "caution": 1, "import": [1, 3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 30], "whose": [1, 7], "last": [1, 7, 10, 15, 20, 23, 28], "lead": 1, "comput": [1, 4, 5, 9, 17, 22, 25], "cost": 1, "3": [1, 10, 12, 13, 15, 19, 21, 23, 26, 29], "includ": [1, 3, 4, 5, 6, 8, 10, 11, 12, 14, 15, 19, 21, 23, 27, 29, 30], "much": 1, "close": [1, 4, 15, 20, 23], "relat": 1, "other": [1, 4, 5, 7, 9, 15, 16, 18, 22, 23, 26], "necessarili": 1, "improv": [1, 4, 15, 23, 30], "accuraci": [1, 4], "varianc": 1, "sensibl": 1, "reason": [1, 5, 6, 15, 20, 23, 28], "few": [1, 6], "thousand": [1, 6], "perhap": 1, "20": [1, 10, 15], "total": [1, 4, 5, 6, 7, 8, 10, 11, 12, 14, 19], "repres": [1, 2], "even": [1, 4, 9, 22], "arbitrarili": 1, "equal": [1, 6, 7], "avoid": [1, 3, 6, 15, 16, 19, 23, 27], "odd": 1, "subset": [1, 4, 6, 15, 19, 23, 27], "speed": [1, 3, 6, 30], "up": [1, 5, 7, 8, 15, 23], "consider": [1, 6], "slow": 1, "calibr": 1, "confid": [1, 4, 5, 10, 12, 13, 15, 18, 23, 26], "threshold": 1, "5": [1, 5, 10, 15, 20], "ani": [1, 3, 4, 6, 10, 15, 23], "ml": [1, 4], "start": [1, 4, 10, 11, 12, 14, 19, 20, 28], "pd": [1, 4], "np": [1, 4, 10, 15], "bin": [1, 4, 5, 21, 29], "best": [1, 2, 4, 30], "optimizeresult": [1, 4], "100000": [1, 5, 10, 11, 12, 15], "input": [1, 4], "format": 1, "chunk": [1, 6], "size": [1, 2, 4, 5, 6, 7, 8, 10, 15, 19, 20, 21, 26, 29], "read": 1, "write": 1, "iter": [1, 3, 8, 10, 11, 12, 13, 15, 20], "pass_indic": 1, "directli": [1, 9, 19, 22, 25, 27], "represent": [1, 2, 5, 7], "accord": 1, "c": [1, 3, 5, 10, 11, 12, 15, 19, 23, 26, 27, 28], "g": [1, 3, 6, 10, 11, 12, 15, 19, 23], "t": [1, 3, 4, 6, 10, 11, 12, 14, 15, 19, 23], "defin": [1, 2, 4, 6, 19, 27], "outer": 1, "inner": 1, "column": [1, 4, 7, 12], "length": [1, 6, 14, 26], "alreadi": [1, 9, 21, 22, 23, 29], "purpos": [1, 3], "suppos": 1, "manual": [1, 6, 21, 29], "e": [1, 3, 4, 5, 6, 7, 9, 15, 22, 23], "automat": [1, 2, 15, 23], "properti": [1, 4, 6, 7, 8, 9, 19, 21, 22, 27, 29], "ellipsi": 1, "internal_nod": 1, "union": [1, 2, 3, 4, 7], "observ": [1, 4, 5, 15, 20, 23, 28, 30], "k2": 1, "jc": 1, "base_typ": 1, "free": 1, "minu": [1, 4], "dictionari": [1, 2, 3, 4, 6, 7], "evalu": [1, 4, 10, 11, 12, 13, 15, 20], "function": [1, 2, 4, 5, 10, 11, 12, 13, 15, 20, 23, 24, 25, 30], "convert": [1, 5, 7, 8], "integ": 1, "lnl": [1, 4], "info_ancestr": [1, 3, 6], "alias": [1, 3, 6, 14], "multihandl": [1, 3, 6], "fd": [1, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26, 27], "ann": [1, 6, 19, 27], "ftp": [1, 3, 6, 14], "1000genom": [1, 3, 14], "ebi": [1, 3, 14], "ac": [1, 3, 6, 14], "uk": [1, 3, 6, 14], "vol1": [1, 3, 14], "data_collect": [1, 3, 14], "1000_genomes_project": [1, 3, 14], "releas": [1, 3, 6, 14], "20181203_biallelic_snv": [1, 3, 14], "chr21": [1, 3, 14], "shapeit2_integrated_v1a": [1, 3, 14], "grch38": [1, 3, 6, 14], "20181129": [1, 3, 14], "phase": [1, 3, 14], "gz": [1, 3, 6, 10, 11, 12, 14, 15, 19, 23, 27], "ensembl": [1, 3, 6, 14], "pub": [1, 3, 6, 14], "109": [1, 3, 4, 6, 9, 13, 14, 15, 18, 20, 22, 23, 26, 28], "homo_sapien": [1, 3, 6, 14], "dna": [1, 6, 14], "21": [1, 3, 10, 14], "fa": [1, 6, 14, 15, 23], "gff3": [1, 3, 6, 14], "sapien": [1, 3], "support": [1, 5, 6, 15, 23, 30], "tag": [1, 6, 19, 27], "download": [1, 3, 6], "chr1": [1, 3, 6], "polydfe_spectra_config": 2, "polydfe_init_fil": 2, "polydfe_init_file_id": 2, "intervals_del": [2, 4, 10], "100000000": [2, 4], "1000": [2, 4, 5, 10, 19, 27], "intervals_ben": [2, 4, 10], "10000": [2, 4, 9, 19, 22, 27], "integration_mod": [2, 4, 10], "midpoint": [2, 4, 10, 11, 12, 13, 15, 20], "quad": [2, 4], "linear": [2, 4, 5, 9, 10, 11, 12, 13, 15, 20, 22, 23, 30], "symlog": [2, 4, 9, 22], "loss_typ": [2, 4, 9, 10, 22], "l2": [2, 4], "opts_ml": [2, 4, 9, 10, 22], "100": [2, 4, 5, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23], "kwarg": [2, 4, 5, 10], "polydf": [2, 5, 8, 30], "init": 2, "id": 2, "neutral": [2, 4, 6, 9, 10, 11, 12, 13, 14, 15, 19, 20, 22, 23, 28, 30], "monomorph": [2, 3, 4, 6, 7, 8, 10, 15, 20, 23, 28], "integr": [2, 4, 10, 11, 12, 13, 15, 20, 30], "deleteri": [2, 4, 5, 15, 23], "space": [2, 4, 5], "benefici": [2, 4, 5, 15, 19, 21, 23, 27, 29, 30], "mode": [2, 4, 5], "version": [2, 4], "form": [2, 4, 15, 20, 23, 28], "loss": [2, 4], "produc": [2, 4, 5, 15, 23], "share": [2, 4, 5, 9, 10, 11, 15, 22, 23, 30], "do": [2, 3, 4, 6, 9, 15, 16, 19, 22, 23, 27], "addit": [2, 4, 6], "keyword": [2, 4, 7, 8], "argument": [2, 3, 4, 5, 6, 7, 8, 15, 23, 25], "ignor": [2, 4, 6, 7, 8], "ones": [2, 5], "held": [2, 4, 9, 15, 22, 23], "dure": [2, 10, 12, 13, 15, 17, 19, 23, 25, 27], "yaml": [2, 9, 22, 30], "load": [2, 4, 7, 14, 19, 23, 24, 26, 27, 28, 29], "certain": 3, "criteria": 3, "didn": [3, 6], "kept": 3, "mask": 3, "keep": 3, "snp": [3, 6], "entail": 3, "discard": 3, "morphic": [3, 6], "indel": 3, "mnp": 3, "poli": [3, 6], "don": [3, 6, 10], "explicitli": 3, "reli": [3, 19, 27], "find": [3, 9, 10, 15, 20, 22, 23, 28], "frequent": 3, "unnecessari": 3, "here": [3, 4, 8, 9, 19, 21, 22, 25, 27, 29], "within": [3, 10, 11, 12, 13, 16, 24, 30], "sort": [3, 6, 7], "ascend": [3, 6], "enclos": 3, "process": [3, 10, 11, 12, 14, 19, 27], "construct": 3, "retain": 3, "faster": [3, 30], "unaffect": 3, "bias": [3, 6], "gene": 3, "convers": 3, "citgb": 3, "alwai": 3, "pouyet": 3, "et": 3, "al": 3, "background": 3, "affect": [3, 15, 18, 23, 26, 30], "95": [3, 10, 12, 15, 23], "human": [3, 6], "genom": [3, 6, 10, 11, 12, 19, 27, 30], "bia": 3, "demograph": 3, "elif": 3, "7": [3, 10, 21, 29], "e36317": 3, "2018": 3, "f": [3, 10, 16, 19, 27], "abstractinfer": 4, "177130": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "997": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "441": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "228": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "156": [4, 9, 10, 13, 15, 18, 20, 22, 23, 26, 28], "117": [4, 9, 10, 13, 15, 18, 20, 22, 23, 26, 28, 30], "114": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "83": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "105": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "652": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "797939": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "1329": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "499": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "265": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "162": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "104": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "90": [4, 9, 11, 13, 15, 18, 20, 22, 23, 26, 28], "94": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "119": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "794": [4, 9, 13, 15, 18, 20, 22, 23, 26, 28], "connect": 4, "15": [4, 15, 19, 27], "attribut": 4, "stop": 4, "n_interv": 4, "popul": 4, "coeffici": [4, 5, 15, 23], "log10": 4, "dfeparametr": 4, "both": [4, 5, 6, 15, 23, 25], "mainli": 4, "intend": 4, "mai": [4, 5, 25], "control": 4, "numer": [4, 9, 10, 12, 13, 15, 22], "norm": 4, "execut": [4, 24], "time": [4, 9, 22, 30], "itself": [4, 15, 23, 25], "arg": 4, "yet": [4, 6], "func": 4, "decor": 4, "pbar": 4, "progress": [4, 15, 17, 23, 25], "bar": [4, 15, 17, 23, 25], "scipi": 4, "_optim": 4, "entri": [4, 7, 15, 20, 23, 28], "update_likelihood": 4, "mean": [4, 5, 15, 23], "resampl": 4, "poisson": [4, 30], "rerun": 4, "procedur": [4, 5], "take": [4, 5, 6, 17, 25], "adjust": [4, 10, 12, 13, 15, 23], "counts_sel": 4, "demographi": [4, 30], "counts_neut": 4, "perturb": 4, "rel": 4, "confidence_interv": 4, "ci_level": 4, "bootstrap_typ": 4, "percentil": 4, "bca": 4, "scale_dens": 4, "kwargs_legend": [4, 7, 8], "prop": [4, 7, 8], "continu": 4, "special": 4, "constant": [4, 5], "pdf": [4, 5], "logarithm": 4, "x": [4, 5, 12], "wrong": 4, "intuit": 4, "mass": [4, 5], "better": [4, 15, 23], "densiti": [4, 5], "disadvantag": [4, 5], "now": [4, 15, 16, 20, 23, 28], "chang": [4, 5, 9, 17, 22, 25, 30], "warp": 4, "level": [4, 7, 15, 17, 18, 23, 25, 26], "boundari": 4, "yield": [4, 19, 27], "shape": [4, 5, 7, 18, 26, 30], "plt": [4, 7, 8, 12, 13, 15, 21], "legend": [4, 7, 8], "bucket": 4, "appropri": [4, 19, 27], "interval_label": 4, "color": 4, "c0": [4, 10, 15, 23], "although": [4, 8, 19, 27], "sfs_type": [4, 13], "use_subplot": [4, 7], "show_monomorph": [4, 7, 8], "subplot": [4, 7, 13, 15, 21], "bunch": 4, "loc": [4, 14], "ll_simpl": 4, "ll_complex": 4, "df": 4, "complex": [4, 15, 23, 30], "degre": 4, "freedom": 4, "base_infer": 4, "proper": 4, "compar": [4, 15, 23], "variou": [4, 6, 17, 25], "matrix": 4, "remove_empti": 4, "transpos": 4, "cmap": 4, "empti": [4, 7], "row": [4, 12], "colormap": 4, "proport": [4, 15, 23, 30], "summari": [4, 15, 20, 23, 28, 30], "inferenceresult": 4, "unseri": [4, 15, 20, 23, 28], "include_diverg": [4, 10], "enabl": [4, 19, 27], "sever": [4, 15, 19, 23, 27], "pendula": [4, 9, 15, 18, 22, 23, 26], "pubescen": [4, 9, 15, 22, 23], "172528": [4, 9, 15, 22, 23], "3612": [4, 9, 15, 22, 23], "1359": [4, 9, 15, 22, 23], "790": [4, 9, 15, 22, 23], "584": [4, 9, 15, 22, 23], "427": [4, 9, 15, 22, 23], "325": [4, 9, 15, 22, 23], "234": [4, 9, 10, 15, 22, 23], "166": [4, 9, 15, 22, 23], "76": [4, 9, 15, 22, 23], "31": [4, 9, 10, 11, 12, 15, 22, 23], "791106": [4, 9, 15, 22, 23], "5326": [4, 9, 15, 22, 23], "1741": [4, 9, 15, 22, 23], "1005": [4, 9, 15, 22, 23], "756": [4, 9, 15, 22, 23], "546": [4, 9, 15, 22, 23], "416": [4, 9, 15, 22, 23], "294": [4, 9, 15, 22, 23], "177": [4, 9, 15, 22, 23], "41": [4, 9, 10, 11, 15, 22, 23], "origin": [4, 5, 21, 29], "befor": 4, "unpack": 4, "expand": 4, "margin": [4, 10, 11, 15, 23], "without": [4, 6], "devoid": 4, "low": 4, "signific": [4, 15, 23, 30], "access": [4, 15, 19, 21, 23, 27, 29], "previous": 4, "won": [4, 6], "statist": 4, "done": [4, 6, 15, 19, 23, 27], "product": [4, 6, 15, 23], "achiev": [4, 15, 19, 23, 27], "justifi": 4, "difficult": 4, "conserv": [4, 30], "report": 4, "what": [4, 15, 19, 23, 27], "realli": 4, "deseri": 4, "longer": 4, "thing": [4, 15, 23], "pleas": [4, 10, 19, 23, 27, 28], "refer": [4, 6, 15, 19, 21, 23, 27, 29], "residu": 4, "over": [4, 5, 7, 9, 15, 21, 22, 23, 29, 30], "jointli": [4, 6, 10, 15, 23], "util": [4, 19, 21, 27, 29], "abstract_infer": 4, "uniqu": 4, "s_d": [4, 5, 9, 10, 11, 12, 13, 15, 20, 22, 23], "callabl": [4, 5, 6], "0001": [4, 5, 10, 11, 12, 13, 15], "induc": 4, "relationship": [4, 15, 23, 25], "modifi": [4, 15, 23], "introduc": [4, 15, 23, 30], "scale_valu": 4, "detail": [4, 15, 23], "custom": [4, 6, 15, 19, 23, 27], "set": [5, 6, 7, 9, 10, 14, 15, 17, 18, 21, 22, 23, 25, 26, 29], "implement": [5, 18, 24, 25, 26, 30], "highli": [5, 10], "dele": 5, "full": [5, 6], "kind": 5, "accept": 5, "cumul": 5, "mixtur": 5, "gamma": 5, "exponenti": 5, "phi": 5, "b": [5, 9, 10, 11, 12, 13, 15, 18, 20, 22, 23, 26, 28], "p_b": [5, 9, 10, 11, 12, 13, 15, 20, 22, 23], "s_b": [5, 9, 10, 11, 12, 13, 15, 20, 22, 23], "f_": 5, "cdot": 5, "mathbf": 5, "_": [5, 7], "f_e": 5, "geq": 5, "m": 5, "often": [5, 19, 21, 25, 27, 29], "multi": [5, 7], "modal": 5, "neg": [5, 15, 23], "amount": 5, "accommod": 5, "01": [5, 10, 11, 12, 14, 15, 18, 19], "zero": [5, 7, 15, 23], "cdf": 5, "reflect": 5, "displac": 5, "hat": 5, "s_": 5, "max": [5, 10], "leq": 5, "less": [5, 19, 21, 25, 27, 29], "while": [5, 19, 27], "pure": [5, 15, 23], "sub": [5, 29], "s_max": 5, "s_mean": 5, "001": 5, "d": 5, "6": [5, 10, 12, 15, 23, 26], "constructor": 5, "s_1": 5, "s_2": 5, "dot": [5, 7], "s_k": 5, "sum_": 5, "s_i": 5, "c_i": 5, "b_i": 5, "width": [5, 26, 29], "impos": 5, "those": [5, 6], "well": [5, 6, 9, 15, 19, 22, 23, 27], "re": [5, 15, 23, 24], "sum": [5, 7], "infinit": 5, "s1": [5, 10], "s2": [5, 10], "sk": 5, "_1": 5, "_2": 5, "ith": 5, "left": [5, 9, 22], "_i": 5, "j": 5, "s_j": 5, "prefer": 5, "constraint": 5, "anoth": [5, 23], "gap": 5, "fraction": [5, 10], "s0": 5, "invert": 5, "back": 5, "nomin": 5, "extract": [6, 10, 12, 30], "stratifi": [6, 15, 19, 21, 23, 27, 29], "issu": 6, "warn": [6, 15, 23, 28], "fastahandl": 6, "context": 6, "flank": 6, "attempt": 6, "middl": 6, "abl": 6, "notypeexcept": 6, "subclass": [6, 18, 26], "ancestralannot": 6, "custom_callback": 6, "side": 6, "degener": [6, 19, 27], "facilit": [6, 9, 22, 30], "csq": 6, "roughli": 6, "window": 6, "seen": 6, "far": 6, "1000000": 6, "conjunct": 6, "between": [6, 15, 19, 23, 25, 30], "ideal": 6, "obtain": [6, 10, 11, 12, 13, 15, 17, 20, 21, 23, 25, 29, 30], "opportun": 6, "plenti": 6, "strength": [6, 15, 23], "randomli": 6, "cover": 6, "entir": 6, "extrapol": 6, "compat": [6, 30], "pre": 6, "dynam": 6, "fly": 6, "would": [6, 9, 21, 22, 29], "extrem": 6, "magnitud": 6, "correct": [6, 19, 27, 30], "retriev": [6, 19, 27], "offer": [6, 19, 21, 27, 29, 30], "ng": 6, "sanger": 6, "hgdp": 6, "hgdp_wg": 6, "20190516": 6, "map": 6, "aa_ensembl": 6, "down": 6, "draw": 6, "replac": [6, 7, 23], "genotyp": 6, "restrict": 6, "manipul": [7, 8, 21, 29], "kei": 7, "ndim": 7, "alia": 7, "__getitem__": 7, "regex": [7, 10], "notat": 7, "merg": [7, 21, 29], "alphabet": 7, "wise": 8, "watterson": 8, "rtype": 8, "specif": 8, "treat": 8, "separ": [8, 15, 23, 24], "reproduc": [9, 17, 22, 25], "consist": [9, 22, 30], "analys": [9, 22], "simplifi": [9, 22], "manag": [9, 22, 23, 28, 30], "hyperparamet": [9, 22], "typic": [9, 22], "resort": [9, 22], "usual": [9, 21, 22, 29], "untouch": [9, 22], "invok": [9, 22, 25], "guarante": [9, 22], "determinist": [9, 22], "behaviour": [9, 22], "just": [9, 22], "173705": [9, 22], "3294": [9, 22], "1115": [9, 22], "534": [9, 22], "326": [9, 22], "239": [9, 22], "225": [9, 22], "214": [9, 22], "231": [9, 22], "176": [9, 22], "73": [9, 22], "792884": [9, 22], "4762": [9, 22], "1397": [9, 22], "720": [9, 22], "423": [9, 22], "259": [9, 22], "247": [9, 22], "256": [9, 22], "209": [9, 22], "exist": [9, 22, 23, 30], "person": [9, 22], "readabl": [9, 22], "involv": [9, 22], "32623": [9, 22], "595481483513": [9, 22], "426": [9, 22], "59080558648185": [9, 22], "resourc": [10, 11, 12, 19, 27], "betula": [10, 11, 12, 15, 19, 23, 27], "2439037it": [10, 11, 12], "00": [10, 11, 12, 13, 14, 15, 18, 19, 20], "58823": 10, "11it": 10, "32minfo": [10, 11, 12, 13, 14, 15, 19, 20], "0m": [10, 11, 12, 13, 14, 15, 19, 20], "2439037": [10, 11, 12], "30": [10, 12], "7388": 10, "54it": 10, "91224": 10, "1548617": 10, "981644": [10, 11, 12], "xlabel": 10, "figur": [10, 15, 19, 20, 21], "512x384": [10, 15, 19, 20, 21], "neut": [10, 12], "sel": [10, 12], "33mwarn": [10, 11, 12, 13, 15, 20], "unusu": 10, "remind": 10, "precomput": [10, 11, 12, 13, 15, 20], "transform": [10, 11, 12, 13, 15, 20], "noth": [10, 11, 12, 13, 15, 20], "worri": [10, 11, 12, 13, 15, 20], "successfulli": [10, 11, 12, 13, 15, 20, 24], "finish": [10, 11, 12, 13, 15, 20], "19": 10, "138": 10, "24": [10, 19], "914217983522075": 10, "s3": 10, "4594999163725839": 10, "s4": 10, "8564984167403228": 10, "129": 10, "01it": [10, 19], "022839771992494": 10, "3600023106856762": 10, "202": 10, "65it": 10, "termin": [10, 12, 13, 15], "unreli": [10, 12, 13, 15], "gtol": [10, 12, 13, 15], "37": [10, 11], "258": 10, "34": [10, 13, 15, 20], "3671111014056": 10, "12817267732799753": 10, "010323679106065416": 10, "009174211460959952": 10, "124": 10, "16it": 10, "22": 10, "144": 10, "25": 10, "475375215288608": 10, "11928977848583686": 10, "615869562627708": 10, "019263299838964024": 10, "39it": [10, 19], "16": 10, "108": 10, "468833337430766": 10, "5846558887680596": 10, "282": 10, "29it": 10, "32": [10, 11], "29": [10, 11], "682901017745053": 10, "30746187589641": 10, "40455830317845365": 10, "932973607767187": 10, "30it": 10, "36": 10, "38": 10, "199479587045985": 10, "38338017269595326": 10, "9783636846779312": 10, "145": 10, "22it": 10, "23": [10, 14], "174": 10, "770373796111585": 10, "18601401092014383": 10, "33898326285021646": 10, "27it": [10, 19], "210": 10, "28": 10, "529378505340308": 10, "04456723721483778": 10, "49148973090950193": 10, "148": 10, "61it": 10, "150": 10, "35": [10, 15], "771914171887104": 10, "13396428310264583": 10, "4412430748097687": 10, "178": 10, "44it": 10, "252": 10, "33": 10, "30327874167497": 10, "08605769588041276": 10, "32069661118788106": 10, "9551595448209943": 10, "121": 10, "36it": 10, "14": 10, "126": 10, "804263015169496": 10, "22481984572414715": 10, "207": [10, 30], "02it": 10, "0x194f87fd0": 10, "0x191878310": 10, "0x192582f50": 10, "0x191c3dc90": 10, "0x191c3d1b0": 10, "0x1921161d0": 10, "0x1925e31f0": 10, "0x1925f76d0": 10, "0x1950b9000": 10, "0x1926ad8a0": 10, "0x1926ac400": 10, "0x1927629b0": 10, "center": [10, 12], "traceback": 10, "recent": 10, "cell": 10, "line": [10, 23, 25, 28], "9": [10, 12], "11": [10, 13], "12": [10, 14], "13": 10, "pycharmproject": [10, 14], "py": [10, 14], "153": 10, "155": 10, "158": 10, "throw": 10, "159": 10, "305": 10, "302": 10, "303": 10, "304": 10, "306": 10, "307": 10, "308": 10, "310": 10, "311": 10, "48": [10, 12], "320": 10, "11273875592235": 10, "237006794498091": 10, "1458170683377238": 10, "011838391666043677": 10, "195": 10, "704319521655766": 10, "8567454840664306": 10, "29143034677368906": 10, "396979801318865": 10, "220": 10, "012275463201547": 10, "239183199810254": 10, "27802524131704337": 10, "006865462720810218": 10, "190": 10, "90111999594789": 10, "011232843334602316": 10, "011479822938903853": 10, "26": 10, "261891419653175": 10, "610276055007697": 10, "36652863093931753": 10, "03569932398989778": 10, "130": 10, "138893406241486": 10, "1205379603542265": 10, "482862608756065": 10, "17": 10, "42025190546462": 10, "4799909983945452": 10, "16748120196875874": 10, "8537114057993476": 10, "071948363729746": 10, "828090886137": 10, "1584077616195951": 10, "235": 10, "6998772863962": 10, "608451652959161": 10, "9042969165049093": 10, "35474087234269114": 10, "85": [10, 11], "497094398987027": 10, "223931861806486": 10, "3246801507593634": 10, "92": 10, "55395724020116": 10, "110": 10, "222961471577335": 10, "117929611246703": 10, "21103125965514108": 10, "255": 10, "04133966408648": 10, "802931321924449": 10, "952062208073529": 10, "31800002143513917": 10, "725194868759536": 10, "923197089705358": 10, "8145869272910264": 10, "awar": 10, "harder": 10, "optimum": [10, 15, 20, 23, 28], "312": 10, "6205": 10, "392": [10, 19], "4972323914126": 10, "04240807049739001": 10, "014020203430891979": 10, "576838661756256": 10, "832925311021302": 10, "051291030167721616": 10, "09142144254109813": 10, "17377574363664494": 10, "17683501545665492": 10, "13281571672044995": 10, "978224368650702": 10, "09815078271461786": 10, "2423653254762814": 10, "062106223079901136": 10, "023255813973911417": 10, "1300": 10, "65": [10, 11], "03": [10, 14], "27": 10, "07": [10, 19], "iloc": 10, "40348634304522": 10, "instanti": [11, 12, 15, 19, 23, 27], "59006": 11, "72it": [11, 18], "7402": 11, "38it": 11, "980934": [11, 12], "2438327": [11, 12], "685": 11, "51293539207359": 11, "53949": 11, "40796474576": 11, "11366118571317227": 11, "0035695995726279578": 11, "18": [11, 14], "120": 11, "8637145820187": 11, "09522023308068508": 11, "006569641953718728": 11, "645": 11, "31745271402025": 11, "4185": 11, "848942283267": 11, "19089043196990704": 11, "006698568663111203": 11, "460": 11, "39": [11, 12], "34106087078578": 11, "165": [11, 12], "01887014239622": 11, "23938783194502647": 11, "18076846503635546": 11, "46": 11, "295": 11, "58658201021626": 11, "15428875493961483": 11, "17278065494179437": 11, "172": 11, "2365": 11, "146": 11, "11003066065462": 11, "09494023640538324": 11, "006134398085142732": 11, "44": 11, "275753637691146": 11, "4941": 11, "28735561608": 11, "1853951938413811": 11, "12013852605367349": 11, "1005073962112379": 11, "pyplot": [12, 13, 15, 21], "43": 12, "55635": 12, "67it": 12, "7379": 12, "49it": 12, "78": [12, 15], "429538741494866": 12, "09250725380768925": 12, "00010003368718414257": 12, "007131399121042546": 12, "420": 12, "781333903397154": 12, "4680": 12, "964377262656": 12, "18103245458802353": 12, "0016690592847306126": 12, "008521268228204374": 12, "70": 12, "552": 12, "34106087079692": 12, "01922058474526": 12, "23938807176874125": 12, "18076469877510834": 12, "53": 12, "360": 12, "58658201020549": 12, "15428868835376694": 12, "17278049460737993": 12, "87": 12, "26it": [12, 20], "131": 12, "56it": [12, 14], "96": 12, "94it": 12, "74": 12, "68it": 12, "99999": 12, "999995": 12, "107708": 12, "070929": 12, "006586": 12, "217027": 12, "000000": 12, "109729": 12, "078056": 12, "006550": 12, "238850": 12, "106905": 12, "075633": 12, "009989": 12, "226993": 12, "092369": 12, "007258": 12, "092633": 12, "007840": 12, "092453": 12, "006751": 12, "096245": 12, "018803": 12, "007973": 12, "058274": 12, "97": 12, "092126": 12, "006828": 12, "98": 12, "092910": 12, "007155": 12, "99": 12, "092115": 12, "007363": 12, "964377": 12, "181213": 12, "001669": 12, "008718": 12, "964381": 12, "184826": 12, "007134": 12, "000100": 12, "008475": 12, "036644": 12, "180935": 12, "008442": 12, "180756": 12, "008772": 12, "181145": 12, "008300": 12, "964367": 12, "190641": 12, "020606": 12, "001592": 12, "006240": 12, "114330": 12, "181881": 12, "007890": 12, "180451": 12, "001668": 12, "008380": 12, "181728": 12, "008656": 12, "180317": 12, "008479": 12, "021299": 12, "999100": 12, "242666": 12, "00469": 12, "904842": 12, "018806": 12, "237185": 12, "209108": 12, "00000": 12, "999957": 12, "019141": 12, "999925": 12, "238228": 12, "354965": 12, "999976": 12, "019021": 12, "999747": 12, "241067": 12, "127548": 12, "999926": 12, "019238": 12, "239614": 12, "174623": 12, "999948": 12, "018849": 12, "999458": 12, "240645": 12, "139773": 12, "999933": 12, "019967": 12, "236135": 12, "290712": 12, "999970": 12, "017626": 12, "997525": 12, "245683": 12, "039552": 12, "999752": 12, "018603": 12, "236898": 12, "223611": 12, "999960": 12, "019358": 12, "999935": 12, "241033": 12, "163738": 12, "999944": 12, "165492": 12, "191358": 12, "598316": 12, "999998": 12, "181340": 12, "213989": 12, "660550": 12, "152756": 12, "170284": 12, "536507": 12, "152751": 12, "170241": 12, "536429": 12, "154141": 12, "173122": 12, "544419": 12, "151335": 12, "176511": 12, "542307": 12, "999999": 12, "170290": 12, "198358": 12, "618442": 12, "131814": 12, "125572": 12, "400518": 12, "159440": 12, "180728": 12, "569011": 12, "146955": 12, "159420": 12, "503854": 12, "79": 13, "594": 13, "63216290448145": 13, "9867": 13, "852019677897": 13, "15081059927802082": 13, "00010000034366964345": 13, "006854767570905897": 13, "123": 13, "80it": 13, "nrow": 13, "ncol": [13, 15, 21], "figsiz": [13, 15, 21], "flatten": 13, "var": [14, 19], "folder": [14, 19], "w6": [14, 19], "18ktl5312413jw46btlxrh59fzxvt4": [14, 19], "b9755b5299a6": 14, "976599it": 14, "54065": 14, "13it": 14, "641b1ad7806": 14, "f36fd1bf6304": 14, "16046": 14, "976599": 14, "13333": 14, "user": [14, 25, 30], "au732936": 14, "bio_handl": 14, "490": 14, "settingwithcopywarn": 14, "try": 14, "slice": 14, "row_index": 14, "col_index": 14, "caveat": 14, "document": [14, 24, 25, 30], "pydata": 14, "doc": 14, "stabl": 14, "user_guid": 14, "html": 14, "view": 14, "versu": 14, "end": 14, "4810": 14, "71it": 14, "965325": 14, "8794": 14, "11274": 14, "pair": [15, 20, 23, 28], "69": [15, 20], "510": [15, 20], "6321629044744": [15, 20], "9868": [15, 20], "270989289615": [15, 20], "1508097745704915": [15, 20], "0002191946595685579": [15, 20], "006854664823870646": [15, 20], "local": [15, 20, 23, 28], "carri": [15, 20, 23, 28], "global": [15, 20, 23, 28], "furthermor": [15, 20, 23, 28], "cf": [15, 18, 19, 20, 23, 26, 27, 28], "uncertainti": [15, 23], "sfss": [15, 20, 23, 28], "redo": [15, 20, 23, 28], "88": 15, "86it": 15, "interpret": [15, 23], "mi": [15, 23], "identif": [15, 23, 30], "forc": [15, 23], "arbitrari": [15, 23], "later": [15, 23], "437981269154704": 15, "33214": 15, "794997237914": 15, "13054515138416597": 15, "266": 15, "58it": 15, "disabl": [15, 17, 23, 25], "clutter": [15, 23], "disable_pbar": [15, 17, 23, 25], "getlogg": [15, 18], "setlevel": [15, 17, 18, 23, 25, 26], "0043796961": 15, "neither": [15, 23], "nor": [15, 23], "significantli": [15, 23], "give": [15, 23], "There": [15, 19, 23], "room": [15, 23], "variat": [15, 23, 30], "short": [15, 23], "il": [15, 23], "simpli": [15, 23], "whenev": [15, 21, 23, 29], "ax1": [15, 21], "ax2": [15, 21], "tight_layout": 15, "modul": [15, 17, 19, 23, 24, 25, 27], "00043810205": 15, "00010020816": 15, "0012048178": 15, "join": [15, 23], "inde": [15, 23], "via": [15, 23], "investig": [15, 23], "extent": [15, 23], "4508265831290855": 15, "simpler": [15, 23], "explain": [15, 23], "inclus": [15, 23, 30], "associ": [15, 23], "power": [15, 23], "reduc": [15, 23], "interest": [15, 23], "describ": [15, 23], "snakemak": [15, 23], "contriv": [15, 23], "let": [15, 23], "vari": [15, 23], "linearli": [15, 23], "along": [15, 23], "our": [15, 18, 23, 25, 26], "c1": [15, 23], "etc": [15, 17, 23, 25], "058063323872589e": 15, "question": [15, 23], "9998078235961599": 15, "As": [15, 23, 30], "expect": [15, 23, 30], "pip": 16, "potenti": 16, "conflict": 16, "isol": 16, "environ": [16, 24, 30], "easiest": [16, 20, 28], "mamba": 16, "yml": 16, "content": 16, "env": 16, "channel": 16, "python": [16, 17, 23, 24, 25, 28, 30], "command": [16, 23, 24, 28], "activ": [16, 23, 28], "newli": 16, "readi": 16, "consol": [17, 25], "encount": [17, 25], "unexpect": [17, 25], "want": [17, 19, 25, 27], "descript": [17, 25], "stack": [17, 25], "trace": [17, 25], "ensur": [17, 23, 25, 28, 30], "task": [17, 25], "amen": [18, 26], "your": [18, 24, 26], "messag": [18, 23, 26, 28], "fatal": [18, 26], "append": 18, "__class__": 18, "__name__": 18, "112": 18, "67": 18, "05it": 18, "143": 18, "83it": 18, "192": 18, "21it": 18, "overal": [18, 26], "conveni": [19, 27], "skip_not_polar": [19, 27], "littl": [19, 27], "spp": [19, 27], "github": [19, 27], "repositori": [19, 27], "com": [19, 27], "sendrowski": [19, 24, 27], "blob": [19, 27], "dev": [19, 27], "biallel": [19, 27], "50000": [19, 27], "raw": [19, 27], "partli": [19, 27], "211142f65e7c": 19, "2d03158a125f": 19, "eb1f2b2b0185": 19, "50000it": 19, "32702": 19, "15it": 19, "02": 19, "84it": 19, "14084": 19, "18906": 19, "behavior": [19, 27], "tandem": [19, 27], "fed": [19, 27], "routin": [19, 27], "complet": [19, 21, 24, 27, 29], "32319": 19, "40it": 19, "08": 19, "389": 19, "examin": [19, 27], "deg": [19, 27], "7a41c74709e8": 19, "10000it": 19, "32111": 19, "3844": 19, "3566": 19, "straightforward": [19, 27], "suscept": [19, 27], "precis": [19, 27], "sophist": [19, 27], "Its": [19, 27], "underli": [19, 27], "with_outgroup": [19, 27], "err2103730": [19, 27], "err2103731": [19, 27], "d2a32f6ed097": 19, "haplotyp": 19, "377": 19, "32576": 19, "89it": 19, "411": 19, "04it": 19, "7041": 19, "406": 19, "97it": 19, "immedi": [19, 27], "api": [19, 27], "gc": [19, 27], "32068": 19, "55it": 19, "11466": 19, "7903": 19, "compon": 19, "easili": [19, 30], "extend": 19, "122": 20, "especi": [21, 29], "subtype1": [21, 29], "type1": [21, 29], "type2": [21, 29], "subtype2": [21, 29], "wildcard": [21, 29], "rid": [21, 29], "upp": [21, 29], "restor": [21, 29], "again": [21, 29], "csv": [21, 29], "spectra2": 21, "distinguish": [21, 29], "collaps": [21, 29], "onto": [21, 29], "particularli": [21, 29], "easier": [21, 29], "robust": [21, 29], "misspecif": [21, 29], "unknown": [21, 29], "fig": 21, "librari": [23, 24, 25, 26, 27, 28, 29], "load_fastdf": [23, 24, 25, 26, 27, 28, 29], "poetry_config": [23, 28], "required_modul": [23, 28], "project": [23, 28], "poetri": [23, 28], "tool": [23, 28, 30], "reticul": [23, 28, 30], "unabl": [23, 28], "sfs_model": [23, 28], "1m": 23, "22mscale": 23, "32my": 23, "39m": 23, "450709524223151": 23, "ancestral_base_stratif": 23, "degeneracy_stratif": 23, "05521844095717e": 23, "r": [24, 25, 30], "devtool": 24, "install_github": 24, "session": 24, "serv": 24, "wrapper": [24, 30], "around": 24, "through": [24, 30], "ggplot2": 24, "accomplish": 24, "install_fastdf": 24, "paradigm": 25, "familiar": 25, "aid": 25, "comprehens": 25, "demonstr": 25, "style": 25, "implicitli": 25, "shown": 25, "tradit": 25, "program": 25, "equival": 25, "explicit": 25, "belong": 25, "unfortun": 25, "seq_along": 26, "repr": [26, 29], "height": [26, 29], "gammaexp": 26, "gammadiscret": 26, "displacedgamma": 26, "paste0": 27, "sfs2": 29, "friendli": 30, "softwar": 30, "evolutionari": 30, "biologi": 30, "ecologi": 30, "build": 30, "upon": 30, "foundat": 30, "laid": 30, "address": 30, "predecessor": 30, "workflow": 30, "reimplement": 30, "experi": 30, "eas": 30, "research": 30, "plai": 30, "crucial": 30, "role": 30, "understand": 30, "natur": 30, "speci": 30, "essenti": 30, "wide": 30, "rang": 30, "applic": 30, "respons": 30, "aim": 30, "meet": 30, "grow": 30, "adopt": 30, "increasingli": 30, "precursor": 30, "contrast": 30, "put": 30, "nuisanc": 30, "rescal": 30, "alik": 30, "sojourn": 30, "prf": 30, "theori": 30, "step": 30, "easi": 30, "assess": 30, "customiz": 30, "\u03b1": 30, "built": 30, "versatil": 30, "paula": 30, "tataru": 30, "maeva": 30, "mollion": 30, "sylvain": 30, "gl\u00e9min": 30, "thoma": 30, "bataillon": 30, "300323": 30, "2017": 30, "09": 30}, "objects": {"fastdfe.abstract_inference": [[4, 0, 1, "", "Inference"]], "fastdfe.abstract_inference.Inference": [[4, 1, 1, "", "compute_histogram"], [4, 1, 1, "", "get_cis_params_mle"], [4, 1, 1, "", "get_discretized"], [4, 1, 1, "", "get_errors_params_mle"], [4, 1, 1, "", "get_stats_discretized"], [4, 1, 1, "", "plot_continuous"], [4, 1, 1, "", "plot_discretized"], [4, 1, 1, "", "plot_inferred_parameters"], [4, 1, 1, "", "plot_inferred_parameters_boxplot"]], "fastdfe": [[1, 2, 0, "-", "annotation"], [3, 2, 0, "-", "filtration"], [5, 2, 0, "-", "parametrization"], [6, 2, 0, "-", "parser"]], "fastdfe.annotation": [[1, 0, 1, "", "AdaptivePolarizationPrior"], [1, 0, 1, "", "AncestralAlleleAnnotation"], [1, 0, 1, "", "Annotation"], [1, 0, 1, "", "Annotator"], [1, 0, 1, "", "BaseType"], [1, 0, 1, "", "DegeneracyAnnotation"], [1, 0, 1, "", "JCSubstitutionModel"], [1, 0, 1, "", "K2SubstitutionModel"], [1, 0, 1, "", "KingmanPolarizationPrior"], [1, 0, 1, "", "MaximumLikelihoodAncestralAnnotation"], [1, 0, 1, "", "MaximumParsimonyAncestralAnnotation"], [1, 0, 1, "", "OutgroupAncestralAlleleAnnotation"], [1, 0, 1, "", "PolarizationPrior"], [1, 0, 1, "", "SiteConfig"], [1, 0, 1, "", "SiteInfo"], [1, 0, 1, "", "SubstitutionModel"], [1, 0, 1, "", "SynonymyAnnotation"]], "fastdfe.annotation.AdaptivePolarizationPrior": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "get_prior"], [1, 3, 1, "", "n_runs"], [1, 3, 1, "", "parallelize"], [1, 3, 1, "", "rng"], [1, 3, 1, "", "seed"]], "fastdfe.annotation.Annotation": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "annotate_site"], [1, 1, 1, "", "count_target_sites"], [1, 3, 1, "", "handler"], [1, 3, 1, "", "logger"], [1, 3, 1, "", "n_annotated"]], "fastdfe.annotation.Annotator": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "annotate"], [1, 3, 1, "", "annotations"], [1, 3, 1, "", "output"]], "fastdfe.annotation.BaseType": [[1, 3, 1, "", "MAJOR"], [1, 3, 1, "", "MINOR"]], "fastdfe.annotation.DegeneracyAnnotation": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "annotate_site"], [1, 3, 1, "", "cd"], [1, 3, 1, "", "cd_next"], [1, 3, 1, "", "cd_prev"], [1, 3, 1, "", "contig"], [1, 3, 1, "", "errors"], [1, 3, 1, "", "mismatches"], [1, 3, 1, "", "n_skipped"]], "fastdfe.annotation.JCSubstitutionModel": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "get_bound"], [1, 1, 1, "", "get_bounds"]], "fastdfe.annotation.K2SubstitutionModel": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "get_bounds"]], "fastdfe.annotation.KingmanPolarizationPrior": [[1, 1, 1, "", "get_prior"]], "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "annotate_site"], [1, 3, 1, "", "confidence_threshold"], [1, 3, 1, "", "configs"], [1, 1, 1, "", "evaluate_likelihood"], [1, 1, 1, "", "from_data"], [1, 1, 1, "", "from_dataframe"], [1, 1, 1, "", "from_est_sfs"], [1, 1, 1, "", "get_p_config"], [1, 1, 1, "", "get_p_configs"], [1, 1, 1, "", "get_p_tree"], [1, 1, 1, "", "get_site_info"], [1, 1, 1, "", "infer"], [1, 3, 1, "", "likelihood"], [1, 3, 1, "", "likelihoods"], [1, 3, 1, "", "max_sites"], [1, 3, 1, "", "model"], [1, 3, 1, "", "n_runs"], [1, 3, 1, "", "n_sites"], [1, 3, 1, "", "p_bins"], [1, 4, 1, "", "p_polarization"], [1, 3, 1, "", "parallelize"], [1, 3, 1, "", "param_names"], [1, 3, 1, "", "params_mle"], [1, 1, 1, "", "plot_likelihoods"], [1, 3, 1, "", "prior"], [1, 3, 1, "", "result"], [1, 1, 1, "", "to_est_sfs"]], "fastdfe.annotation.MaximumParsimonyAncestralAnnotation": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "annotate_site"], [1, 3, 1, "", "samples"]], "fastdfe.annotation.OutgroupAncestralAlleleAnnotation": [[1, 1, 1, "", "__init__"], [1, 3, 1, "", "exclude"], [1, 1, 1, "", "get_base_index"], [1, 1, 1, "", "get_base_string"], [1, 3, 1, "", "ingroups"], [1, 3, 1, "", "n_ingroups"], [1, 3, 1, "", "n_outgroups"], [1, 3, 1, "", "outgroups"], [1, 3, 1, "", "rng"], [1, 3, 1, "", "seed"]], "fastdfe.annotation.PolarizationPrior": [[1, 1, 1, "", "__init__"], [1, 3, 1, "", "allow_divergence"], [1, 1, 1, "", "get_prior"], [1, 3, 1, "", "logger"], [1, 1, 1, "", "plot_polarization"], [1, 3, 1, "", "probabilities"]], "fastdfe.annotation.SiteConfig": [[1, 1, 1, "", "__init__"], [1, 3, 1, "", "major_base"], [1, 3, 1, "", "minor_base"], [1, 3, 1, "", "multiplicity"], [1, 3, 1, "", "n_major"], [1, 3, 1, "", "outgroup_bases"], [1, 3, 1, "", "p_ancestral"], [1, 3, 1, "", "p_major"], [1, 3, 1, "", "p_minor"], [1, 3, 1, "", "sites"]], "fastdfe.annotation.SiteInfo": [[1, 1, 1, "", "__init__"], [1, 3, 1, "", "ancestral_base"], [1, 3, 1, "", "first_node_ancestral"], [1, 3, 1, "", "major_ancestral"], [1, 3, 1, "", "major_base"], [1, 3, 1, "", "minor_base"], [1, 3, 1, "", "n_major"], [1, 3, 1, "", "outgroup_bases"], [1, 3, 1, "", "p_ancestral"], [1, 3, 1, "", "p_bases_first_node"], [1, 3, 1, "", "p_first_node_ancestral"], [1, 3, 1, "", "p_major"], [1, 3, 1, "", "p_major_ancestral"], [1, 3, 1, "", "p_minor"], [1, 1, 1, "", "plot_tree"], [1, 3, 1, "", "rate_params"]], "fastdfe.annotation.SubstitutionModel": [[1, 1, 1, "", "__init__"], [1, 3, 1, "", "bounds"], [1, 1, 1, "", "cache"], [1, 3, 1, "", "fixed_params"], [1, 1, 1, "", "get_bounds"], [1, 1, 1, "", "get_prob"], [1, 1, 1, "", "get_x0"], [1, 3, 1, "", "logger"], [1, 3, 1, "", "pool_branch_rates"], [1, 1, 1, "", "validate_bounds"]], "fastdfe.annotation.SynonymyAnnotation": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "annotate_site"], [1, 1, 1, "", "is_synonymous"], [1, 1, 1, "", "mutate"], [1, 3, 1, "", "n_snpeff_comparisons"], [1, 3, 1, "", "n_vep_comparisons"], [1, 3, 1, "", "snpeff_mismatches"], [1, 3, 1, "", "vep_mismatches"]], "fastdfe.base_inference": [[4, 0, 1, "", "BaseInference"]], "fastdfe.base_inference.BaseInference": [[4, 3, 1, "", "L2_residual"], [4, 1, 1, "", "__init__"], [4, 1, 1, "", "add_alpha_to_bootstraps"], [4, 1, 1, "", "add_demography"], [4, 1, 1, "", "adjust_polarization"], [4, 4, 1, "", "alpha"], [4, 1, 1, "", "assign_result"], [4, 1, 1, "", "bootstrap"], [4, 3, 1, "", "bootstrap_results"], [4, 3, 1, "", "bootstraps"], [4, 3, 1, "", "bounds"], [4, 1, 1, "", "check_fixed_params_exist"], [4, 1, 1, "", "compare_nested"], [4, 1, 1, "", "compare_nested_models"], [4, 1, 1, "", "create_config"], [4, 3, 1, "", "default_bounds"], [4, 3, 1, "", "default_opts_mle"], [4, 3, 1, "", "default_scales"], [4, 3, 1, "", "default_x0"], [4, 3, 1, "", "discretization"], [4, 3, 1, "", "do_bootstrap"], [4, 1, 1, "", "evaluate_likelihood"], [4, 3, 1, "", "execution_time"], [4, 3, 1, "", "fixed_params"], [4, 3, 1, "", "folded"], [4, 1, 1, "", "from_config"], [4, 1, 1, "", "from_config_file"], [4, 1, 1, "", "from_file"], [4, 1, 1, "", "from_json"], [4, 1, 1, "", "get_alpha"], [4, 1, 1, "", "get_bootstrap_param_names"], [4, 1, 1, "", "get_bootstrap_params"], [4, 1, 1, "", "get_bounds_linear"], [4, 1, 1, "", "get_cis_params_mle"], [4, 1, 1, "", "get_counts"], [4, 1, 1, "", "get_discretized"], [4, 1, 1, "", "get_errors_discretized_dfe"], [4, 1, 1, "", "get_fixed_param_names"], [4, 1, 1, "", "get_n_optimized"], [4, 1, 1, "", "get_optimized_param_names"], [4, 1, 1, "", "get_scales_linear"], [4, 1, 1, "", "get_summary"], [4, 1, 1, "", "get_x0"], [4, 3, 1, "", "likelihood"], [4, 3, 1, "", "likelihoods"], [4, 3, 1, "", "locked"], [4, 1, 1, "", "lrt"], [4, 3, 1, "", "model"], [4, 1, 1, "", "model_sfs"], [4, 3, 1, "", "n"], [4, 3, 1, "", "n_bootstraps"], [4, 3, 1, "", "n_runs"], [4, 3, 1, "", "optimization"], [4, 3, 1, "", "parallelize"], [4, 4, 1, "", "param_names"], [4, 3, 1, "", "params_mle"], [4, 1, 1, "", "plot_all"], [4, 1, 1, "", "plot_bucket_sizes"], [4, 1, 1, "", "plot_continuous"], [4, 1, 1, "", "plot_discretized"], [4, 1, 1, "", "plot_inferred_parameters"], [4, 1, 1, "", "plot_inferred_parameters_boxplot"], [4, 1, 1, "", "plot_interval_density"], [4, 1, 1, "", "plot_likelihoods"], [4, 1, 1, "", "plot_nested_models"], [4, 1, 1, "", "plot_observed_sfs"], [4, 1, 1, "", "plot_sfs_comparison"], [4, 1, 1, "", "raise_if_locked"], [4, 1, 1, "", "report_result"], [4, 1, 1, "", "resample_sfs"], [4, 3, 1, "", "result"], [4, 3, 1, "", "rng"], [4, 1, 1, "", "run"], [4, 1, 1, "", "run_bootstrap_sample"], [4, 1, 1, "", "run_if_required"], [4, 1, 1, "", "run_if_required_wrapper"], [4, 3, 1, "", "scales"], [4, 3, 1, "", "seed"], [4, 3, 1, "", "sfs_mle"], [4, 3, 1, "", "sfs_neut"], [4, 3, 1, "", "sfs_sel"], [4, 3, 1, "", "theta"], [4, 1, 1, "", "to_file"], [4, 1, 1, "", "to_json"], [4, 1, 1, "", "update_properties"], [4, 3, 1, "", "x0"]], "fastdfe.config": [[2, 0, 1, "", "Config"]], "fastdfe.config.Config": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "create_polydfe_init_file"], [2, 1, 1, "", "create_polydfe_sfs_config"], [2, 1, 1, "", "from_dict"], [2, 1, 1, "", "from_file"], [2, 1, 1, "", "from_json"], [2, 1, 1, "", "from_yaml"], [2, 1, 1, "", "get_polydfe_model"], [2, 1, 1, "", "parse_polydfe_init_file"], [2, 1, 1, "", "parse_polydfe_sfs_config"], [2, 1, 1, "", "to_dict"], [2, 1, 1, "", "to_file"], [2, 1, 1, "", "to_json"], [2, 1, 1, "", "to_yaml"], [2, 1, 1, "", "update"]], "fastdfe.filtration": [[3, 0, 1, "", "AllFiltration"], [3, 0, 1, "", "BiasedGCConversionFiltration"], [3, 0, 1, "", "CodingSequenceFiltration"], [3, 0, 1, "", "DeviantOutgroupFiltration"], [3, 0, 1, "", "ExistingOutgroupFiltration"], [3, 0, 1, "", "Filterer"], [3, 0, 1, "", "Filtration"], [3, 0, 1, "", "MaskedFiltration"], [3, 0, 1, "", "NoFiltration"], [3, 0, 1, "", "PolyAllelicFiltration"], [3, 0, 1, "", "SNPFiltration"], [3, 0, 1, "", "SNVFiltration"]], "fastdfe.filtration.AllFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.filtration.BiasedGCConversionFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.filtration.CodingSequenceFiltration": [[3, 1, 1, "", "__init__"], [3, 3, 1, "", "cd"], [3, 1, 1, "", "filter_site"], [3, 3, 1, "", "n_processed"]], "fastdfe.filtration.DeviantOutgroupFiltration": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "filter_site"], [3, 3, 1, "", "ingroup_mask"], [3, 3, 1, "", "ingroups"], [3, 3, 1, "", "outgroup_mask"], [3, 3, 1, "", "outgroups"], [3, 3, 1, "", "retain_monomorphic"], [3, 3, 1, "", "samples"], [3, 3, 1, "", "strict_mode"]], "fastdfe.filtration.ExistingOutgroupFiltration": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "filter_site"], [3, 3, 1, "", "outgroup_mask"], [3, 3, 1, "", "outgroups"], [3, 3, 1, "", "samples"]], "fastdfe.filtration.Filterer": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "filter"], [3, 3, 1, "", "filtrations"], [3, 1, 1, "", "is_filtered"], [3, 3, 1, "", "n_filtered"], [3, 3, 1, "", "output"]], "fastdfe.filtration.Filtration": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "filter_site"], [3, 3, 1, "", "handler"], [3, 3, 1, "", "logger"], [3, 3, 1, "", "n_filtered"]], "fastdfe.filtration.MaskedFiltration": [[3, 1, 1, "", "__init__"], [3, 3, 1, "", "exclude_samples"], [3, 3, 1, "", "include_samples"], [3, 3, 1, "", "use_parser"]], "fastdfe.filtration.NoFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.filtration.PolyAllelicFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.filtration.SNPFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.filtration.SNVFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.joint_inference": [[4, 0, 1, "", "JointInference"]], "fastdfe.joint_inference.JointInference": [[4, 3, 1, "", "L2_residual"], [4, 1, 1, "", "__init__"], [4, 1, 1, "", "add_alpha_to_bootstraps"], [4, 1, 1, "", "add_covariates"], [4, 1, 1, "", "add_covariates_as_shared"], [4, 1, 1, "", "add_demography"], [4, 1, 1, "", "adjust_polarization"], [4, 4, 1, "", "alpha"], [4, 1, 1, "", "assign_result"], [4, 1, 1, "", "bootstrap"], [4, 1, 1, "", "bootstrap_if_required"], [4, 3, 1, "", "bootstrap_results"], [4, 3, 1, "", "bootstraps"], [4, 3, 1, "", "bounds"], [4, 1, 1, "", "check_fixed_params_exist"], [4, 1, 1, "", "check_no_shared_params_fixed"], [4, 1, 1, "", "check_shared_params"], [4, 1, 1, "", "compare_nested"], [4, 1, 1, "", "compare_nested_models"], [4, 3, 1, "", "covariates"], [4, 1, 1, "", "create_config"], [4, 3, 1, "", "default_bounds"], [4, 3, 1, "", "default_opts_mle"], [4, 3, 1, "", "default_scales"], [4, 3, 1, "", "default_x0"], [4, 1, 1, "", "determine_unshared_covariates"], [4, 3, 1, "", "discretization"], [4, 3, 1, "", "do_bootstrap"], [4, 1, 1, "", "evaluate_likelihood"], [4, 3, 1, "", "execution_time"], [4, 3, 1, "", "fixed_params"], [4, 3, 1, "", "folded"], [4, 1, 1, "", "from_config"], [4, 1, 1, "", "from_config_file"], [4, 1, 1, "", "from_file"], [4, 1, 1, "", "from_json"], [4, 1, 1, "", "get_L2_residual"], [4, 1, 1, "", "get_alpha"], [4, 1, 1, "", "get_bootstrap_param_names"], [4, 1, 1, "", "get_bootstrap_params"], [4, 1, 1, "", "get_bounds_linear"], [4, 1, 1, "", "get_cis_params_mle"], [4, 1, 1, "", "get_counts"], [4, 1, 1, "", "get_discretized"], [4, 1, 1, "", "get_errors_discretized_dfe"], [4, 1, 1, "", "get_fixed_param_names"], [4, 1, 1, "", "get_inferences"], [4, 1, 1, "", "get_n_optimized"], [4, 1, 1, "", "get_optimized_param_names"], [4, 1, 1, "", "get_scales_linear"], [4, 1, 1, "", "get_shared_param_names"], [4, 1, 1, "", "get_summary"], [4, 1, 1, "", "get_x0"], [4, 1, 1, "", "joint_inference_makes_sense"], [4, 3, 1, "", "joint_inferences"], [4, 3, 1, "", "likelihood"], [4, 3, 1, "", "likelihoods"], [4, 3, 1, "", "locked"], [4, 1, 1, "", "lrt"], [4, 3, 1, "", "marginal_inferences"], [4, 1, 1, "", "marginals_without_all"], [4, 3, 1, "", "model"], [4, 1, 1, "", "model_sfs"], [4, 3, 1, "", "n"], [4, 3, 1, "", "n_bootstraps"], [4, 3, 1, "", "n_runs"], [4, 3, 1, "", "optimization"], [4, 3, 1, "", "parallelize"], [4, 4, 1, "", "param_names"], [4, 3, 1, "", "params_mle"], [4, 3, 1, "", "params_mle_raw"], [4, 1, 1, "", "perform_lrt_covariates"], [4, 1, 1, "", "perform_lrt_shared"], [4, 1, 1, "", "plot_all"], [4, 1, 1, "", "plot_bucket_sizes"], [4, 1, 1, "", "plot_continuous"], [4, 1, 1, "", "plot_discretized"], [4, 1, 1, "", "plot_inferred_parameters"], [4, 1, 1, "", "plot_inferred_parameters_boxplot"], [4, 1, 1, "", "plot_interval_density"], [4, 1, 1, "", "plot_likelihoods"], [4, 1, 1, "", "plot_nested_models"], [4, 1, 1, "", "plot_observed_sfs"], [4, 1, 1, "", "plot_sfs_comparison"], [4, 1, 1, "", "raise_if_locked"], [4, 1, 1, "", "report_result"], [4, 1, 1, "", "resample_sfs"], [4, 3, 1, "", "result"], [4, 3, 1, "", "rng"], [4, 1, 1, "", "run"], [4, 1, 1, "", "run_bootstrap_sample"], [4, 1, 1, "", "run_if_required"], [4, 1, 1, "", "run_if_required_wrapper"], [4, 1, 1, "", "run_joint"], [4, 1, 1, "", "run_joint_bootstrap_sample"], [4, 1, 1, "", "run_joint_without_covariates"], [4, 1, 1, "", "run_marginal"], [4, 3, 1, "", "scales"], [4, 3, 1, "", "seed"], [4, 3, 1, "", "sfs_mle"], [4, 3, 1, "", "sfs_neut"], [4, 3, 1, "", "sfs_sel"], [4, 3, 1, "", "shared_params"], [4, 3, 1, "", "theta"], [4, 1, 1, "", "to_file"], [4, 1, 1, "", "to_json"], [4, 3, 1, "", "types"], [4, 1, 1, "", "update_properties"], [4, 3, 1, "", "x0"], [4, 3, 1, "", "x0_cov"]], "fastdfe.optimization": [[4, 0, 1, "", "Covariate"], [4, 0, 1, "", "SharedParams"]], "fastdfe.optimization.Covariate": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "apply"], [4, 1, 1, "", "apply_default"], [4, 3, 1, "", "bounds"], [4, 3, 1, "", "bounds_scale"], [4, 3, 1, "", "callback"], [4, 3, 1, "", "param"], [4, 3, 1, "", "values"], [4, 3, 1, "", "x0"]], "fastdfe.optimization.SharedParams": [[4, 1, 1, "", "__init__"], [4, 3, 1, "", "params"], [4, 3, 1, "", "types"]], "fastdfe.parametrization": [[5, 0, 1, "", "DiscreteFractionalParametrization"], [5, 0, 1, "", "DiscreteParametrization"], [5, 0, 1, "", "DisplacedGammaParametrization"], [5, 0, 1, "", "GammaDiscreteParametrization"], [5, 0, 1, "", "GammaExpParametrization"], [5, 0, 1, "", "Parametrization"]], "fastdfe.parametrization.DiscreteFractionalParametrization": [[5, 1, 1, "", "__init__"], [5, 3, 1, "", "fixed_params"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "interval_sizes"], [5, 3, 1, "", "intervals"], [5, 3, 1, "", "k"], [5, 3, 1, "", "param_names"], [5, 3, 1, "", "params"], [5, 1, 1, "", "to_fractional"], [5, 1, 1, "", "to_nominal"]], "fastdfe.parametrization.DiscreteParametrization": [[5, 1, 1, "", "__init__"], [5, 3, 1, "", "fixed_params"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "interval_sizes"], [5, 3, 1, "", "intervals"], [5, 3, 1, "", "k"], [5, 3, 1, "", "param_names"], [5, 3, 1, "", "params"]], "fastdfe.parametrization.DisplacedGammaParametrization": [[5, 3, 1, "", "bounds"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "scales"], [5, 3, 1, "", "submodels"], [5, 3, 1, "", "x0"]], "fastdfe.parametrization.GammaDiscreteParametrization": [[5, 3, 1, "", "bounds"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "scales"], [5, 3, 1, "", "submodels"], [5, 3, 1, "", "x0"]], "fastdfe.parametrization.GammaExpParametrization": [[5, 3, 1, "", "bounds"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "scales"], [5, 3, 1, "", "submodels"], [5, 3, 1, "", "x0"]], "fastdfe.parametrization.Parametrization": [[5, 1, 1, "", "__init__"], [5, 3, 1, "", "bounds"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "param_names"], [5, 3, 1, "", "scales"], [5, 3, 1, "", "submodels"], [5, 3, 1, "", "x0"]], "fastdfe.parser": [[6, 0, 1, "", "AncestralBaseStratification"], [6, 0, 1, "", "BaseContextStratification"], [6, 0, 1, "", "BaseTransitionStratification"], [6, 0, 1, "", "ChunkedStratification"], [6, 0, 1, "", "ContigStratification"], [6, 0, 1, "", "DegeneracyStratification"], [6, 0, 1, "", "GenomePositionDependentStratification"], [6, 0, 1, "", "Parser"], [6, 0, 1, "", "SNPStratification"], [6, 0, 1, "", "SnpEffStratification"], [6, 0, 1, "", "Stratification"], [6, 0, 1, "", "SynonymyStratification"], [6, 0, 1, "", "TargetSiteCounter"], [6, 0, 1, "", "TransitionTransversionStratification"], [6, 0, 1, "", "VEPStratification"]], "fastdfe.parser.AncestralBaseStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.BaseContextStratification": [[6, 1, 1, "", "__init__"], [6, 3, 1, "", "contig"], [6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"], [6, 3, 1, "", "n_flanking"]], "fastdfe.parser.BaseTransitionStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.ChunkedStratification": [[6, 1, 1, "", "__init__"], [6, 3, 1, "", "chunk_sizes"], [6, 3, 1, "", "counter"], [6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"], [6, 3, 1, "", "n_chunks"]], "fastdfe.parser.ContigStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.DegeneracyStratification": [[6, 1, 1, "", "__init__"], [6, 3, 1, "", "get_degeneracy"], [6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.Parser": [[6, 1, 1, "", "__init__"], [6, 3, 1, "", "annotations"], [6, 3, 1, "", "exclude_samples"], [6, 3, 1, "", "filtrations"], [6, 3, 1, "", "include_samples"], [6, 3, 1, "", "n"], [6, 3, 1, "", "n_skipped"], [6, 1, 1, "", "parse"], [6, 3, 1, "", "sfs"], [6, 3, 1, "", "skip_non_polarized"], [6, 3, 1, "", "stratifications"], [6, 3, 1, "", "target_site_counter"]], "fastdfe.parser.SnpEffStratification": [[6, 3, 1, "", "info_tag"]], "fastdfe.parser.Stratification": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"], [6, 3, 1, "", "n_valid"], [6, 3, 1, "", "parser"]], "fastdfe.parser.SynonymyStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.TargetSiteCounter": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "count"], [6, 3, 1, "", "logger"], [6, 3, 1, "", "n_samples"], [6, 3, 1, "", "n_target_sites"]], "fastdfe.parser.TransitionTransversionStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.VEPStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"], [6, 3, 1, "", "info_tag"]], "fastdfe.spectrum": [[7, 0, 1, "", "Spectra"], [8, 0, 1, "", "Spectrum"]], "fastdfe.spectrum.Spectra": [[7, 1, 1, "", "__init__"], [7, 4, 1, "", "all"], [7, 1, 1, "", "combine"], [7, 1, 1, "", "copy"], [7, 1, 1, "", "drop_empty"], [7, 1, 1, "", "drop_sparse"], [7, 1, 1, "", "drop_zero_entries"], [7, 1, 1, "", "fold"], [7, 1, 1, "", "from_dataframe"], [7, 1, 1, "", "from_dict"], [7, 1, 1, "", "from_file"], [7, 1, 1, "", "from_list"], [7, 1, 1, "", "from_spectra"], [7, 1, 1, "", "from_spectrum"], [7, 1, 1, "", "get_empty"], [7, 4, 1, "", "has_div"], [7, 1, 1, "", "has_dots"], [7, 1, 1, "", "is_folded"], [7, 4, 1, "", "k"], [7, 1, 1, "", "merge_groups"], [7, 4, 1, "", "n"], [7, 4, 1, "", "n_div"], [7, 4, 1, "", "n_monomorphic"], [7, 4, 1, "", "n_polymorphic"], [7, 4, 1, "", "n_sites"], [7, 1, 1, "", "normalize"], [7, 1, 1, "", "plot"], [7, 4, 1, "", "polymorphic"], [7, 1, 1, "", "prefix"], [7, 1, 1, "", "print"], [7, 1, 1, "", "rename"], [7, 1, 1, "", "replace_dots"], [7, 1, 1, "", "select"], [7, 1, 1, "", "sort_types"], [7, 1, 1, "", "to_dataframe"], [7, 1, 1, "", "to_dict"], [7, 1, 1, "", "to_file"], [7, 1, 1, "", "to_list"], [7, 1, 1, "", "to_multi_index"], [7, 1, 1, "", "to_numpy"], [7, 1, 1, "", "to_single_index"], [7, 1, 1, "", "to_spectra"], [7, 4, 1, "", "types"]], "fastdfe.spectrum.Spectrum": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "copy"], [8, 1, 1, "", "fold"], [8, 1, 1, "", "from_list"], [8, 1, 1, "", "from_polydfe"], [8, 1, 1, "", "from_polymorphic"], [8, 4, 1, "", "has_div"], [8, 1, 1, "", "is_folded"], [8, 4, 1, "", "n"], [8, 4, 1, "", "n_div"], [8, 4, 1, "", "n_monomorphic"], [8, 4, 1, "", "n_polymorphic"], [8, 4, 1, "", "n_sites"], [8, 1, 1, "", "normalize"], [8, 1, 1, "", "plot"], [8, 4, 1, "", "polymorphic"], [8, 1, 1, "", "standard_kingman"], [8, 4, 1, "", "theta"], [8, 1, 1, "", "to_list"], [8, 1, 1, "", "to_numpy"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "fastdf": 0, "": 0, "document": 0, "python": 0, "refer": 0, "r": 0, "api": 0, "indic": 0, "tabl": 0, "vcf": [1, 3, 6, 19, 27], "annot": [1, 19, 27], "configur": [2, 9, 22], "class": [2, 7, 8], "filtrat": [3, 19, 27], "infer": [4, 9, 14, 15, 20, 22, 23, 28], "dfe": [5, 15, 18, 23, 26], "parametr": [5, 18, 26], "pars": [6, 19, 27], "spectra": [7, 21, 29], "spectrum": 8, "file": [9, 22], "basic": [9, 20, 22, 28], "usag": 9, "json": [9, 22], "joint": [9, 15, 22, 23], "exampl": [9, 22], "h": 14, "sapien": 14, "base": [15, 23], "bootstrap": [15, 20, 23, 28], "fix": [15, 23], "paramet": [15, 23], "nest": [15, 23], "model": [15, 23], "comparison": [15, 23], "visual": [15, 23], "likelihood": [15, 23], "serial": [15, 20, 21, 23, 28, 29], "fold": [15, 21, 23, 29], "covari": [15, 23], "instal": [16, 24], "pypi": 16, "conda": 16, "miscellan": [17, 25], "log": [17, 25], "debug": [17, 25], "seed": [17, 25], "introduct": [19, 27, 30], "stratif": [19, 27], "degeneraci": [19, 27], "ancestr": [19, 27], "allel": [19, 27], "quickstart": [20, 28], "work": [21, 29, 30], "sf": [21, 29], "subtyp": [21, 29], "group": [21, 29], "prefix": [21, 29], "object": 25, "orient": 25, "design": 25, "motiv": 30, "how": 30, "featur": 30}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Welcome to fastDFE\u2019s documentation": [[0, "welcome-to-fastdfe-s-documentation"]], "Python Reference": [[0, null]], "R Reference": [[0, null]], "API Reference": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "VCF Annotation": [[1, "module-fastdfe.annotation"]], "Configuration class": [[2, "configuration-class"]], "VCF Filtration": [[3, "module-fastdfe.filtration"]], "Inference": [[4, "inference"]], "DFE Parametrizations": [[5, "module-fastdfe.parametrization"]], "VCF Parsing": [[6, "module-fastdfe.parser"], [19, "vcf-parsing"], [27, "vcf-parsing"]], "Spectra class": [[7, "spectra-class"]], "Spectrum class": [[8, "spectrum-class"]], "Configuration files": [[9, "configuration-files"], [22, "configuration-files"]], "Basic usage": [[9, "basic-usage"]], "JSON files": [[9, "json-files"], [22, "json-files"]], "Joint inference example": [[9, "joint-inference-example"], [22, "joint-inference-example"]], "Inference on H. sapiens": [[14, "inference-on-h-sapiens"]], "DFE Inference": [[15, "dfe-inference"], [23, "dfe-inference"]], "Base inference": [[15, "base-inference"], [23, "base-inference"]], "Bootstrapping": [[15, "bootstrapping"], [20, "bootstrapping"], [23, "bootstrapping"], [28, "bootstrapping"]], "Fixing parameters": [[15, "fixing-parameters"], [23, "fixing-parameters"]], "Nested model comparison": [[15, "nested-model-comparison"], [23, "nested-model-comparison"]], "Visualize likelihoods": [[15, "visualize-likelihoods"], [23, "visualize-likelihoods"]], "Serialization": [[15, "serialization"], [20, "serialization"], [21, "serialization"], [23, "serialization"], [28, "serialization"], [29, "serialization"]], "Folded inference": [[15, "folded-inference"], [23, "folded-inference"]], "Joint inference": [[15, "joint-inference"], [23, "joint-inference"]], "Model comparison": [[15, "model-comparison"], [15, "id1"], [23, "model-comparison"], [23, "id1"]], "Covariates": [[15, "covariates"], [23, "covariates"]], "Installation": [[16, "installation"], [24, "installation"]], "PyPi": [[16, "pypi"]], "Conda": [[16, "conda"]], "Miscellaneous": [[17, "miscellaneous"], [25, "miscellaneous"]], "Logging": [[17, "logging"], [25, "logging"]], "Debugging": [[17, "debugging"], [25, "debugging"]], "Seeding": [[17, "seeding"], [25, "seeding"]], "DFE parametrizations": [[18, "dfe-parametrizations"], [26, "dfe-parametrizations"]], "Introduction": [[19, "introduction"], [27, "introduction"], [30, "introduction"]], "Stratifications": [[19, "stratifications"], [27, "stratifications"]], "Annotations": [[19, "annotations"], [27, "annotations"]], "Degeneracy Annotation": [[19, "degeneracy-annotation"], [27, "degeneracy-annotation"]], "Ancestral Allele Annotation": [[19, "ancestral-allele-annotation"], [27, "ancestral-allele-annotation"]], "Filtrations": [[19, "filtrations"], [27, "filtrations"]], "Quickstart": [[20, "quickstart"], [28, "quickstart"]], "Basic inference": [[20, "basic-inference"], [28, "basic-inference"]], "Working with SFS": [[21, "working-with-sfs"], [29, "working-with-sfs"]], "Subtypes": [[21, "subtypes"], [29, "subtypes"]], "Grouping": [[21, "grouping"], [29, "grouping"]], "Prefixing": [[21, "prefixing"], [29, "prefixing"]], "Folded spectra": [[21, "folded-spectra"], [29, "folded-spectra"]], "Basic": [[22, "basic"]], "Object-Oriented Design": [[25, "object-oriented-design"]], "Motivation": [[30, "motivation"]], "How it works": [[30, "how-it-works"]], "Features": [[30, "features"]]}, "indexentries": {"adaptivepolarizationprior (class in fastdfe.annotation)": [[1, "fastdfe.annotation.AdaptivePolarizationPrior"]], "ancestralalleleannotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.AncestralAlleleAnnotation"]], "annotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.Annotation"]], "annotator (class in fastdfe.annotation)": [[1, "fastdfe.annotation.Annotator"]], "basetype (class in fastdfe.annotation)": [[1, "fastdfe.annotation.BaseType"]], "degeneracyannotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.DegeneracyAnnotation"]], "jcsubstitutionmodel (class in fastdfe.annotation)": [[1, "fastdfe.annotation.JCSubstitutionModel"]], "k2substitutionmodel (class in fastdfe.annotation)": [[1, "fastdfe.annotation.K2SubstitutionModel"]], "kingmanpolarizationprior (class in fastdfe.annotation)": [[1, "fastdfe.annotation.KingmanPolarizationPrior"]], "major (basetype attribute)": [[1, "fastdfe.annotation.BaseType.MAJOR"]], "minor (basetype attribute)": [[1, "fastdfe.annotation.BaseType.MINOR"]], "maximumlikelihoodancestralannotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation"]], "maximumparsimonyancestralannotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.MaximumParsimonyAncestralAnnotation"]], "outgroupancestralalleleannotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.OutgroupAncestralAlleleAnnotation"]], "polarizationprior (class in fastdfe.annotation)": [[1, "fastdfe.annotation.PolarizationPrior"]], "siteconfig (class in fastdfe.annotation)": [[1, "fastdfe.annotation.SiteConfig"]], "siteinfo (class in fastdfe.annotation)": [[1, "fastdfe.annotation.SiteInfo"]], "substitutionmodel (class in fastdfe.annotation)": [[1, "fastdfe.annotation.SubstitutionModel"]], "synonymyannotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.SynonymyAnnotation"]], "__init__() (adaptivepolarizationprior method)": [[1, "fastdfe.annotation.AdaptivePolarizationPrior.__init__"]], "__init__() (annotation method)": [[1, "fastdfe.annotation.Annotation.__init__"]], "__init__() (annotator method)": [[1, "fastdfe.annotation.Annotator.__init__"]], "__init__() (degeneracyannotation method)": [[1, "fastdfe.annotation.DegeneracyAnnotation.__init__"]], "__init__() (jcsubstitutionmodel method)": [[1, "fastdfe.annotation.JCSubstitutionModel.__init__"]], "__init__() (k2substitutionmodel method)": [[1, "fastdfe.annotation.K2SubstitutionModel.__init__"]], "__init__() (maximumlikelihoodancestralannotation method)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.__init__"]], "__init__() (maximumparsimonyancestralannotation method)": [[1, "fastdfe.annotation.MaximumParsimonyAncestralAnnotation.__init__"]], "__init__() (outgroupancestralalleleannotation method)": [[1, "fastdfe.annotation.OutgroupAncestralAlleleAnnotation.__init__"]], "__init__() (polarizationprior method)": [[1, "fastdfe.annotation.PolarizationPrior.__init__"]], "__init__() (siteconfig method)": [[1, "fastdfe.annotation.SiteConfig.__init__"]], "__init__() (siteinfo method)": [[1, "fastdfe.annotation.SiteInfo.__init__"]], "__init__() (substitutionmodel method)": [[1, "fastdfe.annotation.SubstitutionModel.__init__"]], "__init__() (synonymyannotation method)": [[1, "fastdfe.annotation.SynonymyAnnotation.__init__"]], "allow_divergence (polarizationprior attribute)": [[1, "fastdfe.annotation.PolarizationPrior.allow_divergence"]], "ancestral_base (siteinfo attribute)": [[1, "fastdfe.annotation.SiteInfo.ancestral_base"]], "annotate() (annotator method)": [[1, "fastdfe.annotation.Annotator.annotate"]], "annotate_site() (annotation method)": [[1, "fastdfe.annotation.Annotation.annotate_site"]], "annotate_site() (degeneracyannotation method)": [[1, "fastdfe.annotation.DegeneracyAnnotation.annotate_site"]], "annotate_site() (maximumlikelihoodancestralannotation method)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.annotate_site"]], "annotate_site() (maximumparsimonyancestralannotation method)": [[1, "fastdfe.annotation.MaximumParsimonyAncestralAnnotation.annotate_site"]], "annotate_site() (synonymyannotation method)": [[1, "fastdfe.annotation.SynonymyAnnotation.annotate_site"]], "annotations (annotator attribute)": [[1, "fastdfe.annotation.Annotator.annotations"]], "bounds (substitutionmodel attribute)": [[1, "fastdfe.annotation.SubstitutionModel.bounds"]], "cache() (substitutionmodel method)": [[1, "fastdfe.annotation.SubstitutionModel.cache"]], "cd (degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.cd"]], "cd_next (degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.cd_next"]], "cd_prev (degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.cd_prev"]], "confidence_threshold (maximumlikelihoodancestralannotation attribute)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.confidence_threshold"]], "configs (maximumlikelihoodancestralannotation attribute)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.configs"]], "contig (degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.contig"]], "count_target_sites() (annotation static method)": [[1, "fastdfe.annotation.Annotation.count_target_sites"]], "errors (degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.errors"]], "evaluate_likelihood() (maximumlikelihoodancestralannotation method)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.evaluate_likelihood"]], "exclude (outgroupancestralalleleannotation attribute)": [[1, "fastdfe.annotation.OutgroupAncestralAlleleAnnotation.exclude"]], "fastdfe.annotation": [[1, "module-fastdfe.annotation"]], "first_node_ancestral (siteinfo attribute)": [[1, "fastdfe.annotation.SiteInfo.first_node_ancestral"]], "fixed_params (substitutionmodel attribute)": [[1, "fastdfe.annotation.SubstitutionModel.fixed_params"]], "from_data() (maximumlikelihoodancestralannotation class method)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.from_data"]], "from_dataframe() (maximumlikelihoodancestralannotation class method)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.from_dataframe"]], "from_est_sfs() (maximumlikelihoodancestralannotation class method)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.from_est_sfs"]], "get_base_index() (outgroupancestralalleleannotation class method)": [[1, "fastdfe.annotation.OutgroupAncestralAlleleAnnotation.get_base_index"]], "get_base_string() (outgroupancestralalleleannotation static method)": [[1, "fastdfe.annotation.OutgroupAncestralAlleleAnnotation.get_base_string"]], "get_bound() (jcsubstitutionmodel method)": [[1, "fastdfe.annotation.JCSubstitutionModel.get_bound"]], "get_bounds() (jcsubstitutionmodel method)": [[1, "fastdfe.annotation.JCSubstitutionModel.get_bounds"]], "get_bounds() (k2substitutionmodel method)": [[1, "fastdfe.annotation.K2SubstitutionModel.get_bounds"]], "get_bounds() (substitutionmodel method)": [[1, "fastdfe.annotation.SubstitutionModel.get_bounds"]], "get_p_config() (maximumlikelihoodancestralannotation class method)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.get_p_config"]], "get_p_configs() (maximumlikelihoodancestralannotation class method)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.get_p_configs"]], "get_p_tree() (maximumlikelihoodancestralannotation static method)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.get_p_tree"]], "get_prior() (adaptivepolarizationprior method)": [[1, "fastdfe.annotation.AdaptivePolarizationPrior.get_prior"]], "get_prior() (kingmanpolarizationprior method)": [[1, "fastdfe.annotation.KingmanPolarizationPrior.get_prior"]], "get_prior() (polarizationprior method)": [[1, "fastdfe.annotation.PolarizationPrior.get_prior"]], "get_prob() (substitutionmodel method)": [[1, "fastdfe.annotation.SubstitutionModel.get_prob"]], "get_site_info() (maximumlikelihoodancestralannotation method)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.get_site_info"]], "get_x0() (substitutionmodel static method)": [[1, "fastdfe.annotation.SubstitutionModel.get_x0"]], "handler (annotation attribute)": [[1, "fastdfe.annotation.Annotation.handler"]], "infer() (maximumlikelihoodancestralannotation method)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.infer"]], "ingroups (outgroupancestralalleleannotation attribute)": [[1, "fastdfe.annotation.OutgroupAncestralAlleleAnnotation.ingroups"]], "is_synonymous() (synonymyannotation static method)": [[1, "fastdfe.annotation.SynonymyAnnotation.is_synonymous"]], "likelihood (maximumlikelihoodancestralannotation attribute)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.likelihood"]], "likelihoods (maximumlikelihoodancestralannotation attribute)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.likelihoods"]], "logger (annotation attribute)": [[1, "fastdfe.annotation.Annotation.logger"]], "logger (polarizationprior attribute)": [[1, "fastdfe.annotation.PolarizationPrior.logger"]], "logger (substitutionmodel attribute)": [[1, "fastdfe.annotation.SubstitutionModel.logger"]], "major_ancestral (siteinfo attribute)": [[1, "fastdfe.annotation.SiteInfo.major_ancestral"]], "major_base (siteconfig attribute)": [[1, "fastdfe.annotation.SiteConfig.major_base"]], "major_base (siteinfo attribute)": [[1, "fastdfe.annotation.SiteInfo.major_base"]], "max_sites (maximumlikelihoodancestralannotation attribute)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.max_sites"]], "minor_base (siteconfig attribute)": [[1, "fastdfe.annotation.SiteConfig.minor_base"]], "minor_base (siteinfo attribute)": [[1, "fastdfe.annotation.SiteInfo.minor_base"]], "mismatches (degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.mismatches"]], "model (maximumlikelihoodancestralannotation attribute)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.model"]], "module": [[1, "module-fastdfe.annotation"], [3, "module-fastdfe.filtration"], [5, "module-fastdfe.parametrization"], [6, "module-fastdfe.parser"]], "multiplicity (siteconfig attribute)": [[1, "fastdfe.annotation.SiteConfig.multiplicity"]], "mutate() (synonymyannotation static method)": [[1, "fastdfe.annotation.SynonymyAnnotation.mutate"]], "n_annotated (annotation attribute)": [[1, "fastdfe.annotation.Annotation.n_annotated"]], "n_ingroups (outgroupancestralalleleannotation attribute)": [[1, "fastdfe.annotation.OutgroupAncestralAlleleAnnotation.n_ingroups"]], "n_major (siteconfig attribute)": [[1, "fastdfe.annotation.SiteConfig.n_major"]], "n_major (siteinfo attribute)": [[1, "fastdfe.annotation.SiteInfo.n_major"]], "n_outgroups (outgroupancestralalleleannotation attribute)": [[1, "fastdfe.annotation.OutgroupAncestralAlleleAnnotation.n_outgroups"]], "n_runs (adaptivepolarizationprior attribute)": [[1, "fastdfe.annotation.AdaptivePolarizationPrior.n_runs"]], "n_runs (maximumlikelihoodancestralannotation attribute)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.n_runs"]], "n_sites (maximumlikelihoodancestralannotation attribute)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.n_sites"]], "n_skipped (degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.n_skipped"]], "n_snpeff_comparisons (synonymyannotation attribute)": [[1, "fastdfe.annotation.SynonymyAnnotation.n_snpeff_comparisons"]], "n_vep_comparisons (synonymyannotation attribute)": [[1, "fastdfe.annotation.SynonymyAnnotation.n_vep_comparisons"]], "outgroup_bases (siteconfig attribute)": [[1, "fastdfe.annotation.SiteConfig.outgroup_bases"]], "outgroup_bases (siteinfo attribute)": [[1, "fastdfe.annotation.SiteInfo.outgroup_bases"]], "outgroups (outgroupancestralalleleannotation attribute)": [[1, "fastdfe.annotation.OutgroupAncestralAlleleAnnotation.outgroups"]], "output (annotator attribute)": [[1, "fastdfe.annotation.Annotator.output"]], "p_ancestral (siteconfig attribute)": [[1, "fastdfe.annotation.SiteConfig.p_ancestral"]], "p_ancestral (siteinfo attribute)": [[1, "fastdfe.annotation.SiteInfo.p_ancestral"]], "p_bases_first_node (siteinfo attribute)": [[1, "fastdfe.annotation.SiteInfo.p_bases_first_node"]], "p_bins (maximumlikelihoodancestralannotation attribute)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.p_bins"]], "p_first_node_ancestral (siteinfo attribute)": [[1, "fastdfe.annotation.SiteInfo.p_first_node_ancestral"]], "p_major (siteconfig attribute)": [[1, "fastdfe.annotation.SiteConfig.p_major"]], "p_major (siteinfo attribute)": [[1, "fastdfe.annotation.SiteInfo.p_major"]], "p_major_ancestral (siteinfo attribute)": [[1, "fastdfe.annotation.SiteInfo.p_major_ancestral"]], "p_minor (siteconfig attribute)": [[1, "fastdfe.annotation.SiteConfig.p_minor"]], "p_minor (siteinfo attribute)": [[1, "fastdfe.annotation.SiteInfo.p_minor"]], "p_polarization (maximumlikelihoodancestralannotation property)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.p_polarization"]], "parallelize (adaptivepolarizationprior attribute)": [[1, "fastdfe.annotation.AdaptivePolarizationPrior.parallelize"]], "parallelize (maximumlikelihoodancestralannotation attribute)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.parallelize"]], "param_names (maximumlikelihoodancestralannotation attribute)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.param_names"]], "params_mle (maximumlikelihoodancestralannotation attribute)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.params_mle"]], "plot_likelihoods() (maximumlikelihoodancestralannotation method)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.plot_likelihoods"]], "plot_polarization() (polarizationprior method)": [[1, "fastdfe.annotation.PolarizationPrior.plot_polarization"]], "plot_tree() (siteinfo method)": [[1, "fastdfe.annotation.SiteInfo.plot_tree"]], "pool_branch_rates (substitutionmodel attribute)": [[1, "fastdfe.annotation.SubstitutionModel.pool_branch_rates"]], "prior (maximumlikelihoodancestralannotation attribute)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.prior"]], "probabilities (polarizationprior attribute)": [[1, "fastdfe.annotation.PolarizationPrior.probabilities"]], "rate_params (siteinfo attribute)": [[1, "fastdfe.annotation.SiteInfo.rate_params"]], "result (maximumlikelihoodancestralannotation attribute)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.result"]], "rng (adaptivepolarizationprior attribute)": [[1, "fastdfe.annotation.AdaptivePolarizationPrior.rng"]], "rng (outgroupancestralalleleannotation attribute)": [[1, "fastdfe.annotation.OutgroupAncestralAlleleAnnotation.rng"]], "samples (maximumparsimonyancestralannotation attribute)": [[1, "fastdfe.annotation.MaximumParsimonyAncestralAnnotation.samples"]], "seed (adaptivepolarizationprior attribute)": [[1, "fastdfe.annotation.AdaptivePolarizationPrior.seed"]], "seed (outgroupancestralalleleannotation attribute)": [[1, "fastdfe.annotation.OutgroupAncestralAlleleAnnotation.seed"]], "sites (siteconfig attribute)": [[1, "fastdfe.annotation.SiteConfig.sites"]], "snpeff_mismatches (synonymyannotation attribute)": [[1, "fastdfe.annotation.SynonymyAnnotation.snpeff_mismatches"]], "to_est_sfs() (maximumlikelihoodancestralannotation method)": [[1, "fastdfe.annotation.MaximumLikelihoodAncestralAnnotation.to_est_sfs"]], "validate_bounds() (substitutionmodel static method)": [[1, "fastdfe.annotation.SubstitutionModel.validate_bounds"]], "vep_mismatches (synonymyannotation attribute)": [[1, "fastdfe.annotation.SynonymyAnnotation.vep_mismatches"]], "config (class in fastdfe.config)": [[2, "fastdfe.config.Config"]], "__init__() (config method)": [[2, "fastdfe.config.Config.__init__"]], "create_polydfe_init_file() (config method)": [[2, "fastdfe.config.Config.create_polydfe_init_file"]], "create_polydfe_sfs_config() (config method)": [[2, "fastdfe.config.Config.create_polydfe_sfs_config"]], "from_dict() (config static method)": [[2, "fastdfe.config.Config.from_dict"]], "from_file() (config static method)": [[2, "fastdfe.config.Config.from_file"]], "from_json() (config static method)": [[2, "fastdfe.config.Config.from_json"]], "from_yaml() (config static method)": [[2, "fastdfe.config.Config.from_yaml"]], "get_polydfe_model() (config method)": [[2, "fastdfe.config.Config.get_polydfe_model"]], "parse_polydfe_init_file() (config method)": [[2, "fastdfe.config.Config.parse_polydfe_init_file"]], "parse_polydfe_sfs_config() (config method)": [[2, "fastdfe.config.Config.parse_polydfe_sfs_config"]], "to_dict() (config method)": [[2, "fastdfe.config.Config.to_dict"]], "to_file() (config method)": [[2, "fastdfe.config.Config.to_file"]], "to_json() (config method)": [[2, "fastdfe.config.Config.to_json"]], "to_yaml() (config method)": [[2, "fastdfe.config.Config.to_yaml"]], "update() (config method)": [[2, "fastdfe.config.Config.update"]], "allfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.AllFiltration"]], "biasedgcconversionfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.BiasedGCConversionFiltration"]], "codingsequencefiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.CodingSequenceFiltration"]], "deviantoutgroupfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration"]], "existingoutgroupfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.ExistingOutgroupFiltration"]], "filterer (class in fastdfe.filtration)": [[3, "fastdfe.filtration.Filterer"]], "filtration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.Filtration"]], "maskedfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.MaskedFiltration"]], "nofiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.NoFiltration"]], "polyallelicfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.PolyAllelicFiltration"]], "snpfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.SNPFiltration"]], "snvfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.SNVFiltration"]], "__init__() (codingsequencefiltration method)": [[3, "fastdfe.filtration.CodingSequenceFiltration.__init__"]], "__init__() (deviantoutgroupfiltration method)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.__init__"]], "__init__() (existingoutgroupfiltration method)": [[3, "fastdfe.filtration.ExistingOutgroupFiltration.__init__"]], "__init__() (filterer method)": [[3, "fastdfe.filtration.Filterer.__init__"]], "__init__() (filtration method)": [[3, "fastdfe.filtration.Filtration.__init__"]], "__init__() (maskedfiltration method)": [[3, "fastdfe.filtration.MaskedFiltration.__init__"]], "cd (codingsequencefiltration attribute)": [[3, "fastdfe.filtration.CodingSequenceFiltration.cd"]], "exclude_samples (maskedfiltration attribute)": [[3, "fastdfe.filtration.MaskedFiltration.exclude_samples"]], "fastdfe.filtration": [[3, "module-fastdfe.filtration"]], "filter() (filterer method)": [[3, "fastdfe.filtration.Filterer.filter"]], "filter_site() (allfiltration method)": [[3, "fastdfe.filtration.AllFiltration.filter_site"]], "filter_site() (biasedgcconversionfiltration method)": [[3, "fastdfe.filtration.BiasedGCConversionFiltration.filter_site"]], "filter_site() (codingsequencefiltration method)": [[3, "fastdfe.filtration.CodingSequenceFiltration.filter_site"]], "filter_site() (deviantoutgroupfiltration method)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.filter_site"]], "filter_site() (existingoutgroupfiltration method)": [[3, "fastdfe.filtration.ExistingOutgroupFiltration.filter_site"]], "filter_site() (filtration method)": [[3, "fastdfe.filtration.Filtration.filter_site"]], "filter_site() (nofiltration method)": [[3, "fastdfe.filtration.NoFiltration.filter_site"]], "filter_site() (polyallelicfiltration method)": [[3, "fastdfe.filtration.PolyAllelicFiltration.filter_site"]], "filter_site() (snpfiltration method)": [[3, "fastdfe.filtration.SNPFiltration.filter_site"]], "filter_site() (snvfiltration method)": [[3, "fastdfe.filtration.SNVFiltration.filter_site"]], "filtrations (filterer attribute)": [[3, "fastdfe.filtration.Filterer.filtrations"]], "handler (filtration attribute)": [[3, "fastdfe.filtration.Filtration.handler"]], "include_samples (maskedfiltration attribute)": [[3, "fastdfe.filtration.MaskedFiltration.include_samples"]], "ingroup_mask (deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.ingroup_mask"]], "ingroups (deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.ingroups"]], "is_filtered() (filterer method)": [[3, "fastdfe.filtration.Filterer.is_filtered"]], "logger (filtration attribute)": [[3, "fastdfe.filtration.Filtration.logger"]], "n_filtered (filterer attribute)": [[3, "fastdfe.filtration.Filterer.n_filtered"]], "n_filtered (filtration attribute)": [[3, "fastdfe.filtration.Filtration.n_filtered"]], "n_processed (codingsequencefiltration attribute)": [[3, "fastdfe.filtration.CodingSequenceFiltration.n_processed"]], "outgroup_mask (deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.outgroup_mask"]], "outgroup_mask (existingoutgroupfiltration attribute)": [[3, "fastdfe.filtration.ExistingOutgroupFiltration.outgroup_mask"]], "outgroups (deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.outgroups"]], "outgroups (existingoutgroupfiltration attribute)": [[3, "fastdfe.filtration.ExistingOutgroupFiltration.outgroups"]], "output (filterer attribute)": [[3, "fastdfe.filtration.Filterer.output"]], "retain_monomorphic (deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.retain_monomorphic"]], "samples (deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.samples"]], "samples (existingoutgroupfiltration attribute)": [[3, "fastdfe.filtration.ExistingOutgroupFiltration.samples"]], "strict_mode (deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.strict_mode"]], "use_parser (maskedfiltration attribute)": [[3, "fastdfe.filtration.MaskedFiltration.use_parser"]], "baseinference (class in fastdfe.base_inference)": [[4, "fastdfe.base_inference.BaseInference"]], "covariate (class in fastdfe.optimization)": [[4, "fastdfe.optimization.Covariate"]], "inference (class in fastdfe.abstract_inference)": [[4, "fastdfe.abstract_inference.Inference"]], "jointinference (class in fastdfe.joint_inference)": [[4, "fastdfe.joint_inference.JointInference"]], "l2_residual (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.L2_residual"]], "l2_residual (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.L2_residual"]], "sharedparams (class in fastdfe.optimization)": [[4, "fastdfe.optimization.SharedParams"]], "__init__() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.__init__"]], "__init__() (covariate method)": [[4, "fastdfe.optimization.Covariate.__init__"]], "__init__() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.__init__"]], "__init__() (sharedparams method)": [[4, "fastdfe.optimization.SharedParams.__init__"]], "add_alpha_to_bootstraps() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.add_alpha_to_bootstraps"]], "add_alpha_to_bootstraps() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.add_alpha_to_bootstraps"]], "add_covariates() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.add_covariates"]], "add_covariates_as_shared() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.add_covariates_as_shared"]], "add_demography() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.add_demography"]], "add_demography() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.add_demography"]], "adjust_polarization() (baseinference static method)": [[4, "fastdfe.base_inference.BaseInference.adjust_polarization"]], "adjust_polarization() (jointinference static method)": [[4, "fastdfe.joint_inference.JointInference.adjust_polarization"]], "alpha (baseinference property)": [[4, "fastdfe.base_inference.BaseInference.alpha"]], "alpha (jointinference property)": [[4, "fastdfe.joint_inference.JointInference.alpha"]], "apply() (covariate method)": [[4, "fastdfe.optimization.Covariate.apply"]], "apply_default() (covariate method)": [[4, "fastdfe.optimization.Covariate.apply_default"]], "assign_result() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.assign_result"]], "assign_result() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.assign_result"]], "bootstrap() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.bootstrap"]], "bootstrap() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.bootstrap"]], "bootstrap_if_required() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.bootstrap_if_required"]], "bootstrap_results (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.bootstrap_results"]], "bootstrap_results (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.bootstrap_results"]], "bootstraps (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.bootstraps"]], "bootstraps (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.bootstraps"]], "bounds (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.bounds"]], "bounds (covariate attribute)": [[4, "fastdfe.optimization.Covariate.bounds"]], "bounds (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.bounds"]], "bounds_scale (covariate attribute)": [[4, "fastdfe.optimization.Covariate.bounds_scale"]], "callback (covariate attribute)": [[4, "fastdfe.optimization.Covariate.callback"]], "check_fixed_params_exist() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.check_fixed_params_exist"]], "check_fixed_params_exist() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.check_fixed_params_exist"]], "check_no_shared_params_fixed() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.check_no_shared_params_fixed"]], "check_shared_params() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.check_shared_params"]], "compare_nested() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.compare_nested"]], "compare_nested() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.compare_nested"]], "compare_nested_models() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.compare_nested_models"]], "compare_nested_models() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.compare_nested_models"]], "compute_histogram() (inference static method)": [[4, "fastdfe.abstract_inference.Inference.compute_histogram"]], "covariates (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.covariates"]], "create_config() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.create_config"]], "create_config() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.create_config"]], "default_bounds (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.default_bounds"]], "default_bounds (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.default_bounds"]], "default_opts_mle (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.default_opts_mle"]], "default_opts_mle (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.default_opts_mle"]], "default_scales (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.default_scales"]], "default_scales (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.default_scales"]], "default_x0 (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.default_x0"]], "default_x0 (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.default_x0"]], "determine_unshared_covariates() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.determine_unshared_covariates"]], "discretization (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.discretization"]], "discretization (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.discretization"]], "do_bootstrap (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.do_bootstrap"]], "do_bootstrap (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.do_bootstrap"]], "evaluate_likelihood() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.evaluate_likelihood"]], "evaluate_likelihood() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.evaluate_likelihood"]], "execution_time (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.execution_time"]], "execution_time (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.execution_time"]], "fixed_params (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.fixed_params"]], "fixed_params (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.fixed_params"]], "folded (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.folded"]], "folded (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.folded"]], "from_config() (baseinference class method)": [[4, "fastdfe.base_inference.BaseInference.from_config"]], "from_config() (jointinference class method)": [[4, "fastdfe.joint_inference.JointInference.from_config"]], "from_config_file() (baseinference class method)": [[4, "fastdfe.base_inference.BaseInference.from_config_file"]], "from_config_file() (jointinference class method)": [[4, "fastdfe.joint_inference.JointInference.from_config_file"]], "from_file() (baseinference class method)": [[4, "fastdfe.base_inference.BaseInference.from_file"]], "from_file() (jointinference class method)": [[4, "fastdfe.joint_inference.JointInference.from_file"]], "from_json() (baseinference class method)": [[4, "fastdfe.base_inference.BaseInference.from_json"]], "from_json() (jointinference class method)": [[4, "fastdfe.joint_inference.JointInference.from_json"]], "get_l2_residual() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_L2_residual"]], "get_alpha() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_alpha"]], "get_alpha() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_alpha"]], "get_bootstrap_param_names() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_bootstrap_param_names"]], "get_bootstrap_param_names() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_bootstrap_param_names"]], "get_bootstrap_params() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_bootstrap_params"]], "get_bootstrap_params() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_bootstrap_params"]], "get_bounds_linear() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_bounds_linear"]], "get_bounds_linear() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_bounds_linear"]], "get_cis_params_mle() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_cis_params_mle"]], "get_cis_params_mle() (inference static method)": [[4, "fastdfe.abstract_inference.Inference.get_cis_params_mle"]], "get_cis_params_mle() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_cis_params_mle"]], "get_counts() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_counts"]], "get_counts() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_counts"]], "get_discretized() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_discretized"]], "get_discretized() (inference static method)": [[4, "fastdfe.abstract_inference.Inference.get_discretized"]], "get_discretized() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_discretized"]], "get_errors_discretized_dfe() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_errors_discretized_dfe"]], "get_errors_discretized_dfe() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_errors_discretized_dfe"]], "get_errors_params_mle() (inference static method)": [[4, "fastdfe.abstract_inference.Inference.get_errors_params_mle"]], "get_fixed_param_names() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_fixed_param_names"]], "get_fixed_param_names() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_fixed_param_names"]], "get_inferences() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_inferences"]], "get_n_optimized() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_n_optimized"]], "get_n_optimized() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_n_optimized"]], "get_optimized_param_names() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_optimized_param_names"]], "get_optimized_param_names() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_optimized_param_names"]], "get_scales_linear() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_scales_linear"]], "get_scales_linear() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_scales_linear"]], "get_shared_param_names() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_shared_param_names"]], "get_stats_discretized() (inference static method)": [[4, "fastdfe.abstract_inference.Inference.get_stats_discretized"]], "get_summary() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_summary"]], "get_summary() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_summary"]], "get_x0() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_x0"]], "get_x0() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_x0"]], "joint_inference_makes_sense() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.joint_inference_makes_sense"]], "joint_inferences (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.joint_inferences"]], "likelihood (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.likelihood"]], "likelihood (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.likelihood"]], "likelihoods (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.likelihoods"]], "likelihoods (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.likelihoods"]], "locked (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.locked"]], "locked (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.locked"]], "lrt() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.lrt"]], "lrt() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.lrt"]], "marginal_inferences (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.marginal_inferences"]], "marginals_without_all() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.marginals_without_all"]], "model (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.model"]], "model (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.model"]], "model_sfs() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.model_sfs"]], "model_sfs() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.model_sfs"]], "n (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.n"]], "n (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.n"]], "n_bootstraps (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.n_bootstraps"]], "n_bootstraps (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.n_bootstraps"]], "n_runs (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.n_runs"]], "n_runs (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.n_runs"]], "optimization (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.optimization"]], "optimization (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.optimization"]], "parallelize (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.parallelize"]], "parallelize (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.parallelize"]], "param (covariate attribute)": [[4, "fastdfe.optimization.Covariate.param"]], "param_names (baseinference property)": [[4, "fastdfe.base_inference.BaseInference.param_names"]], "param_names (jointinference property)": [[4, "fastdfe.joint_inference.JointInference.param_names"]], "params (sharedparams attribute)": [[4, "fastdfe.optimization.SharedParams.params"]], "params_mle (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.params_mle"]], "params_mle (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.params_mle"]], "params_mle_raw (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.params_mle_raw"]], "perform_lrt_covariates() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.perform_lrt_covariates"]], "perform_lrt_shared() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.perform_lrt_shared"]], "plot_all() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_all"]], "plot_all() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_all"]], "plot_bucket_sizes() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_bucket_sizes"]], "plot_bucket_sizes() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_bucket_sizes"]], "plot_continuous() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_continuous"]], "plot_continuous() (inference static method)": [[4, "fastdfe.abstract_inference.Inference.plot_continuous"]], "plot_continuous() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_continuous"]], "plot_discretized() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_discretized"]], "plot_discretized() (inference static method)": [[4, "fastdfe.abstract_inference.Inference.plot_discretized"]], "plot_discretized() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_discretized"]], "plot_inferred_parameters() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_inferred_parameters"]], "plot_inferred_parameters() (inference static method)": [[4, "fastdfe.abstract_inference.Inference.plot_inferred_parameters"]], "plot_inferred_parameters() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_inferred_parameters"]], "plot_inferred_parameters_boxplot() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_inferred_parameters_boxplot"]], "plot_inferred_parameters_boxplot() (inference static method)": [[4, "fastdfe.abstract_inference.Inference.plot_inferred_parameters_boxplot"]], "plot_inferred_parameters_boxplot() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_inferred_parameters_boxplot"]], "plot_interval_density() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_interval_density"]], "plot_interval_density() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_interval_density"]], "plot_likelihoods() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_likelihoods"]], "plot_likelihoods() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_likelihoods"]], "plot_nested_models() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_nested_models"]], "plot_nested_models() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_nested_models"]], "plot_observed_sfs() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_observed_sfs"]], "plot_observed_sfs() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_observed_sfs"]], "plot_sfs_comparison() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_sfs_comparison"]], "plot_sfs_comparison() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_sfs_comparison"]], "raise_if_locked() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.raise_if_locked"]], "raise_if_locked() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.raise_if_locked"]], "report_result() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.report_result"]], "report_result() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.report_result"]], "resample_sfs() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.resample_sfs"]], "resample_sfs() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.resample_sfs"]], "result (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.result"]], "result (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.result"]], "rng (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.rng"]], "rng (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.rng"]], "run() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.run"]], "run() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run"]], "run_bootstrap_sample() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.run_bootstrap_sample"]], "run_bootstrap_sample() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_bootstrap_sample"]], "run_if_required() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.run_if_required"]], "run_if_required() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_if_required"]], "run_if_required_wrapper() (baseinference static method)": [[4, "fastdfe.base_inference.BaseInference.run_if_required_wrapper"]], "run_if_required_wrapper() (jointinference static method)": [[4, "fastdfe.joint_inference.JointInference.run_if_required_wrapper"]], "run_joint() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_joint"]], "run_joint_bootstrap_sample() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_joint_bootstrap_sample"]], "run_joint_without_covariates() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_joint_without_covariates"]], "run_marginal() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_marginal"]], "scales (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.scales"]], "scales (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.scales"]], "seed (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.seed"]], "seed (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.seed"]], "sfs_mle (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.sfs_mle"]], "sfs_mle (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.sfs_mle"]], "sfs_neut (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.sfs_neut"]], "sfs_neut (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.sfs_neut"]], "sfs_sel (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.sfs_sel"]], "sfs_sel (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.sfs_sel"]], "shared_params (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.shared_params"]], "theta (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.theta"]], "theta (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.theta"]], "to_file() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.to_file"]], "to_file() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.to_file"]], "to_json() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.to_json"]], "to_json() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.to_json"]], "types (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.types"]], "types (sharedparams attribute)": [[4, "fastdfe.optimization.SharedParams.types"]], "update_properties() (baseinference method)": [[4, "fastdfe.base_inference.BaseInference.update_properties"]], "update_properties() (jointinference method)": [[4, "fastdfe.joint_inference.JointInference.update_properties"]], "values (covariate attribute)": [[4, "fastdfe.optimization.Covariate.values"]], "x0 (baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.x0"]], "x0 (covariate attribute)": [[4, "fastdfe.optimization.Covariate.x0"]], "x0 (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.x0"]], "x0_cov (jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.x0_cov"]], "discretefractionalparametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization"]], "discreteparametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.DiscreteParametrization"]], "displacedgammaparametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization"]], "gammadiscreteparametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization"]], "gammaexpparametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.GammaExpParametrization"]], "parametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.Parametrization"]], "__init__() (discretefractionalparametrization method)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.__init__"]], "__init__() (discreteparametrization method)": [[5, "fastdfe.parametrization.DiscreteParametrization.__init__"]], "__init__() (parametrization method)": [[5, "fastdfe.parametrization.Parametrization.__init__"]], "bounds (displacedgammaparametrization attribute)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.bounds"]], "bounds (gammadiscreteparametrization attribute)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.bounds"]], "bounds (gammaexpparametrization attribute)": [[5, "fastdfe.parametrization.GammaExpParametrization.bounds"]], "bounds (parametrization attribute)": [[5, "fastdfe.parametrization.Parametrization.bounds"]], "fastdfe.parametrization": [[5, "module-fastdfe.parametrization"]], "fixed_params (discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.fixed_params"]], "fixed_params (discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.fixed_params"]], "get_cdf() (discretefractionalparametrization method)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.get_cdf"]], "get_cdf() (discreteparametrization method)": [[5, "fastdfe.parametrization.DiscreteParametrization.get_cdf"]], "get_cdf() (displacedgammaparametrization static method)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.get_cdf"]], "get_cdf() (gammadiscreteparametrization static method)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.get_cdf"]], "get_cdf() (gammaexpparametrization static method)": [[5, "fastdfe.parametrization.GammaExpParametrization.get_cdf"]], "get_cdf() (parametrization method)": [[5, "fastdfe.parametrization.Parametrization.get_cdf"]], "get_pdf() (discretefractionalparametrization method)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.get_pdf"]], "get_pdf() (discreteparametrization method)": [[5, "fastdfe.parametrization.DiscreteParametrization.get_pdf"]], "get_pdf() (displacedgammaparametrization static method)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.get_pdf"]], "get_pdf() (gammadiscreteparametrization static method)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.get_pdf"]], "get_pdf() (gammaexpparametrization static method)": [[5, "fastdfe.parametrization.GammaExpParametrization.get_pdf"]], "get_pdf() (parametrization method)": [[5, "fastdfe.parametrization.Parametrization.get_pdf"]], "interval_sizes (discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.interval_sizes"]], "interval_sizes (discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.interval_sizes"]], "intervals (discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.intervals"]], "intervals (discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.intervals"]], "k (discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.k"]], "k (discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.k"]], "param_names (discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.param_names"]], "param_names (discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.param_names"]], "param_names (parametrization attribute)": [[5, "fastdfe.parametrization.Parametrization.param_names"]], "params (discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.params"]], "params (discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.params"]], "scales (displacedgammaparametrization attribute)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.scales"]], "scales (gammadiscreteparametrization attribute)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.scales"]], "scales (gammaexpparametrization attribute)": [[5, "fastdfe.parametrization.GammaExpParametrization.scales"]], "scales (parametrization attribute)": [[5, "fastdfe.parametrization.Parametrization.scales"]], "submodels (displacedgammaparametrization attribute)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.submodels"]], "submodels (gammadiscreteparametrization attribute)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.submodels"]], "submodels (gammaexpparametrization attribute)": [[5, "fastdfe.parametrization.GammaExpParametrization.submodels"]], "submodels (parametrization attribute)": [[5, "fastdfe.parametrization.Parametrization.submodels"]], "to_fractional() (discretefractionalparametrization method)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.to_fractional"]], "to_nominal() (discretefractionalparametrization method)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.to_nominal"]], "x0 (displacedgammaparametrization attribute)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.x0"]], "x0 (gammadiscreteparametrization attribute)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.x0"]], "x0 (gammaexpparametrization attribute)": [[5, "fastdfe.parametrization.GammaExpParametrization.x0"]], "x0 (parametrization attribute)": [[5, "fastdfe.parametrization.Parametrization.x0"]], "ancestralbasestratification (class in fastdfe.parser)": [[6, "fastdfe.parser.AncestralBaseStratification"]], "basecontextstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.BaseContextStratification"]], "basetransitionstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.BaseTransitionStratification"]], "chunkedstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.ChunkedStratification"]], "contigstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.ContigStratification"]], "degeneracystratification (class in fastdfe.parser)": [[6, "fastdfe.parser.DegeneracyStratification"]], "genomepositiondependentstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.GenomePositionDependentStratification"]], "parser (class in fastdfe.parser)": [[6, "fastdfe.parser.Parser"]], "snpstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.SNPStratification"]], "snpeffstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.SnpEffStratification"]], "stratification (class in fastdfe.parser)": [[6, "fastdfe.parser.Stratification"]], "synonymystratification (class in fastdfe.parser)": [[6, "fastdfe.parser.SynonymyStratification"]], "targetsitecounter (class in fastdfe.parser)": [[6, "fastdfe.parser.TargetSiteCounter"]], "transitiontransversionstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.TransitionTransversionStratification"]], "vepstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.VEPStratification"]], "__init__() (basecontextstratification method)": [[6, "fastdfe.parser.BaseContextStratification.__init__"]], "__init__() (chunkedstratification method)": [[6, "fastdfe.parser.ChunkedStratification.__init__"]], "__init__() (degeneracystratification method)": [[6, "fastdfe.parser.DegeneracyStratification.__init__"]], "__init__() (parser method)": [[6, "fastdfe.parser.Parser.__init__"]], "__init__() (stratification method)": [[6, "fastdfe.parser.Stratification.__init__"]], "__init__() (targetsitecounter method)": [[6, "fastdfe.parser.TargetSiteCounter.__init__"]], "annotations (parser attribute)": [[6, "fastdfe.parser.Parser.annotations"]], "chunk_sizes (chunkedstratification attribute)": [[6, "fastdfe.parser.ChunkedStratification.chunk_sizes"]], "contig (basecontextstratification attribute)": [[6, "fastdfe.parser.BaseContextStratification.contig"]], "count() (targetsitecounter method)": [[6, "fastdfe.parser.TargetSiteCounter.count"]], "counter (chunkedstratification attribute)": [[6, "fastdfe.parser.ChunkedStratification.counter"]], "exclude_samples (parser attribute)": [[6, "fastdfe.parser.Parser.exclude_samples"]], "fastdfe.parser": [[6, "module-fastdfe.parser"]], "filtrations (parser attribute)": [[6, "fastdfe.parser.Parser.filtrations"]], "get_degeneracy (degeneracystratification attribute)": [[6, "fastdfe.parser.DegeneracyStratification.get_degeneracy"]], "get_type() (ancestralbasestratification method)": [[6, "fastdfe.parser.AncestralBaseStratification.get_type"]], "get_type() (basecontextstratification method)": [[6, "fastdfe.parser.BaseContextStratification.get_type"]], "get_type() (basetransitionstratification method)": [[6, "fastdfe.parser.BaseTransitionStratification.get_type"]], "get_type() (chunkedstratification method)": [[6, "fastdfe.parser.ChunkedStratification.get_type"]], "get_type() (contigstratification method)": [[6, "fastdfe.parser.ContigStratification.get_type"]], "get_type() (degeneracystratification method)": [[6, "fastdfe.parser.DegeneracyStratification.get_type"]], "get_type() (stratification method)": [[6, "fastdfe.parser.Stratification.get_type"]], "get_type() (synonymystratification method)": [[6, "fastdfe.parser.SynonymyStratification.get_type"]], "get_type() (transitiontransversionstratification method)": [[6, "fastdfe.parser.TransitionTransversionStratification.get_type"]], "get_type() (vepstratification method)": [[6, "fastdfe.parser.VEPStratification.get_type"]], "get_types() (ancestralbasestratification method)": [[6, "fastdfe.parser.AncestralBaseStratification.get_types"]], "get_types() (basecontextstratification method)": [[6, "fastdfe.parser.BaseContextStratification.get_types"]], "get_types() (basetransitionstratification method)": [[6, "fastdfe.parser.BaseTransitionStratification.get_types"]], "get_types() (chunkedstratification method)": [[6, "fastdfe.parser.ChunkedStratification.get_types"]], "get_types() (contigstratification method)": [[6, "fastdfe.parser.ContigStratification.get_types"]], "get_types() (degeneracystratification method)": [[6, "fastdfe.parser.DegeneracyStratification.get_types"]], "get_types() (stratification method)": [[6, "fastdfe.parser.Stratification.get_types"]], "get_types() (synonymystratification method)": [[6, "fastdfe.parser.SynonymyStratification.get_types"]], "get_types() (transitiontransversionstratification method)": [[6, "fastdfe.parser.TransitionTransversionStratification.get_types"]], "get_types() (vepstratification method)": [[6, "fastdfe.parser.VEPStratification.get_types"]], "include_samples (parser attribute)": [[6, "fastdfe.parser.Parser.include_samples"]], "info_tag (snpeffstratification attribute)": [[6, "fastdfe.parser.SnpEffStratification.info_tag"]], "info_tag (vepstratification attribute)": [[6, "fastdfe.parser.VEPStratification.info_tag"]], "logger (targetsitecounter attribute)": [[6, "fastdfe.parser.TargetSiteCounter.logger"]], "n (parser attribute)": [[6, "fastdfe.parser.Parser.n"]], "n_chunks (chunkedstratification attribute)": [[6, "fastdfe.parser.ChunkedStratification.n_chunks"]], "n_flanking (basecontextstratification attribute)": [[6, "fastdfe.parser.BaseContextStratification.n_flanking"]], "n_samples (targetsitecounter attribute)": [[6, "fastdfe.parser.TargetSiteCounter.n_samples"]], "n_skipped (parser attribute)": [[6, "fastdfe.parser.Parser.n_skipped"]], "n_target_sites (targetsitecounter attribute)": [[6, "fastdfe.parser.TargetSiteCounter.n_target_sites"]], "n_valid (stratification attribute)": [[6, "fastdfe.parser.Stratification.n_valid"]], "parse() (parser method)": [[6, "fastdfe.parser.Parser.parse"]], "parser (stratification attribute)": [[6, "fastdfe.parser.Stratification.parser"]], "sfs (parser attribute)": [[6, "fastdfe.parser.Parser.sfs"]], "skip_non_polarized (parser attribute)": [[6, "fastdfe.parser.Parser.skip_non_polarized"]], "stratifications (parser attribute)": [[6, "fastdfe.parser.Parser.stratifications"]], "target_site_counter (parser attribute)": [[6, "fastdfe.parser.Parser.target_site_counter"]], "spectra (class in fastdfe.spectrum)": [[7, "fastdfe.spectrum.Spectra"]], "__init__() (spectra method)": [[7, "fastdfe.spectrum.Spectra.__init__"]], "all (spectra property)": [[7, "fastdfe.spectrum.Spectra.all"]], "combine() (spectra method)": [[7, "fastdfe.spectrum.Spectra.combine"]], "copy() (spectra method)": [[7, "fastdfe.spectrum.Spectra.copy"]], "drop_empty() (spectra method)": [[7, "fastdfe.spectrum.Spectra.drop_empty"]], "drop_sparse() (spectra method)": [[7, "fastdfe.spectrum.Spectra.drop_sparse"]], "drop_zero_entries() (spectra method)": [[7, "fastdfe.spectrum.Spectra.drop_zero_entries"]], "fold() (spectra method)": [[7, "fastdfe.spectrum.Spectra.fold"]], "from_dataframe() (spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_dataframe"]], "from_dict() (spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_dict"]], "from_file() (spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_file"]], "from_list() (spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_list"]], "from_spectra() (spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_spectra"]], "from_spectrum() (spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_spectrum"]], "get_empty() (spectra method)": [[7, "fastdfe.spectrum.Spectra.get_empty"]], "has_div (spectra property)": [[7, "fastdfe.spectrum.Spectra.has_div"]], "has_dots() (spectra method)": [[7, "fastdfe.spectrum.Spectra.has_dots"]], "is_folded() (spectra method)": [[7, "fastdfe.spectrum.Spectra.is_folded"]], "k (spectra property)": [[7, "fastdfe.spectrum.Spectra.k"]], "merge_groups() (spectra method)": [[7, "fastdfe.spectrum.Spectra.merge_groups"]], "n (spectra property)": [[7, "fastdfe.spectrum.Spectra.n"]], "n_div (spectra property)": [[7, "fastdfe.spectrum.Spectra.n_div"]], "n_monomorphic (spectra property)": [[7, "fastdfe.spectrum.Spectra.n_monomorphic"]], "n_polymorphic (spectra property)": [[7, "fastdfe.spectrum.Spectra.n_polymorphic"]], "n_sites (spectra property)": [[7, "fastdfe.spectrum.Spectra.n_sites"]], "normalize() (spectra method)": [[7, "fastdfe.spectrum.Spectra.normalize"]], "plot() (spectra method)": [[7, "fastdfe.spectrum.Spectra.plot"]], "polymorphic (spectra property)": [[7, "fastdfe.spectrum.Spectra.polymorphic"]], "prefix() (spectra method)": [[7, "fastdfe.spectrum.Spectra.prefix"]], "print() (spectra method)": [[7, "fastdfe.spectrum.Spectra.print"]], "rename() (spectra method)": [[7, "fastdfe.spectrum.Spectra.rename"]], "replace_dots() (spectra method)": [[7, "fastdfe.spectrum.Spectra.replace_dots"]], "select() (spectra method)": [[7, "fastdfe.spectrum.Spectra.select"]], "sort_types() (spectra method)": [[7, "fastdfe.spectrum.Spectra.sort_types"]], "to_dataframe() (spectra method)": [[7, "fastdfe.spectrum.Spectra.to_dataframe"]], "to_dict() (spectra method)": [[7, "fastdfe.spectrum.Spectra.to_dict"]], "to_file() (spectra method)": [[7, "fastdfe.spectrum.Spectra.to_file"]], "to_list() (spectra method)": [[7, "fastdfe.spectrum.Spectra.to_list"]], "to_multi_index() (spectra method)": [[7, "fastdfe.spectrum.Spectra.to_multi_index"]], "to_numpy() (spectra method)": [[7, "fastdfe.spectrum.Spectra.to_numpy"]], "to_single_index() (spectra method)": [[7, "fastdfe.spectrum.Spectra.to_single_index"]], "to_spectra() (spectra method)": [[7, "fastdfe.spectrum.Spectra.to_spectra"]], "types (spectra property)": [[7, "fastdfe.spectrum.Spectra.types"]], "spectrum (class in fastdfe.spectrum)": [[8, "fastdfe.spectrum.Spectrum"]], "__init__() (spectrum method)": [[8, "fastdfe.spectrum.Spectrum.__init__"]], "copy() (spectrum method)": [[8, "fastdfe.spectrum.Spectrum.copy"]], "fold() (spectrum method)": [[8, "fastdfe.spectrum.Spectrum.fold"]], "from_list() (spectrum static method)": [[8, "fastdfe.spectrum.Spectrum.from_list"]], "from_polydfe() (spectrum static method)": [[8, "fastdfe.spectrum.Spectrum.from_polydfe"]], "from_polymorphic() (spectrum static method)": [[8, "fastdfe.spectrum.Spectrum.from_polymorphic"]], "has_div (spectrum property)": [[8, "fastdfe.spectrum.Spectrum.has_div"]], "is_folded() (spectrum method)": [[8, "fastdfe.spectrum.Spectrum.is_folded"]], "n (spectrum property)": [[8, "fastdfe.spectrum.Spectrum.n"]], "n_div (spectrum property)": [[8, "fastdfe.spectrum.Spectrum.n_div"]], "n_monomorphic (spectrum property)": [[8, "fastdfe.spectrum.Spectrum.n_monomorphic"]], "n_polymorphic (spectrum property)": [[8, "fastdfe.spectrum.Spectrum.n_polymorphic"]], "n_sites (spectrum property)": [[8, "fastdfe.spectrum.Spectrum.n_sites"]], "normalize() (spectrum method)": [[8, "fastdfe.spectrum.Spectrum.normalize"]], "plot() (spectrum method)": [[8, "fastdfe.spectrum.Spectrum.plot"]], "polymorphic (spectrum property)": [[8, "fastdfe.spectrum.Spectrum.polymorphic"]], "standard_kingman() (spectrum static method)": [[8, "fastdfe.spectrum.Spectrum.standard_kingman"]], "theta (spectrum property)": [[8, "fastdfe.spectrum.Spectrum.theta"]], "to_list() (spectrum method)": [[8, "fastdfe.spectrum.Spectrum.to_list"]], "to_numpy() (spectrum method)": [[8, "fastdfe.spectrum.Spectrum.to_numpy"]]}})