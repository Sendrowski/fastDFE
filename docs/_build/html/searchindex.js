Search.setIndex({"docnames": ["index", "modules/annotation", "modules/config", "modules/filtration", "modules/inference", "modules/parametrization", "modules/parser", "modules/spectra", "modules/spectrum", "reference/config", "reference/example_pendula_complex", "reference/example_pendula_simple", "reference/example_sapiens", "reference/inference", "reference/installation_python", "reference/installation_r", "reference/introduction", "reference/miscellaneous", "reference/parametrizations", "reference/parser", "reference/quickstart_python", "reference/quickstart_r", "reference/spectra"], "filenames": ["index.rst", "modules/annotation.rst", "modules/config.rst", "modules/filtration.rst", "modules/inference.rst", "modules/parametrization.rst", "modules/parser.rst", "modules/spectra.rst", "modules/spectrum.rst", "reference/config.rst", "reference/example_pendula_complex.ipynb", "reference/example_pendula_simple.ipynb", "reference/example_sapiens.ipynb", "reference/inference.ipynb", "reference/installation_python.rst", "reference/installation_r.rst", "reference/introduction.rst", "reference/miscellaneous.rst", "reference/parametrizations.ipynb", "reference/parser.ipynb", "reference/quickstart_python.ipynb", "reference/quickstart_r.ipynb", "reference/spectra.ipynb"], "titles": ["Welcome to fastDFE\u2019s documentation", "VCF Annotation", "Configuration class", "VCF Filtration", "Inference", "Parametrizations", "VCF Parsing", "Spectra class", "Spectrum class", "Configuration files", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "DFE Inference", "Installation", "Installation", "Introduction", "Miscellaneous", "DFE parametrizations", "Parsing SFS from VCF file", "Quickstart", "Quickstart", "Working with SFS"], "terms": {"i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "packag": [0, 14, 15, 16], "fast": [0, 9], "flexibl": [0, 5, 16], "hierarch": 0, "infer": [0, 2, 3, 6, 10, 11, 16, 18, 19, 22], "distribut": [0, 4, 5, 6, 16, 19], "fit": [0, 4, 13, 16], "effect": [0, 4, 16], "dfe": [0, 2, 3, 4, 5, 6, 9, 10, 11, 16, 19, 20, 21, 22], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 16, 17, 18, 20, 21, 22], "site": [0, 1, 2, 3, 4, 6, 7, 8, 10, 12, 13, 16, 19, 20, 21, 22], "frequenc": [0, 2, 6, 8, 16, 19, 22], "spectra": [0, 1, 2, 3, 4, 6, 8, 10, 12, 13, 16, 19], "sf": [0, 2, 4, 6, 7, 8, 9, 10, 11, 13, 16, 17, 20, 21], "introduct": 0, "motiv": 0, "how": [0, 4, 13, 18, 19], "work": [0, 13], "featur": 0, "instal": 0, "pypi": 0, "conda": 0, "quickstart": 0, "basic": [0, 4], "bootstrap": [0, 2, 4, 9, 11, 16, 17, 18], "serial": [0, 4, 16], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 19, 22], "fix": [0, 2, 4, 5, 7, 9], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 16, 20], "nest": [0, 4, 7, 11, 16], "model": [0, 2, 4, 5, 9, 11, 16, 18, 20, 21], "comparison": [0, 4, 11, 16, 20, 21], "visual": [0, 4, 7, 16, 19], "likelihood": [0, 2, 4, 9, 10, 11, 16, 18, 20, 21], "fold": [0, 1, 4, 6, 7, 8, 19], "joint": [0, 4, 6, 16], "covari": [0, 2, 4, 9, 10, 16], "configur": [0, 6, 13, 16, 21], "file": [0, 1, 2, 3, 4, 6, 7, 8, 12, 13, 14, 16, 17, 20, 21, 22], "usag": [0, 4, 6, 16], "json": [0, 2, 4, 13, 20, 21], "exampl": [0, 6, 13, 17, 18, 19, 20, 21], "parametr": [0, 2, 4, 9, 13, 16, 20, 21], "subtyp": [0, 4], "group": [0, 7], "prefix": [0, 7], "pars": [0, 2, 3, 10, 12, 13, 17], "vcf": [0, 10, 12, 13, 16, 17], "simpl": [0, 4], "stratif": [0, 6, 10, 12, 13, 16], "annot": [0, 3, 6, 12, 16], "degeneraci": [0, 1, 6], "synonymi": [0, 1, 6], "ancestr": [0, 1, 3, 4, 6, 13, 22], "allel": [0, 1, 3, 6, 7, 13, 16, 22], "filtrat": [0, 6, 12], "miscellan": 0, "log": [0, 2, 4, 5, 9, 10, 11, 13, 18, 20], "debug": 0, "seed": [0, 1, 2, 3, 4, 6, 9], "baseinfer": [0, 2, 4, 9, 10, 11, 13, 17, 18, 20, 21], "default_x0": [0, 4], "default_bound": [0, 4], "default_scal": [0, 4], "default_opts_ml": [0, 4], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8], "sfs_neut": [0, 2, 4, 9, 10, 11, 13, 18, 20, 21], "sfs_sel": [0, 2, 4, 9, 10, 11, 13, 18, 20, 21], "n": [0, 2, 4, 6, 7, 8, 10, 12, 13, 19], "discret": [0, 4, 5, 10, 11, 13, 20, 21], "theta": [0, 4, 8], "params_ml": [0, 4], "sfs_mle": [0, 4], "n_run": [0, 2, 4, 9, 11, 13, 20], "result": [0, 2, 4, 5, 11, 13, 16, 19], "do_bootstrap": [0, 2, 4, 9, 11, 13, 18], "n_bootstrap": [0, 2, 4, 9, 11], "parallel": [0, 2, 4, 9, 17], "fixed_param": [0, 2, 4, 5, 9, 10, 13], "scale": [0, 2, 4, 5, 9, 13], "bound": [0, 2, 4, 5, 9, 10, 11, 13, 20, 21], "optim": [0, 2, 4, 5, 9, 10, 11, 13, 16, 17, 20, 21], "x0": [0, 2, 4, 5, 9], "bootstrap_result": [0, 4], "l2_residu": [0, 4], "rng": [0, 4], "execution_tim": [0, 4], "lock": [0, 4], "get_fixed_param_nam": [0, 4], "check_fixed_params_exist": [0, 4], "raise_if_lock": [0, 4], "run_if_requir": [0, 4], "run_if_required_wrapp": [0, 4], "run": [0, 2, 4, 9, 10, 11, 13, 14, 17, 18, 20, 21], "get_count": [0, 4], "evaluate_likelihood": [0, 4], "assign_result": [0, 4], "report_result": [0, 4], "update_properti": [0, 4], "add_alpha_to_bootstrap": [0, 4], "resample_sf": [0, 4], "run_bootstrap_sampl": [0, 4], "get_scales_linear": [0, 4], "get_bounds_linear": [0, 4], "model_sf": [0, 4], "adjust_polar": [0, 4], "add_demographi": [0, 4], "plot_continu": [0, 4], "plot_bucket_s": [0, 4], "plot_interval_dens": [0, 4], "plot_sfs_comparison": [0, 4, 11, 13, 20, 21], "plot_observed_sf": [0, 4], "plot_al": [0, 4], "get_errors_discretized_df": [0, 4], "plot_inferred_paramet": [0, 4, 11, 13], "plot_inferred_parameters_boxplot": [0, 4], "plot_likelihood": [0, 4, 13], "lrt": [0, 4, 13, 16], "compare_nested_likelihood": [0, 4], "compare_nested_model": [0, 4], "plot_nested_likelihood": [0, 4, 11, 13], "plot_discret": [0, 4, 10, 11, 13, 18, 20, 21], "get_alpha": [0, 4], "alpha": [0, 4, 13], "get_bootstrap_param": [0, 4], "get_bootstrap_param_nam": [0, 4], "get_optimized_param_nam": [0, 4], "get_n_optim": [0, 4], "create_config": [0, 4, 9], "from_config": [0, 4, 9], "from_config_fil": [0, 4], "get_summari": [0, 4, 13, 20, 21], "get_x0": [0, 4], "param_nam": [0, 4, 5], "to_json": [0, 2, 4], "from_fil": [0, 2, 4, 7, 9, 13, 20, 21, 22], "from_json": [0, 2, 4, 9], "get_cis_params_ml": [0, 4], "get_discret": [0, 4], "to_fil": [0, 2, 4, 7, 9, 13, 20, 21, 22], "jointinfer": [0, 2, 4, 10, 13, 17], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 16, 19, 22], "params_mle_raw": [0, 4], "shared_param": [0, 2, 4, 9, 10, 13], "x0_cov": [0, 4], "marginal_infer": [0, 4, 13], "joint_infer": [0, 2, 4], "check_shared_param": [0, 4], "check_no_shared_params_fix": [0, 4], "get_shared_param_nam": [0, 4], "add_covariates_as_shar": [0, 4], "determine_unshared_covari": [0, 4], "run_margin": [0, 4], "marginals_without_al": [0, 4], "run_joint": [0, 4], "joint_inference_makes_sens": [0, 4], "run_joint_without_covari": [0, 4], "perform_lrt_covari": [0, 4, 13], "add_covari": [0, 4], "bootstrap_if_requir": [0, 4], "run_joint_bootstrap_sampl": [0, 4], "perform_lrt_shar": [0, 4, 13], "get_infer": [0, 4], "get_l2_residu": [0, 4], "get_errors_params_ml": [0, 4], "get_stats_discret": [0, 4], "compute_histogram": [0, 4], "sharedparam": [0, 2, 4, 10, 13], "param": [0, 2, 4, 5, 9, 10, 13], "valu": [0, 1, 2, 4, 5, 9, 11, 12, 13, 17], "callback": [0, 4, 6, 13], "bounds_scal": [0, 4], "appli": [0, 1, 3, 4, 6, 16], "apply_default": [0, 4], "class": [0, 1, 3, 4, 5, 6, 9, 19, 20, 21, 22], "config": [0, 2, 4, 9], "updat": [0, 2, 4], "parse_polydfe_init_fil": [0, 2], "create_polydfe_init_fil": [0, 2], "parse_polydfe_sfs_config": [0, 2], "create_polydfe_sfs_config": [0, 2], "to_dict": [0, 2, 7], "to_yaml": [0, 2], "from_dict": [0, 2, 7], "from_yaml": [0, 2], "get_polydfe_model": [0, 2], "submodel": [0, 5], "get_pdf": [0, 5], "get_cdf": [0, 5], "gammaexpparametr": [0, 2, 4, 5, 9, 11, 13, 18, 20, 21], "displacedgammaparametr": [0, 5, 18], "gammadiscreteparametr": [0, 5, 18], "discreteparametr": [0, 5, 18], "interv": [0, 2, 4, 5, 11, 13, 18, 20], "interval_s": [0, 5], "k": [0, 5, 7], "discretefractionalparametr": [0, 5], "to_nomin": [0, 5], "to_fract": [0, 5], "spectrum": [0, 2, 4, 6, 7, 11, 13, 16, 18, 20, 21, 22], "n_site": [0, 7, 8], "n_div": [0, 7, 8], "has_div": [0, 7, 8], "n_monomorph": [0, 7, 8], "polymorph": [0, 4, 6, 7, 8], "n_polymorph": [0, 7, 8], "to_list": [0, 7, 8], "to_numpi": [0, 7, 8], "is_fold": [0, 7, 8, 22], "normal": [0, 5, 7, 8, 11, 13, 20], "copi": [0, 7, 8, 12], "from_polymorph": [0, 8], "from_list": [0, 7, 8], "from_polydf": [0, 8], "plot": [0, 4, 6, 7, 8, 11, 13, 18, 19, 20, 21, 22], "standard_kingman": [0, 8, 22], "to_spectra": [0, 7], "to_datafram": [0, 7], "to_multi_index": [0, 7], "to_single_index": [0, 7], "get_empti": [0, 7], "merge_group": [0, 7, 10, 13, 22], "has_dot": [0, 7], "replace_dot": [0, 7], "all": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 22], "combin": [0, 7, 22], "from_datafram": [0, 7], "from_spectra": [0, 7, 22], "from_spectrum": [0, 7], "drop_empti": [0, 7], "drop_zero_entri": [0, 7], "drop_spars": [0, 7], "renam": [0, 7], "print": [0, 7], "sort_typ": [0, 7], "parser": [0, 1, 6, 10, 12, 13, 16, 17, 19, 22], "n_no_typ": [0, 6], "get_typ": [0, 6], "basecontextstratif": [0, 6], "n_flank": [0, 6], "alias": [0, 1, 3, 6, 12], "contig": [0, 1, 3, 6], "basetransitionstratif": [0, 6], "ancestralbasestratif": [0, 1, 6, 10, 13, 19], "transitiontransversionstratif": [0, 6], "degeneracystratif": [0, 1, 6, 10, 12, 13, 19], "get_degeneraci": [0, 6], "synonymystratif": [0, 1, 6, 19], "vepstratif": [0, 6], "info_tag": [0, 6], "snpeffstratif": [0, 6], "genomepositiondependentstratif": [0, 6], "contigstratif": [0, 6], "chunkedstratif": [0, 6], "n_chunk": [0, 6], "chunk_siz": [0, 6], "counter": [0, 6], "n_target_sit": [0, 1, 6, 19], "sampl": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 20], "samples_mask": [0, 6], "skip_non_polar": [0, 6], "n_skip": [0, 1, 6], "reader": [0, 6], "logger": [0, 1], "n_annot": [0, 1], "annotate_sit": [0, 1], "count_target_sit": [0, 1, 6], "ancestralalleleannot": [0, 1], "maximumparsimonyannot": [0, 1, 6, 12, 19], "degeneracyannot": [0, 1, 6, 12, 19], "cd": [0, 1, 3, 12], "cd_next": [0, 1], "cd_prev": [0, 1], "mismatch": [0, 1], "error": [0, 1, 4, 17, 19], "synonymyannot": [0, 1, 6, 19], "vep_mismatch": [0, 1], "snpeff_mismatch": [0, 1], "n_vep_comparison": [0, 1], "n_snpeff_comparison": [0, 1], "mutat": [0, 1, 2, 4, 5, 6, 7, 8, 13, 19, 22], "is_synonym": [0, 1], "n_filter": [0, 3], "filter_sit": [0, 3], "snpfiltrat": [0, 3], "snvfiltrat": [0, 3], "polyallelicfiltr": [0, 3, 6, 10, 19], "allfiltr": [0, 3], "nofiltr": [0, 3], "codingsequencefiltr": [0, 3, 6, 12, 19], "n_process": [0, 3], "deviantoutgroupfiltr": [0, 1, 3, 19], "ingroup": [0, 1, 3], "outgroup": [0, 1, 3], "strict_mod": [0, 3], "ingroup_mask": [0, 3], "outgroup_mask": [0, 3], "create_mask": [0, 3], "biasedgcconversionfiltr": [0, 3, 19], "filter": [0, 1, 3, 6, 10, 12, 19], "output": [0, 1, 3], "is_filt": [0, 3], "index": [0, 4, 6, 7, 12, 22], "an": [1, 2, 3, 4, 5, 6, 9, 13, 14, 17, 19], "them": [1, 3, 22], "fastdf": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "object": [1, 2, 3, 4, 5, 6, 7, 9, 11, 13, 16, 18, 20, 21, 22], "creat": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 18, 19, 20, 21, 22], "new": [1, 3, 7, 13, 14], "instanc": [1, 3, 4, 6], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 20, 21, 22], "option": [1, 2, 3, 4, 6, 7, 8, 9, 13, 19], "int": [1, 2, 3, 4, 6, 7, 8], "number": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 21, 22], "variant": [1, 3, 6], "cyvcf2": [1, 3, 6], "singl": [1, 3, 4, 5, 7, 13, 20, 21, 22], "return": [1, 2, 3, 4, 5, 6, 7, 8, 12], "static": [1, 2, 4, 5, 7, 8], "str": [1, 2, 3, 4, 5, 6, 7, 8], "count": [1, 2, 4, 6, 7, 8, 10, 12, 13, 19, 20, 21, 22], "target": [1, 2, 6, 7, 8, 19], "gff": [1, 3, 6, 12, 19], "path": [1, 2, 4, 6], "possibli": [1, 6], "gzip": [1, 6], "url": [1, 3, 6], "dict": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13], "per": [1, 6], "chromosom": [1, 6, 12], "abc": [1, 6], "list": [1, 2, 3, 4, 5, 6, 7, 8, 19], "none": [1, 2, 3, 4, 6, 7, 8], "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "maximum": [1, 3, 5, 6, 13, 16, 18, 19, 20, 21], "parsimoni": [1, 19], "info": [1, 3, 6, 17, 19], "field": [1, 3, 6, 16, 19], "aa": [1, 3, 6, 19], "ad": [1, 4, 13, 22], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 16, 17, 19, 20, 21, 22], "hold": [1, 5, 7, 8, 13, 20, 21, 22], "To": [1, 4, 13, 14, 15, 16, 18, 19, 22], "note": [1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 19, 20, 21], "reliabl": [1, 16], "wai": [1, 14, 15, 18, 20, 21], "determin": [1, 4, 5, 6, 19], "so": [1, 4, 5, 6, 7, 8], "recommend": [1, 2, 3, 4, 5, 6, 14], "thi": [1, 2, 3, 4, 5, 6, 9, 10, 11, 13, 14, 16, 17, 19, 20, 21], "togeth": [1, 6, 19], "misidentif": [1, 4, 13], "ep": [1, 4, 9, 10, 11, 13, 20], "altogeth": 1, "altern": [1, 6, 15, 19, 20, 21], "you": [1, 4, 6, 9, 14, 15, 17, 18, 19], "can": [1, 3, 4, 5, 6, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "out": [1, 2, 3, 4, 6, 10, 11, 12, 13, 19, 20, 21, 22], "where": [1, 3, 4, 5, 13, 20, 21], "major": [1, 3, 13], "among": [1, 4, 9, 13, 16], "doe": [1, 2, 4, 5], "coincid": 1, "consid": [1, 2, 3, 4, 6, 11, 13, 19, 20], "when": [1, 3, 4, 9, 13, 17, 22], "If": [1, 4, 6, 17], "ar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 22], "gff_file": [1, 3, 6, 12], "fasta_fil": [1, 6, 12], "cach": [1, 3, 4, 6, 12], "bool": [1, 2, 3, 4, 6, 7, 8], "true": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 18, 22], "gffhandler": [1, 3], "fastahandl": [1, 6], "we": [1, 2, 3, 4, 5, 6, 7, 9, 13, 15, 16, 18, 19, 20, 21, 22], "look": [1, 4, 6, 9, 19], "each": [1, 4, 6, 7, 13, 22], "codon": 1, "code": [1, 3, 6, 19], "also": [1, 4, 5, 6, 9, 13, 15, 17, 18, 19, 20, 21, 22], "mono": [1, 3, 6], "add": [1, 4, 8], "degeneracy_info": 1, "0": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 19, 20, 22], "2": [1, 7, 9, 11, 12, 13, 22], "4": [1, 5, 6, 13], "extra": 1, "inform": [1, 4, 6, 13, 19, 22], "about": [1, 4, 10, 11, 13, 20], "respect": [1, 5, 13, 19], "fasta": [1, 3, 6, 12], "dictionari": [1, 2, 3, 4, 6, 7], "e": [1, 3, 4, 5, 6, 7, 9, 13], "g": [1, 3, 6, 10, 13, 19], "chr1": [1, 3, 6], "1": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 20, 22], "match": [1, 3, 6], "name": [1, 2, 3, 4, 5, 6, 7, 14], "whether": [1, 2, 3, 4, 6, 7, 8, 9, 13], "download": [1, 3, 6], "seri": [1, 3, 7], "current": [1, 3, 6, 19], "sequenc": [1, 3, 6, 19], "closest": [1, 3], "downstream": [1, 3], "follow": [1, 5, 14, 17], "preced": 1, "seqrecord": [1, 6], "could": [1, 6, 13], "correctli": [1, 4], "were": [1, 4, 6, 7], "skip": [1, 6], "becaus": [1, 6], "thei": [1, 5, 6, 7], "region": [1, 6, 16], "runtim": 1, "v": [1, 3, 4], "synonym": [1, 4, 6, 13, 16, 19], "non": [1, 4, 5, 6, 7, 8, 13, 16, 19], "statu": 1, "present": [1, 3, 9], "synonymous_info": 1, "sinc": [1, 6], "cannot": [1, 6], "monomorph": [1, 2, 3, 4, 6, 7, 8, 13, 19, 20, 21], "dynam": [1, 6], "up": [1, 5, 7, 8, 13], "contain": [1, 6, 7, 13, 19], "broadcast": 1, "set": [1, 5, 6, 7, 9, 12, 13, 18, 22], "did": [1, 3, 11, 13, 20], "vep": [1, 6, 19], "math": 1, "provid": [1, 4, 5, 6, 13, 16, 19, 22], "snpeff": [1, 6, 19], "concord": 1, "alt": [1, 3], "po": 1, "given": [1, 2, 3, 4, 5, 6, 7], "posit": [1, 3, 5], "codon1": 1, "codon2": 1, "check": [1, 3, 4, 7, 8, 13], "two": [1, 4, 5, 7, 13, 22], "first": [1, 2, 4, 7, 13, 15, 20, 21], "second": [1, 4], "fals": [1, 2, 3, 4, 6, 7, 8, 13], "otherwis": [1, 3, 4, 5, 6, 7, 8], "info_ancestr": [1, 3, 6], "max_sit": [1, 3, 6], "inf": [1, 3, 4, 6, 9, 10, 11, 13, 20, 21], "vcfhandler": [1, 3, 6], "support": [1, 5, 6, 13, 16, 19], "tag": [1, 6, 19], "random": [1, 2, 3, 4, 6, 9, 16, 17], "gener": [1, 2, 3, 4, 5, 6, 9], "polydfe_spectra_config": 2, "polydfe_init_fil": 2, "polydfe_init_file_id": 2, "union": [2, 3, 4, 6, 7], "intervals_del": [2, 4], "float": [2, 4, 5, 7, 8], "100000000": [2, 4], "1e": [2, 4], "05": [2, 4, 5, 10, 19], "1000": [2, 4, 5], "intervals_ben": [2, 4], "10000": [2, 4, 9], "integration_mod": [2, 4], "liter": [2, 4, 6], "midpoint": [2, 4, 10, 11, 13, 20], "quad": [2, 4], "linear": [2, 4, 5, 9, 10, 11, 13, 16, 20], "tupl": [2, 4], "lin": [2, 4, 5, 9, 13], "symlog": [2, 4, 9], "loss_typ": [2, 4, 9], "l2": [2, 4], "opts_ml": [2, 4, 9], "10": [2, 4, 5, 6, 9, 10, 11, 12, 13, 19, 20, 21, 22], "100": [2, 4, 5, 9, 10, 11, 12, 13, 18, 19, 20], "kwarg": [2, 4, 5], "polydf": [2, 5, 8, 16], "init": 2, "id": 2, "neutral": [2, 4, 6, 9, 10, 11, 12, 13, 16, 19, 20, 21], "requir": [2, 4, 5, 6, 13, 17, 19, 20, 21], "specifi": [2, 3, 4, 6, 7, 8, 9, 13, 19, 20, 21, 22], "order": [2, 3, 4, 6, 13, 18], "rate": [2, 4, 6, 13], "select": [2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 19, 20, 21], "integr": [2, 4, 10, 11, 13, 16, 20], "deleteri": [2, 4, 5, 13], "space": [2, 4, 5], "benefici": [2, 4, 5, 6, 13, 16, 19, 22], "mode": [2, 4, 5], "version": [2, 4], "initi": [2, 3, 4, 5, 6, 7, 8, 9, 13, 17], "form": [2, 4, 13, 20, 21], "lower": [2, 4, 5, 10, 11, 13, 20], "upper": [2, 4, 10, 11, 13, 20], "loss": [2, 4], "function": [2, 4, 5, 10, 11, 13, 15, 16, 20], "independ": [2, 4, 9, 11], "best": [2, 4, 16], "one": [2, 3, 4, 5, 9, 13, 20, 21], "chosen": [2, 4], "increas": [2, 3, 4, 11, 13, 20], "produc": [2, 4, 5, 13], "good": [2, 4, 5, 13, 20, 21], "share": [2, 4, 5, 9, 10, 13, 16], "do": [2, 3, 4, 9, 13, 14, 17], "automat": [2, 13], "addit": [2, 4, 6], "keyword": [2, 4, 7, 8], "argument": [2, 4, 5, 7, 8, 13, 19], "ignor": [2, 4, 7, 8], "data": [2, 4, 7, 8, 13, 16, 18, 22], "defin": [2, 4, 6, 19], "ones": [2, 5], "held": [2, 4, 9, 13], "dure": [2, 11, 13, 19, 20], "size": [2, 4, 5, 6, 7, 8, 13, 19, 20, 22], "repres": 2, "represent": [2, 5, 7], "string": [2, 4, 7, 22], "yaml": [2, 9, 16], "save": [2, 4, 7, 8, 13, 20, 21, 22], "load": [2, 4, 7, 12, 15], "get": [2, 4, 5, 6, 7, 8, 20, 21, 22], "correspond": [2, 5, 6, 19, 22], "certain": 3, "criteria": 3, "didn": [3, 6], "t": [3, 4, 6, 10, 12, 13, 19], "pass": [3, 4, 5, 7, 8, 13, 19, 20, 21], "should": [3, 4, 5, 6, 9], "kept": 3, "onli": [3, 6, 8, 9, 13, 18, 19], "keep": 3, "snp": 3, "includ": [3, 4, 5, 6, 8, 10, 12, 13, 16, 19, 22], "discard": 3, "morphic": 3, "indel": 3, "mnp": 3, "poli": [3, 6], "don": 3, "explicitli": 3, "rather": [3, 5, 18], "reli": [3, 19], "test": [3, 4, 13, 16, 19], "purpos": 3, "ani": [3, 4, 6, 13], "find": [3, 9, 13, 20, 21], "frequent": 3, "By": [3, 4, 5, 6, 13, 17, 19, 20, 21], "unnecessari": 3, "avoid": [3, 13, 14, 19], "speed": [3, 16], "assum": [3, 4, 6, 16], "here": [3, 4, 6, 8, 9, 19, 22], "within": [3, 10, 11, 13, 14, 16, 20], "sort": [3, 7], "ascend": 3, "enclos": 3, "process": [3, 10, 12, 19], "differ": [3, 4, 5, 6, 9, 13, 16, 17, 18], "construct": 3, "default": [3, 4, 5, 6, 13, 14, 17, 18, 19, 20, 21], "ndarrai": [3, 4, 5, 6, 7, 8], "found": [3, 4, 13], "mask": [3, 6], "retain": 3, "A": [3, 5, 6, 9, 10, 12, 13, 15, 19], "c": [3, 5, 10, 13, 19, 21], "substitut": [3, 4, 13, 16], "unaffect": 3, "bias": 3, "gene": 3, "convers": 3, "see": [3, 4, 9, 12, 13, 17, 18, 19, 22], "citgb": 3, "alwai": 3, "most": [3, 5, 6, 9], "bi": [3, 6], "pouyet": 3, "et": [3, 16], "al": [3, 16], "background": 3, "affect": [3, 13, 16, 18], "more": [3, 4, 9, 13, 16, 17, 19], "than": [3, 4, 5, 6, 7, 13], "95": [3, 13], "human": [3, 6], "genom": [3, 10, 16, 19], "bia": 3, "demograph": 3, "elif": 3, "7": [3, 22], "e36317": 3, "2018": 3, "remov": [3, 4, 7], "iter": [3, 6, 8, 10, 11, 13, 20], "base_infer": [4, 21], "abstractinfer": 4, "import": [4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "177130": [4, 9, 11, 13, 18, 20, 21], "997": [4, 9, 11, 13, 18, 20, 21], "441": [4, 9, 11, 13, 18, 20, 21], "228": [4, 9, 11, 13, 18, 20, 21], "156": [4, 9, 11, 13, 18, 20, 21], "117": [4, 9, 11, 13, 18, 20, 21], "114": [4, 9, 11, 13, 18, 20, 21], "83": [4, 9, 11, 13, 18, 20, 21], "105": [4, 9, 11, 13, 18, 20, 21], "109": [4, 6, 9, 11, 12, 13, 18, 20, 21], "652": [4, 9, 11, 13, 18, 20, 21], "797939": [4, 9, 11, 13, 18, 20, 21], "1329": [4, 9, 11, 13, 18, 20, 21], "499": [4, 9, 11, 13, 18, 20, 21], "265": [4, 9, 11, 13, 18, 20, 21], "162": [4, 9, 11, 13, 18, 20, 21], "104": [4, 9, 11, 13, 18, 20, 21], "90": [4, 9, 10, 11, 13, 18, 20, 21], "94": [4, 9, 11, 13, 18, 20, 21], "119": [4, 9, 11, 13, 18, 20, 21], "794": [4, 9, 11, 13, 18, 20, 21], "connect": 4, "15": 4, "mle": [4, 10, 11, 13, 16, 20, 21], "attribut": 4, "start": [4, 10, 12, 19, 20, 21], "stop": 4, "n_interv": 4, "popul": 4, "coeffici": [4, 5, 13], "log10": 4, "same": [4, 5, 7, 16, 19], "dfeparametr": 4, "both": [4, 5, 6, 13], "appear": [4, 13, 18], "mainli": 4, "intend": 4, "intern": 4, "estim": [4, 8, 10, 11, 13, 16, 18, 20, 21], "mai": [4, 5], "after": [4, 10, 11, 13, 17, 20], "ml": 4, "control": 4, "perform": [4, 9, 13, 20, 21], "optimizeresult": 4, "numer": [4, 9, 11, 13, 19, 20], "datafram": [4, 7, 12], "norm": 4, "minu": 4, "observ": [4, 5, 13, 16, 20, 21], "total": [4, 5, 6, 7, 8, 10, 12, 19], "execut": 4, "time": [4, 9, 16], "itself": [4, 13], "valid": [4, 6, 10, 12, 19], "rais": [4, 6], "except": 4, "arg": 4, "yet": 4, "func": 4, "decor": 4, "pbar": 4, "show": [4, 7, 8, 13, 18], "progress": [4, 13, 17], "bar": [4, 13, 17], "evalu": [4, 10, 11, 13, 20], "scipi": 4, "_optim": 4, "assign": 4, "properti": [4, 6, 7, 8, 9, 19, 22], "its": [4, 6, 16], "entri": [4, 7, 13, 20, 21], "self": [4, 7], "n_sampl": [4, 13, 20], "update_likelihood": 4, "mean": [4, 5, 13], "resampl": 4, "poisson": [4, 16], "rerun": 4, "procedur": [4, 5], "take": [4, 5, 6, 17], "close": 4, "arrai": [4, 5, 7, 8, 13], "numpi": [4, 5, 7, 8, 13], "adjust": [4, 6, 11, 13, 20], "polar": [4, 6, 19], "counts_sel": 4, "demographi": [4, 16], "counts_neut": 4, "perturb": 4, "rel": [4, 6], "standard": [4, 8, 16, 17], "coalesc": 4, "confidence_interv": 4, "ci_level": 4, "bootstrap_typ": 4, "percentil": 4, "bca": 4, "scale_dens": 4, "titl": [4, 7, 8], "kwargs_legend": [4, 7, 8], "prop": [4, 7, 8], "8": [4, 7, 8, 13], "ax": [4, 7, 8, 11, 13, 19, 20, 22], "matplotlib": [4, 7, 8, 10, 11, 13, 22], "_ax": [4, 7, 8], "continu": 4, "special": 4, "constant": [4, 5], "np": [4, 13], "pdf": [4, 5], "due": [4, 5, 13], "logarithm": 4, "x": [4, 5], "axi": 4, "wrong": 4, "intuit": 4, "mass": [4, 5], "howev": [4, 5, 6, 14, 19, 22], "better": [4, 13], "densiti": [4, 5], "ha": [4, 5, 9, 13, 20, 21], "disadvantag": 4, "now": [4, 13, 14, 20, 21], "chang": [4, 5, 9, 16, 17], "even": [4, 9], "warp": 4, "confid": [4, 5, 11, 13, 18, 20], "level": [4, 7, 13, 17, 18], "y": 4, "boundari": 4, "yield": 4, "shape": [4, 5, 7, 16, 18], "bin": [4, 5, 22], "plt": [4, 7, 8, 10, 11, 13, 22], "legend": [4, 7, 8], "bucket": 4, "appropri": 4, "interval_label": 4, "color": 4, "c0": [4, 13], "although": [4, 8, 19], "similar": [4, 5, 18], "label": [4, 18], "sfs_type": 4, "use_subplot": [4, 7], "show_monomorph": [4, 7, 8], "subplot": [4, 7, 11, 13, 22], "bunch": 4, "loc": [4, 12], "right": 4, "valueerror": 4, "scatter": 4, "ll_simpl": 4, "ll_complex": 4, "df": 4, "ratio": [4, 13, 16], "complex": [4, 13, 16], "degre": 4, "freedom": 4, "p": [4, 6, 10, 11, 13, 18, 19, 21], "": [4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 18, 19, 20, 21], "need": [4, 7, 9, 13, 16, 18, 20, 21], "proper": [4, 15], "subset": [4, 13], "compar": [4, 11, 13], "variou": [4, 6], "accur": [4, 16, 19], "matrix": 4, "remove_empti": 4, "transpos": 4, "cmap": 4, "empti": [4, 7], "row": 4, "column": [4, 7], "colormap": 4, "proport": [4, 13, 16], "calcul": [4, 8], "classmethod": 4, "summari": [4, 13, 16, 20, 21], "inferenceresult": 4, "unseri": [4, 13, 20, 21], "include_diverg": 4, "enabl": [4, 19], "sever": [4, 13, 19], "pendula": [4, 9, 13, 18], "pubescen": [4, 9, 13], "172528": [4, 9, 13], "3612": [4, 9, 13], "1359": [4, 9, 13], "790": [4, 9, 13], "584": [4, 9, 13], "427": [4, 9, 13], "325": [4, 9, 13], "234": [4, 9, 13], "166": [4, 9, 13], "76": [4, 9, 13], "31": [4, 9, 10, 13], "791106": [4, 9, 13], "5326": [4, 9, 13], "1741": [4, 9, 13], "1005": [4, 9, 13], "756": [4, 9, 13], "546": [4, 9, 13], "416": [4, 9, 13], "294": [4, 9, 13], "177": [4, 9, 13], "41": [4, 9, 10, 13, 19], "diverg": [4, 7, 8], "origin": [4, 5, 22], "befor": 4, "unpack": 4, "expand": 4, "margin": [4, 10, 13], "without": [4, 6], "make": [4, 5, 13, 16, 20, 21], "sens": 4, "devoid": 4, "against": [4, 19], "In": [4, 6, 13, 16, 19, 20, 21], "across": [4, 9], "low": 4, "indic": [4, 5, 13], "signific": [4, 13, 16], "improv": [4, 13, 16], "access": [4, 13, 19, 22], "call": [4, 9, 14], "accuraci": 4, "wa": [4, 7, 8, 19], "previous": 4, "won": 4, "have": [4, 5, 6, 7, 9, 18, 22], "statist": 4, "comput": [4, 5, 9], "done": [4, 6, 13, 19], "product": [4, 13], "achiev": [4, 13, 19], "justifi": 4, "difficult": 4, "properli": 4, "conserv": [4, 16], "report": 4, "might": [4, 9, 10, 11, 13, 19, 20], "larger": [4, 5, 18], "what": [4, 13], "realli": 4, "deseri": 4, "longer": 4, "other": [4, 5, 7, 9, 13, 14, 18], "thing": [4, 13], "pleas": 4, "refer": [4, 6, 13, 19, 22], "residu": 4, "over": [4, 5, 6, 7, 9, 16, 22], "jointli": [4, 13], "pd": 4, "abstract_infer": 4, "util": [4, 19, 22], "method": [4, 19, 22], "uniqu": 4, "panda": [4, 7, 12], "core": [4, 7, 9], "frame": [4, 7], "avail": [4, 6, 9, 19, 22], "s_d": [4, 5, 9, 10, 11, 13, 20], "callabl": [4, 5, 6], "0001": [4, 5, 10, 11, 13, 20], "induc": 4, "relationship": [4, 13], "mani": 4, "modifi": [4, 13], "introduc": [4, 13, 16], "scale_valu": 4, "detail": [4, 13], "custom": [4, 6, 13, 19], "input": 4, "implement": [5, 16, 18, 19], "highli": [5, 6], "dele": 5, "full": 5, "kind": 5, "some": [5, 6, 7, 13, 16, 18, 19], "either": [5, 6], "abstract": [5, 6], "probabl": 5, "accept": 5, "cumul": 5, "mixtur": 5, "gamma": 5, "exponenti": 5, "phi": 5, "b": [5, 9, 10, 11, 13, 18, 20, 21], "p_b": [5, 9, 10, 11, 13, 20], "s_b": [5, 9, 10, 11, 13, 20], "f_": 5, "cdot": 5, "mathbf": 5, "_": [5, 7], "f_e": 5, "geq": 5, "m": 5, "denot": [5, 13], "often": [5, 6, 22], "been": [5, 13, 20, 21], "multi": [5, 7], "modal": 5, "neg": [5, 13], "amount": 5, "accommod": 5, "100000": [5, 10, 13], "01": [5, 10, 12, 13, 18], "5": 5, "zero": [5, 7, 13], "cdf": 5, "reflect": 5, "displac": 5, "hat": 5, "s_": 5, "max": 5, "leq": 5, "less": [5, 22], "while": [5, 19], "fewer": [5, 6, 7], "It": [5, 22], "allow": [5, 6, 15], "pure": [5, 13], "sub": 5, "s_max": 5, "s_mean": 5, "001": 5, "case": [5, 6, 9, 19], "d": 5, "6": 5, "constructor": 5, "s_1": 5, "s_2": 5, "dot": [5, 7], "s_k": 5, "That": 5, "sum_": 5, "s_i": 5, "c_i": 5, "b_i": 5, "width": 5, "advantag": 5, "impos": 5, "For": [5, 9, 13, 19, 22], "reason": [5, 6, 13, 20, 21], "fine": 5, "those": 5, "well": [5, 6, 9, 13, 19], "effici": [5, 16], "re": [5, 13], "sure": [5, 13, 20, 21], "sum": [5, 7], "infinit": 5, "s1": 5, "s2": 5, "sk": 5, "_1": 5, "_2": 5, "ith": 5, "left": [5, 9], "_i": 5, "j": 5, "s_j": 5, "prefer": 5, "constraint": 5, "convert": [5, 7, 8], "fraction": 5, "s0": 5, "invert": 5, "oper": 5, "back": 5, "nomin": 5, "extract": [6, 16], "stratifi": [6, 13, 19, 22], "possibl": [6, 16], "context": 6, "flank": 6, "attempt": 6, "middl": 6, "abl": 6, "transit": [6, 19], "notypeexcept": 6, "subclass": [6, 18], "ancestralannot": 6, "transvers": 6, "custom_callback": 6, "side": 6, "degener": 6, "facilit": [6, 9, 16], "csq": 6, "ann": 6, "chunk": 6, "roughli": 6, "equal": [6, 7], "window": 6, "seen": 6, "far": 6, "retriev": [6, 19], "correct": [6, 16, 19], "littl": [6, 19], "21": [6, 12, 19], "http": [6, 12], "ftp": [6, 12], "1000genom": [6, 12], "ebi": [6, 12], "ac": [6, 12], "uk": [6, 12], "vol1": [6, 12], "data_collect": [6, 12], "1000_genomes_project": [6, 12], "releas": [6, 12], "20181203_biallelic_snv": [6, 12], "chr21": [6, 12], "shapeit2_integrated_v1a": [6, 12], "grch38": [6, 12], "20181129": [6, 12], "phase": [6, 12], "gz": [6, 10, 12, 13, 19], "ensembl": [6, 12], "org": [6, 12], "pub": [6, 12], "homo_sapien": [6, 12], "dna": [6, 12], "fa": [6, 12, 13], "gff3": [6, 12], "individu": 6, "down": 6, "draw": 6, "replac": [6, 7], "ideal": 6, "obtain": [6, 10, 11, 13, 16, 17, 20, 22], "calibr": 6, "extrapol": 6, "length": [6, 12, 19], "manipul": [7, 8, 22], "multipl": [7, 9, 22], "kei": 7, "ndim": 7, "notat": 7, "merg": [7, 22], "whose": 7, "last": [7, 13, 20, 21], "deriv": [7, 13, 22], "alphabet": 7, "wise": 8, "watterson": 8, "rtype": 8, "specif": 8, "treat": 8, "separ": [8, 13], "kingman": [8, 16], "directli": [9, 19], "reproduc": [9, 17], "consist": 9, "analys": 9, "simplifi": 9, "manag": [9, 16], "hyperparamet": 9, "typic": 9, "like": [9, 17], "thu": [9, 11, 13, 20], "resort": 9, "veri": 9, "usual": [9, 22], "untouch": 9, "invok": 9, "guarante": 9, "determinist": 9, "behaviour": 9, "just": 9, "173705": 9, "3294": 9, "1115": 9, "534": 9, "326": 9, "239": 9, "225": 9, "214": 9, "231": 9, "176": 9, "73": 9, "792884": 9, "4762": 9, "1397": 9, "720": 9, "423": 9, "259": 9, "247": 9, "256": 9, "209": 9, "alreadi": [9, 22], "exist": [9, 16], "person": 9, "readabl": 9, "would": [9, 22], "involv": 9, "32623": 9, "595481483513": 9, "426": 9, "59080558648185": 9, "pyplot": [10, 11, 13, 22], "fd": [10, 11, 12, 14], "instanti": [10, 13, 19], "resourc": [10, 19], "betula": [10, 13, 19], "2439037it": [10, 19], "00": [10, 11, 12, 13, 18, 19, 20], "58243": 10, "95it": 10, "32minfo": [10, 11, 12, 13, 19, 20], "0m": [10, 11, 12, 13, 19, 20], "2439037": [10, 19], "23": [10, 12], "7538": 10, "58it": 10, "980934": [10, 19], "2438327": [10, 19], "981644": [10, 19], "precomput": [10, 11, 13, 20], "transform": [10, 11, 13, 20], "33mwarn": [10, 11, 13, 20], "noth": [10, 11, 13, 20], "worri": [10, 11, 13, 20], "successfulli": [10, 11, 13, 20], "finish": [10, 11, 13, 20], "685": 10, "37": 10, "51293539207359": 10, "53949": 10, "40796474576": 10, "11366118571317227": 10, "0035695995726279578": 10, "18": [10, 12], "120": 10, "8637145820187": 10, "09522023308068508": 10, "006569641953718728": 10, "85": 10, "645": 10, "32": 10, "31745271402025": 10, "4185": 10, "848942283267": 10, "19089043196990704": 10, "006698568663111203": 10, "65": 10, "460": 10, "39": [10, 18], "34106087078578": 10, "165": 10, "01887014239622": 10, "23938783194502647": 10, "18076846503635546": 10, "46": [10, 19], "295": 10, "58658201021626": 10, "15428875493961483": 10, "17278065494179437": 10, "172": 10, "2365": 10, "146": 10, "11003066065462": 10, "09494023640538324": 10, "006134398085142732": 10, "44": 10, "275753637691146": 10, "4941": 10, "28735561608": 10, "1853951938413811": 10, "12013852605367349": 10, "1005073962112379": 10, "replic": 11, "79": [11, 13, 20], "594": [11, 13, 20], "34": [11, 13, 20], "63216290448145": [11, 13, 20], "9867": [11, 13, 20], "852019677897": [11, 13, 20], "15081059927802082": [11, 13, 20], "00010000034366964345": [11, 13, 20], "006854767570905897": [11, 13, 20], "19it": 11, "termin": [11, 13, 20], "unreli": [11, 13, 20], "gtol": [11, 13, 20], "decreas": [11, 13, 20], "0x18e2ef700": 11, "figsiz": [11, 13, 22], "11": 11, "flatten": 11, "3": [11, 13, 22], "ylabel": 11, "var": 12, "folder": 12, "w6": 12, "18ktl5312413jw46btlxrh59fzxvt4": 12, "b9755b5299a6": 12, "976599it": 12, "54065": 12, "13it": 12, "641b1ad7806": 12, "f36fd1bf6304": 12, "16046": 12, "976599": 12, "12": 12, "13333": 12, "56it": 12, "user": [12, 16], "au732936": 12, "pycharmproject": 12, "bio_handl": 12, "py": 12, "490": 12, "settingwithcopywarn": 12, "try": 12, "slice": 12, "row_index": 12, "col_index": 12, "instead": 12, "caveat": 12, "document": [12, 16], "pydata": 12, "doc": 12, "stabl": 12, "user_guid": 12, "html": 12, "view": 12, "versu": 12, "end": 12, "03": [12, 18], "4810": 12, "71it": 12, "965325": 12, "8794": 12, "11274": 12, "pair": [13, 20, 21], "local": [13, 20, 21], "carri": [13, 20, 21], "global": [13, 20, 21], "optimum": [13, 20, 21], "furthermor": [13, 20, 21], "cf": [13, 18, 19, 20, 21], "figur": [13, 19, 20, 22], "512x384": [13, 19, 20, 22], "uncertainti": 13, "sfss": [13, 20, 21], "redo": [13, 20, 21], "02": [13, 18, 20], "30it": 13, "interpret": 13, "mi": 13, "identif": [13, 16], "forc": 13, "arbitrari": 13, "later": 13, "17": 13, "66": 13, "35": 13, "43798126918222": 13, "33214": 13, "72695876174": 13, "13054515124835514": 13, "219": 13, "81it": 13, "idenf": 13, "disabl": [13, 17], "warn": [13, 18], "clutter": 13, "disable_pbar": [13, 17], "getlogg": [13, 17, 18], "setlevel": [13, 17, 18], "neither": 13, "nor": 13, "significantli": 13, "give": 13, "u": [13, 15], "There": 13, "room": 13, "variat": [13, 16], "short": 13, "il": 13, "simpli": 13, "whenev": [13, 22], "ax1": [13, 22], "ax2": [13, 22], "ncol": [13, 22], "tight_layout": 13, "between": [13, 16], "modul": [13, 17, 19], "join": 13, "inde": 13, "via": 13, "investig": 13, "exten": 13, "45153989585526233": 13, "simpler": 13, "explain": 13, "suffici": 13, "lot": 13, "inclus": [13, 16], "associ": 13, "power": 13, "reduc": 13, "interest": 13, "describ": 13, "snakemak": [13, 19], "contriv": 13, "strength": 13, "let": 13, "vari": 13, "question": 13, "As": [13, 16], "expect": [13, 16], "pip": 14, "potenti": 14, "conflict": 14, "isol": 14, "environ": [14, 15, 16], "easiest": [14, 20, 21], "mamba": 14, "yml": 14, "content": 14, "env": 14, "channel": 14, "depend": 14, "python": [14, 15, 16, 17], "command": 14, "f": 14, "activ": 14, "newli": 14, "readi": 14, "reticul": [15, 16], "interfac": 15, "py_instal": 15, "subsequ": 15, "our": [15, 18], "further": 15, "librari": 15, "sourc": [15, 21], "under": 15, "friendli": 16, "softwar": 16, "design": [16, 22], "evolutionari": 16, "biologi": 16, "ecologi": 16, "build": 16, "upon": 16, "foundat": 16, "laid": 16, "tataru": 16, "2017": 16, "address": 16, "limit": 16, "predecessor": 16, "faster": 16, "approach": 16, "offer": [16, 19, 22], "compat": 16, "r": [16, 21], "through": 16, "ensur": [16, 17], "smooth": 16, "workflow": 16, "thoroughli": 16, "eas": 16, "research": 16, "plai": 16, "crucial": 16, "role": 16, "understand": 16, "natur": 16, "genet": 16, "speci": 16, "essenti": [16, 19], "wide": 16, "rang": 16, "applic": 16, "respons": 16, "aim": 16, "meet": 16, "grow": 16, "adapt": 16, "tool": 16, "easili": [16, 19], "adopt": 16, "increasingli": 16, "precursor": 16, "contrast": 16, "put": 16, "nuisanc": 16, "rescal": 16, "alik": 16, "sojourn": 16, "prf": 16, "theori": 16, "step": 16, "easi": 16, "assess": 16, "customiz": 16, "\u03b1": 16, "built": 16, "versatil": 16, "consol": 17, "encount": 17, "unexpect": 17, "descript": 17, "stack": 17, "trace": 17, "etc": 17, "choos": 17, "subsampl": 17, "amen": 18, "your": 18, "own": 18, "fatal": 18, "append": 18, "__class__": 18, "__name__": 18, "41it": 18, "25": 18, "04it": 18, "81": 18, "89it": 18, "72": 18, "28it": 18, "overal": 18, "conveni": 19, "skip_not_polar": 19, "want": 19, "spp": 19, "52379": 19, "94it": 19, "7581": 19, "93it": 19, "behavior": 19, "tandem": 19, "fed": 19, "routin": 19, "complet": [19, 22], "58696": 19, "29it": 19, "26": 19, "7471": 19, "69it": 19, "state": [19, 22], "examin": 19, "These": 19, "accompani": 19, "manual": [19, 22], "almost": 19, "straightforward": 19, "suscept": 19, "incorpor": 19, "wrapper": 19, "est": 19, "emploi": 19, "sophist": 19, "immedi": 19, "api": 19, "compon": 19, "anoth": 19, "20it": 20, "setwd": 21, "handl": 22, "especi": 22, "subtype1": 22, "type1": 22, "type2": 22, "subtype2": 22, "wildcard": 22, "onc": 22, "rid": 22, "upp": 22, "restor": 22, "again": 22, "csv": 22, "spectra2": 22, "distinguish": 22, "collaps": 22, "onto": 22, "particularli": 22, "notic": 22, "easier": 22, "robust": 22, "misspecif": 22, "unknown": 22, "fig": 22}, "objects": {"fastdfe.abstract_inference": [[4, 0, 1, "", "Inference"]], "fastdfe.abstract_inference.Inference": [[4, 1, 1, "", "compute_histogram"], [4, 1, 1, "", "get_cis_params_mle"], [4, 1, 1, "", "get_discretized"], [4, 1, 1, "", "get_errors_params_mle"], [4, 1, 1, "", "get_stats_discretized"], [4, 1, 1, "", "plot_continuous"], [4, 1, 1, "", "plot_discretized"], [4, 1, 1, "", "plot_inferred_parameters"], [4, 1, 1, "", "plot_inferred_parameters_boxplot"]], "fastdfe": [[1, 2, 0, "-", "annotation"], [3, 2, 0, "-", "filtration"], [5, 2, 0, "-", "parametrization"], [6, 2, 0, "-", "parser"]], "fastdfe.annotation": [[1, 0, 1, "", "AncestralAlleleAnnotation"], [1, 0, 1, "", "Annotation"], [1, 0, 1, "", "Annotator"], [1, 0, 1, "", "DegeneracyAnnotation"], [1, 0, 1, "", "MaximumParsimonyAnnotation"], [1, 0, 1, "", "SynonymyAnnotation"]], "fastdfe.annotation.Annotation": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "annotate_site"], [1, 3, 1, "", "annotator"], [1, 1, 1, "", "count_target_sites"], [1, 3, 1, "", "logger"], [1, 3, 1, "", "n_annotated"]], "fastdfe.annotation.Annotator": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "annotate"]], "fastdfe.annotation.DegeneracyAnnotation": [[1, 1, 1, "", "__init__"], [1, 3, 1, "", "aliases"], [1, 1, 1, "", "annotate_site"], [1, 3, 1, "", "cd"], [1, 3, 1, "", "cd_next"], [1, 3, 1, "", "cd_prev"], [1, 3, 1, "", "contig"], [1, 3, 1, "", "errors"], [1, 3, 1, "", "mismatches"], [1, 3, 1, "", "n_skipped"], [1, 3, 1, "", "n_target_sites"]], "fastdfe.annotation.MaximumParsimonyAnnotation": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "annotate_site"], [1, 3, 1, "", "samples"]], "fastdfe.annotation.SynonymyAnnotation": [[1, 1, 1, "", "__init__"], [1, 3, 1, "", "aliases"], [1, 1, 1, "", "annotate_site"], [1, 1, 1, "", "is_synonymous"], [1, 1, 1, "", "mutate"], [1, 3, 1, "", "n_snpeff_comparisons"], [1, 3, 1, "", "n_vep_comparisons"], [1, 3, 1, "", "snpeff_mismatches"], [1, 3, 1, "", "vep_mismatches"]], "fastdfe.base_inference": [[4, 0, 1, "", "BaseInference"]], "fastdfe.base_inference.BaseInference": [[4, 3, 1, "", "L2_residual"], [4, 1, 1, "", "__init__"], [4, 1, 1, "", "add_alpha_to_bootstraps"], [4, 1, 1, "", "add_demography"], [4, 1, 1, "", "adjust_polarization"], [4, 4, 1, "", "alpha"], [4, 1, 1, "", "assign_result"], [4, 1, 1, "", "bootstrap"], [4, 3, 1, "", "bootstrap_results"], [4, 3, 1, "", "bootstraps"], [4, 3, 1, "", "bounds"], [4, 1, 1, "", "check_fixed_params_exist"], [4, 1, 1, "", "compare_nested_likelihoods"], [4, 1, 1, "", "compare_nested_models"], [4, 1, 1, "", "create_config"], [4, 3, 1, "", "default_bounds"], [4, 3, 1, "", "default_opts_mle"], [4, 3, 1, "", "default_scales"], [4, 3, 1, "", "default_x0"], [4, 3, 1, "", "discretization"], [4, 3, 1, "", "do_bootstrap"], [4, 1, 1, "", "evaluate_likelihood"], [4, 3, 1, "", "execution_time"], [4, 3, 1, "", "fixed_params"], [4, 3, 1, "", "folded"], [4, 1, 1, "", "from_config"], [4, 1, 1, "", "from_config_file"], [4, 1, 1, "", "from_file"], [4, 1, 1, "", "from_json"], [4, 1, 1, "", "get_alpha"], [4, 1, 1, "", "get_bootstrap_param_names"], [4, 1, 1, "", "get_bootstrap_params"], [4, 1, 1, "", "get_bounds_linear"], [4, 1, 1, "", "get_cis_params_mle"], [4, 1, 1, "", "get_counts"], [4, 1, 1, "", "get_discretized"], [4, 1, 1, "", "get_errors_discretized_dfe"], [4, 1, 1, "", "get_fixed_param_names"], [4, 1, 1, "", "get_n_optimized"], [4, 1, 1, "", "get_optimized_param_names"], [4, 1, 1, "", "get_scales_linear"], [4, 1, 1, "", "get_summary"], [4, 1, 1, "", "get_x0"], [4, 3, 1, "", "likelihood"], [4, 3, 1, "", "likelihoods"], [4, 3, 1, "", "locked"], [4, 1, 1, "", "lrt"], [4, 3, 1, "", "model"], [4, 1, 1, "", "model_sfs"], [4, 3, 1, "", "n"], [4, 3, 1, "", "n_bootstraps"], [4, 3, 1, "", "n_runs"], [4, 3, 1, "", "optimization"], [4, 3, 1, "", "parallelize"], [4, 4, 1, "", "param_names"], [4, 3, 1, "", "params_mle"], [4, 1, 1, "", "plot_all"], [4, 1, 1, "", "plot_bucket_sizes"], [4, 1, 1, "", "plot_continuous"], [4, 1, 1, "", "plot_discretized"], [4, 1, 1, "", "plot_inferred_parameters"], [4, 1, 1, "", "plot_inferred_parameters_boxplot"], [4, 1, 1, "", "plot_interval_density"], [4, 1, 1, "", "plot_likelihoods"], [4, 1, 1, "", "plot_nested_likelihoods"], [4, 1, 1, "", "plot_observed_sfs"], [4, 1, 1, "", "plot_sfs_comparison"], [4, 1, 1, "", "raise_if_locked"], [4, 1, 1, "", "report_result"], [4, 1, 1, "", "resample_sfs"], [4, 3, 1, "", "result"], [4, 3, 1, "", "rng"], [4, 1, 1, "", "run"], [4, 1, 1, "", "run_bootstrap_sample"], [4, 1, 1, "", "run_if_required"], [4, 1, 1, "", "run_if_required_wrapper"], [4, 3, 1, "", "scales"], [4, 3, 1, "", "seed"], [4, 3, 1, "", "sfs_mle"], [4, 3, 1, "", "sfs_neut"], [4, 3, 1, "", "sfs_sel"], [4, 3, 1, "", "theta"], [4, 1, 1, "", "to_file"], [4, 1, 1, "", "to_json"], [4, 1, 1, "", "update_properties"], [4, 3, 1, "", "x0"]], "fastdfe.config": [[2, 0, 1, "", "Config"]], "fastdfe.config.Config": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "create_polydfe_init_file"], [2, 1, 1, "", "create_polydfe_sfs_config"], [2, 1, 1, "", "from_dict"], [2, 1, 1, "", "from_file"], [2, 1, 1, "", "from_json"], [2, 1, 1, "", "from_yaml"], [2, 1, 1, "", "get_polydfe_model"], [2, 1, 1, "", "parse_polydfe_init_file"], [2, 1, 1, "", "parse_polydfe_sfs_config"], [2, 1, 1, "", "to_dict"], [2, 1, 1, "", "to_file"], [2, 1, 1, "", "to_json"], [2, 1, 1, "", "to_yaml"], [2, 1, 1, "", "update"]], "fastdfe.filtration": [[3, 0, 1, "", "AllFiltration"], [3, 0, 1, "", "BiasedGCConversionFiltration"], [3, 0, 1, "", "CodingSequenceFiltration"], [3, 0, 1, "", "DeviantOutgroupFiltration"], [3, 0, 1, "", "Filterer"], [3, 0, 1, "", "Filtration"], [3, 0, 1, "", "NoFiltration"], [3, 0, 1, "", "PolyAllelicFiltration"], [3, 0, 1, "", "SNPFiltration"], [3, 0, 1, "", "SNVFiltration"]], "fastdfe.filtration.AllFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.filtration.BiasedGCConversionFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.filtration.CodingSequenceFiltration": [[3, 1, 1, "", "__init__"], [3, 3, 1, "", "aliases"], [3, 3, 1, "", "cd"], [3, 1, 1, "", "filter_site"], [3, 3, 1, "", "n_processed"]], "fastdfe.filtration.DeviantOutgroupFiltration": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "create_masks"], [3, 1, 1, "", "filter_site"], [3, 3, 1, "", "ingroup_mask"], [3, 3, 1, "", "ingroups"], [3, 3, 1, "", "outgroup_mask"], [3, 3, 1, "", "outgroups"], [3, 3, 1, "", "samples"], [3, 3, 1, "", "strict_mode"]], "fastdfe.filtration.Filterer": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "filter"], [3, 3, 1, "", "filtrations"], [3, 1, 1, "", "is_filtered"], [3, 3, 1, "", "n_filtered"], [3, 3, 1, "", "output"]], "fastdfe.filtration.Filtration": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "filter_site"], [3, 3, 1, "", "n_filtered"]], "fastdfe.filtration.NoFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.filtration.PolyAllelicFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.filtration.SNPFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.filtration.SNVFiltration": [[3, 1, 1, "", "filter_site"]], "fastdfe.joint_inference": [[4, 0, 1, "", "JointInference"]], "fastdfe.joint_inference.JointInference": [[4, 3, 1, "", "L2_residual"], [4, 1, 1, "", "__init__"], [4, 1, 1, "", "add_alpha_to_bootstraps"], [4, 1, 1, "", "add_covariates"], [4, 1, 1, "", "add_covariates_as_shared"], [4, 1, 1, "", "add_demography"], [4, 1, 1, "", "adjust_polarization"], [4, 4, 1, "", "alpha"], [4, 1, 1, "", "assign_result"], [4, 1, 1, "", "bootstrap"], [4, 1, 1, "", "bootstrap_if_required"], [4, 3, 1, "", "bootstrap_results"], [4, 3, 1, "", "bootstraps"], [4, 3, 1, "", "bounds"], [4, 1, 1, "", "check_fixed_params_exist"], [4, 1, 1, "", "check_no_shared_params_fixed"], [4, 1, 1, "", "check_shared_params"], [4, 1, 1, "", "compare_nested_likelihoods"], [4, 1, 1, "", "compare_nested_models"], [4, 3, 1, "", "covariates"], [4, 1, 1, "", "create_config"], [4, 3, 1, "", "default_bounds"], [4, 3, 1, "", "default_opts_mle"], [4, 3, 1, "", "default_scales"], [4, 3, 1, "", "default_x0"], [4, 1, 1, "", "determine_unshared_covariates"], [4, 3, 1, "", "discretization"], [4, 3, 1, "", "do_bootstrap"], [4, 1, 1, "", "evaluate_likelihood"], [4, 3, 1, "", "execution_time"], [4, 3, 1, "", "fixed_params"], [4, 3, 1, "", "folded"], [4, 1, 1, "", "from_config"], [4, 1, 1, "", "from_config_file"], [4, 1, 1, "", "from_file"], [4, 1, 1, "", "from_json"], [4, 1, 1, "", "get_L2_residual"], [4, 1, 1, "", "get_alpha"], [4, 1, 1, "", "get_bootstrap_param_names"], [4, 1, 1, "", "get_bootstrap_params"], [4, 1, 1, "", "get_bounds_linear"], [4, 1, 1, "", "get_cis_params_mle"], [4, 1, 1, "", "get_counts"], [4, 1, 1, "", "get_discretized"], [4, 1, 1, "", "get_errors_discretized_dfe"], [4, 1, 1, "", "get_fixed_param_names"], [4, 1, 1, "", "get_inferences"], [4, 1, 1, "", "get_n_optimized"], [4, 1, 1, "", "get_optimized_param_names"], [4, 1, 1, "", "get_scales_linear"], [4, 1, 1, "", "get_shared_param_names"], [4, 1, 1, "", "get_summary"], [4, 1, 1, "", "get_x0"], [4, 1, 1, "", "joint_inference_makes_sense"], [4, 3, 1, "", "joint_inferences"], [4, 3, 1, "", "likelihood"], [4, 3, 1, "", "likelihoods"], [4, 3, 1, "", "locked"], [4, 1, 1, "", "lrt"], [4, 3, 1, "", "marginal_inferences"], [4, 1, 1, "", "marginals_without_all"], [4, 3, 1, "", "model"], [4, 1, 1, "", "model_sfs"], [4, 3, 1, "", "n"], [4, 3, 1, "", "n_bootstraps"], [4, 3, 1, "", "n_runs"], [4, 3, 1, "", "optimization"], [4, 3, 1, "", "parallelize"], [4, 4, 1, "", "param_names"], [4, 3, 1, "", "params_mle"], [4, 3, 1, "", "params_mle_raw"], [4, 1, 1, "", "perform_lrt_covariates"], [4, 1, 1, "", "perform_lrt_shared"], [4, 1, 1, "", "plot_all"], [4, 1, 1, "", "plot_bucket_sizes"], [4, 1, 1, "", "plot_continuous"], [4, 1, 1, "", "plot_discretized"], [4, 1, 1, "", "plot_inferred_parameters"], [4, 1, 1, "", "plot_inferred_parameters_boxplot"], [4, 1, 1, "", "plot_interval_density"], [4, 1, 1, "", "plot_likelihoods"], [4, 1, 1, "", "plot_nested_likelihoods"], [4, 1, 1, "", "plot_observed_sfs"], [4, 1, 1, "", "plot_sfs_comparison"], [4, 1, 1, "", "raise_if_locked"], [4, 1, 1, "", "report_result"], [4, 1, 1, "", "resample_sfs"], [4, 3, 1, "", "result"], [4, 3, 1, "", "rng"], [4, 1, 1, "", "run"], [4, 1, 1, "", "run_bootstrap_sample"], [4, 1, 1, "", "run_if_required"], [4, 1, 1, "", "run_if_required_wrapper"], [4, 1, 1, "", "run_joint"], [4, 1, 1, "", "run_joint_bootstrap_sample"], [4, 1, 1, "", "run_joint_without_covariates"], [4, 1, 1, "", "run_marginal"], [4, 3, 1, "", "scales"], [4, 3, 1, "", "seed"], [4, 3, 1, "", "sfs_mle"], [4, 3, 1, "", "sfs_neut"], [4, 3, 1, "", "sfs_sel"], [4, 3, 1, "", "shared_params"], [4, 3, 1, "", "theta"], [4, 1, 1, "", "to_file"], [4, 1, 1, "", "to_json"], [4, 3, 1, "", "types"], [4, 1, 1, "", "update_properties"], [4, 3, 1, "", "x0"], [4, 3, 1, "", "x0_cov"]], "fastdfe.optimization": [[4, 0, 1, "", "Covariate"], [4, 0, 1, "", "SharedParams"]], "fastdfe.optimization.Covariate": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "apply"], [4, 1, 1, "", "apply_default"], [4, 3, 1, "", "bounds"], [4, 3, 1, "", "bounds_scale"], [4, 3, 1, "", "callback"], [4, 3, 1, "", "param"], [4, 3, 1, "", "values"], [4, 3, 1, "", "x0"]], "fastdfe.optimization.SharedParams": [[4, 1, 1, "", "__init__"], [4, 3, 1, "", "params"], [4, 3, 1, "", "types"]], "fastdfe.parametrization": [[5, 0, 1, "", "DiscreteFractionalParametrization"], [5, 0, 1, "", "DiscreteParametrization"], [5, 0, 1, "", "DisplacedGammaParametrization"], [5, 0, 1, "", "GammaDiscreteParametrization"], [5, 0, 1, "", "GammaExpParametrization"], [5, 0, 1, "", "Parametrization"]], "fastdfe.parametrization.DiscreteFractionalParametrization": [[5, 1, 1, "", "__init__"], [5, 3, 1, "", "fixed_params"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "interval_sizes"], [5, 3, 1, "", "intervals"], [5, 3, 1, "", "k"], [5, 3, 1, "", "param_names"], [5, 3, 1, "", "params"], [5, 1, 1, "", "to_fractional"], [5, 1, 1, "", "to_nominal"]], "fastdfe.parametrization.DiscreteParametrization": [[5, 1, 1, "", "__init__"], [5, 3, 1, "", "fixed_params"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "interval_sizes"], [5, 3, 1, "", "intervals"], [5, 3, 1, "", "k"], [5, 3, 1, "", "param_names"], [5, 3, 1, "", "params"]], "fastdfe.parametrization.DisplacedGammaParametrization": [[5, 3, 1, "", "bounds"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "scales"], [5, 3, 1, "", "submodels"], [5, 3, 1, "", "x0"]], "fastdfe.parametrization.GammaDiscreteParametrization": [[5, 3, 1, "", "bounds"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "scales"], [5, 3, 1, "", "submodels"], [5, 3, 1, "", "x0"]], "fastdfe.parametrization.GammaExpParametrization": [[5, 3, 1, "", "bounds"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "scales"], [5, 3, 1, "", "submodels"], [5, 3, 1, "", "x0"]], "fastdfe.parametrization.Parametrization": [[5, 1, 1, "", "__init__"], [5, 3, 1, "", "bounds"], [5, 1, 1, "", "get_cdf"], [5, 1, 1, "", "get_pdf"], [5, 3, 1, "", "param_names"], [5, 3, 1, "", "scales"], [5, 3, 1, "", "submodels"], [5, 3, 1, "", "x0"]], "fastdfe.parser": [[6, 0, 1, "", "AncestralBaseStratification"], [6, 0, 1, "", "BaseContextStratification"], [6, 0, 1, "", "BaseTransitionStratification"], [6, 0, 1, "", "ChunkedStratification"], [6, 0, 1, "", "ContigStratification"], [6, 0, 1, "", "DegeneracyStratification"], [6, 0, 1, "", "GenomePositionDependentStratification"], [6, 0, 1, "", "Parser"], [6, 0, 1, "", "SnpEffStratification"], [6, 0, 1, "", "Stratification"], [6, 0, 1, "", "SynonymyStratification"], [6, 0, 1, "", "TransitionTransversionStratification"], [6, 0, 1, "", "VEPStratification"]], "fastdfe.parser.AncestralBaseStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.BaseContextStratification": [[6, 1, 1, "", "__init__"], [6, 3, 1, "", "aliases"], [6, 3, 1, "", "contig"], [6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"], [6, 3, 1, "", "n_flanking"]], "fastdfe.parser.BaseTransitionStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.ChunkedStratification": [[6, 1, 1, "", "__init__"], [6, 3, 1, "", "chunk_sizes"], [6, 3, 1, "", "counter"], [6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"], [6, 3, 1, "", "n_chunks"]], "fastdfe.parser.ContigStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.DegeneracyStratification": [[6, 1, 1, "", "__init__"], [6, 3, 1, "", "get_degeneracy"], [6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.Parser": [[6, 1, 1, "", "__init__"], [6, 3, 1, "", "annotations"], [6, 3, 1, "", "filtrations"], [6, 3, 1, "", "n"], [6, 3, 1, "", "n_skipped"], [6, 3, 1, "", "n_target_sites"], [6, 1, 1, "", "parse"], [6, 3, 1, "", "reader"], [6, 3, 1, "", "samples"], [6, 3, 1, "", "samples_mask"], [6, 3, 1, "", "sfs"], [6, 3, 1, "", "skip_non_polarized"], [6, 3, 1, "", "stratifications"]], "fastdfe.parser.SnpEffStratification": [[6, 3, 1, "", "info_tag"]], "fastdfe.parser.Stratification": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"], [6, 3, 1, "", "n_no_type"], [6, 3, 1, "", "parser"]], "fastdfe.parser.SynonymyStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.TransitionTransversionStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"]], "fastdfe.parser.VEPStratification": [[6, 1, 1, "", "get_type"], [6, 1, 1, "", "get_types"], [6, 3, 1, "", "info_tag"]], "fastdfe.spectrum": [[7, 0, 1, "", "Spectra"], [8, 0, 1, "", "Spectrum"]], "fastdfe.spectrum.Spectra": [[7, 1, 1, "", "__init__"], [7, 4, 1, "", "all"], [7, 1, 1, "", "combine"], [7, 1, 1, "", "copy"], [7, 1, 1, "", "drop_empty"], [7, 1, 1, "", "drop_sparse"], [7, 1, 1, "", "drop_zero_entries"], [7, 1, 1, "", "fold"], [7, 1, 1, "", "from_dataframe"], [7, 1, 1, "", "from_dict"], [7, 1, 1, "", "from_file"], [7, 1, 1, "", "from_list"], [7, 1, 1, "", "from_spectra"], [7, 1, 1, "", "from_spectrum"], [7, 1, 1, "", "get_empty"], [7, 4, 1, "", "has_div"], [7, 1, 1, "", "has_dots"], [7, 1, 1, "", "is_folded"], [7, 4, 1, "", "k"], [7, 1, 1, "", "merge_groups"], [7, 4, 1, "", "n"], [7, 4, 1, "", "n_div"], [7, 4, 1, "", "n_monomorphic"], [7, 4, 1, "", "n_polymorphic"], [7, 4, 1, "", "n_sites"], [7, 1, 1, "", "normalize"], [7, 1, 1, "", "plot"], [7, 4, 1, "", "polymorphic"], [7, 1, 1, "", "prefix"], [7, 1, 1, "", "print"], [7, 1, 1, "", "rename"], [7, 1, 1, "", "replace_dots"], [7, 1, 1, "", "sort_types"], [7, 1, 1, "", "to_dataframe"], [7, 1, 1, "", "to_dict"], [7, 1, 1, "", "to_file"], [7, 1, 1, "", "to_list"], [7, 1, 1, "", "to_multi_index"], [7, 1, 1, "", "to_numpy"], [7, 1, 1, "", "to_single_index"], [7, 1, 1, "", "to_spectra"], [7, 4, 1, "", "types"]], "fastdfe.spectrum.Spectrum": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "copy"], [8, 1, 1, "", "fold"], [8, 1, 1, "", "from_list"], [8, 1, 1, "", "from_polydfe"], [8, 1, 1, "", "from_polymorphic"], [8, 4, 1, "", "has_div"], [8, 1, 1, "", "is_folded"], [8, 4, 1, "", "n"], [8, 4, 1, "", "n_div"], [8, 4, 1, "", "n_monomorphic"], [8, 4, 1, "", "n_polymorphic"], [8, 4, 1, "", "n_sites"], [8, 1, 1, "", "normalize"], [8, 1, 1, "", "plot"], [8, 4, 1, "", "polymorphic"], [8, 1, 1, "", "standard_kingman"], [8, 4, 1, "", "theta"], [8, 1, 1, "", "to_list"], [8, 1, 1, "", "to_numpy"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "fastdf": 0, "": 0, "document": 0, "get": 0, "start": 0, "python": 0, "r": [0, 15], "refer": 0, "api": 0, "indic": 0, "tabl": 0, "vcf": [1, 3, 6, 19], "annot": [1, 19], "configur": [2, 9], "class": [2, 7, 8], "filtrat": [3, 19], "infer": [4, 9, 13, 20, 21], "parametr": [5, 18], "pars": [6, 19], "spectra": [7, 22], "spectrum": 8, "file": [9, 19], "basic": [9, 20, 21], "usag": 9, "json": 9, "joint": [9, 13], "exampl": 9, "dfe": [13, 18], "base": 13, "bootstrap": [13, 20, 21], "fix": 13, "paramet": 13, "nest": 13, "model": 13, "comparison": 13, "visual": 13, "likelihood": 13, "serial": [13, 20, 21, 22], "fold": [13, 22], "covari": 13, "instal": [14, 15], "pypi": 14, "conda": 14, "introduct": 16, "motiv": 16, "how": 16, "work": [16, 22], "featur": 16, "miscellan": 17, "log": 17, "debug": 17, "seed": 17, "sf": [19, 22], "from": 19, "simpl": 19, "stratif": 19, "degeneraci": 19, "synonymi": 19, "ancestr": 19, "allel": 19, "quickstart": [20, 21], "subtyp": 22, "group": 22, "prefix": 22}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to fastDFE\u2019s documentation": [[0, "welcome-to-fastdfe-s-documentation"]], "Getting Started (Python)": [[0, null]], "Getting Started (R)": [[0, null]], "Python Reference": [[0, null]], "API Reference": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "VCF Annotation": [[1, "module-fastdfe.annotation"]], "Configuration class": [[2, "configuration-class"]], "VCF Filtration": [[3, "module-fastdfe.filtration"]], "Inference": [[4, "inference"]], "Parametrizations": [[5, "module-fastdfe.parametrization"]], "VCF Parsing": [[6, "module-fastdfe.parser"]], "Spectra class": [[7, "spectra-class"]], "Spectrum class": [[8, "spectrum-class"]], "Configuration files": [[9, "configuration-files"]], "Basic usage": [[9, "basic-usage"]], "JSON files": [[9, "json-files"]], "Joint inference example": [[9, "joint-inference-example"]], "DFE Inference": [[13, "dfe-inference"]], "Base inference": [[13, "base-inference"]], "Bootstrapping": [[13, "bootstrapping"], [20, "bootstrapping"], [21, "bootstrapping"]], "Fixing parameters": [[13, "fixing-parameters"]], "Nested model comparison": [[13, "nested-model-comparison"]], "Visualize likelihoods": [[13, "visualize-likelihoods"]], "Serialization": [[13, "serialization"], [20, "serialization"], [21, "serialization"], [22, "serialization"]], "Folded inference": [[13, "folded-inference"]], "Joint inference": [[13, "joint-inference"]], "Model comparison": [[13, "model-comparison"], [13, "id1"]], "Covariates": [[13, "covariates"]], "Installation": [[14, "installation"], [15, "installation"]], "PyPi": [[14, "pypi"]], "Conda": [[14, "conda"]], "R": [[15, "r"]], "Introduction": [[16, "introduction"]], "Motivation": [[16, "motivation"]], "How it works": [[16, "how-it-works"]], "Features": [[16, "features"]], "Miscellaneous": [[17, "miscellaneous"]], "Logging": [[17, "logging"]], "Debugging": [[17, "debugging"]], "Seeding": [[17, "seeding"]], "DFE parametrizations": [[18, "dfe-parametrizations"]], "Parsing SFS from VCF file": [[19, "parsing-sfs-from-vcf-file"]], "Simple parsing": [[19, "simple-parsing"]], "Stratifications": [[19, "stratifications"]], "Annotations": [[19, "annotations"]], "Degeneracy and Synonymy Annotations": [[19, "degeneracy-and-synonymy-annotations"]], "Ancestral Allele Annotation": [[19, "ancestral-allele-annotation"]], "Filtrations": [[19, "filtrations"]], "Quickstart": [[20, "quickstart"], [21, "quickstart"]], "Basic inference": [[20, "basic-inference"], [21, "basic-inference"]], "Working with SFS": [[22, "working-with-sfs"]], "Subtypes": [[22, "subtypes"]], "Grouping": [[22, "grouping"]], "Prefixing": [[22, "prefixing"]], "Folded spectra": [[22, "folded-spectra"]]}, "indexentries": {"ancestralalleleannotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.AncestralAlleleAnnotation"]], "annotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.Annotation"]], "annotator (class in fastdfe.annotation)": [[1, "fastdfe.annotation.Annotator"]], "degeneracyannotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.DegeneracyAnnotation"]], "maximumparsimonyannotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.MaximumParsimonyAnnotation"]], "synonymyannotation (class in fastdfe.annotation)": [[1, "fastdfe.annotation.SynonymyAnnotation"]], "__init__() (fastdfe.annotation.annotation method)": [[1, "fastdfe.annotation.Annotation.__init__"]], "__init__() (fastdfe.annotation.annotator method)": [[1, "fastdfe.annotation.Annotator.__init__"]], "__init__() (fastdfe.annotation.degeneracyannotation method)": [[1, "fastdfe.annotation.DegeneracyAnnotation.__init__"]], "__init__() (fastdfe.annotation.maximumparsimonyannotation method)": [[1, "fastdfe.annotation.MaximumParsimonyAnnotation.__init__"]], "__init__() (fastdfe.annotation.synonymyannotation method)": [[1, "fastdfe.annotation.SynonymyAnnotation.__init__"]], "aliases (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.aliases"]], "aliases (fastdfe.annotation.synonymyannotation attribute)": [[1, "fastdfe.annotation.SynonymyAnnotation.aliases"]], "annotate() (fastdfe.annotation.annotator method)": [[1, "fastdfe.annotation.Annotator.annotate"]], "annotate_site() (fastdfe.annotation.annotation method)": [[1, "fastdfe.annotation.Annotation.annotate_site"]], "annotate_site() (fastdfe.annotation.degeneracyannotation method)": [[1, "fastdfe.annotation.DegeneracyAnnotation.annotate_site"]], "annotate_site() (fastdfe.annotation.maximumparsimonyannotation method)": [[1, "fastdfe.annotation.MaximumParsimonyAnnotation.annotate_site"]], "annotate_site() (fastdfe.annotation.synonymyannotation method)": [[1, "fastdfe.annotation.SynonymyAnnotation.annotate_site"]], "annotator (fastdfe.annotation.annotation attribute)": [[1, "fastdfe.annotation.Annotation.annotator"]], "cd (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.cd"]], "cd_next (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.cd_next"]], "cd_prev (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.cd_prev"]], "contig (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.contig"]], "count_target_sites() (fastdfe.annotation.annotation static method)": [[1, "fastdfe.annotation.Annotation.count_target_sites"]], "errors (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.errors"]], "fastdfe.annotation": [[1, "module-fastdfe.annotation"]], "is_synonymous() (fastdfe.annotation.synonymyannotation static method)": [[1, "fastdfe.annotation.SynonymyAnnotation.is_synonymous"]], "logger (fastdfe.annotation.annotation attribute)": [[1, "fastdfe.annotation.Annotation.logger"]], "mismatches (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.mismatches"]], "module": [[1, "module-fastdfe.annotation"], [3, "module-fastdfe.filtration"], [5, "module-fastdfe.parametrization"], [6, "module-fastdfe.parser"]], "mutate() (fastdfe.annotation.synonymyannotation static method)": [[1, "fastdfe.annotation.SynonymyAnnotation.mutate"]], "n_annotated (fastdfe.annotation.annotation attribute)": [[1, "fastdfe.annotation.Annotation.n_annotated"]], "n_skipped (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.n_skipped"]], "n_snpeff_comparisons (fastdfe.annotation.synonymyannotation attribute)": [[1, "fastdfe.annotation.SynonymyAnnotation.n_snpeff_comparisons"]], "n_target_sites (fastdfe.annotation.degeneracyannotation attribute)": [[1, "fastdfe.annotation.DegeneracyAnnotation.n_target_sites"]], "n_vep_comparisons (fastdfe.annotation.synonymyannotation attribute)": [[1, "fastdfe.annotation.SynonymyAnnotation.n_vep_comparisons"]], "samples (fastdfe.annotation.maximumparsimonyannotation attribute)": [[1, "fastdfe.annotation.MaximumParsimonyAnnotation.samples"]], "snpeff_mismatches (fastdfe.annotation.synonymyannotation attribute)": [[1, "fastdfe.annotation.SynonymyAnnotation.snpeff_mismatches"]], "vep_mismatches (fastdfe.annotation.synonymyannotation attribute)": [[1, "fastdfe.annotation.SynonymyAnnotation.vep_mismatches"]], "config (class in fastdfe.config)": [[2, "fastdfe.config.Config"]], "__init__() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.__init__"]], "create_polydfe_init_file() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.create_polydfe_init_file"]], "create_polydfe_sfs_config() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.create_polydfe_sfs_config"]], "from_dict() (fastdfe.config.config static method)": [[2, "fastdfe.config.Config.from_dict"]], "from_file() (fastdfe.config.config static method)": [[2, "fastdfe.config.Config.from_file"]], "from_json() (fastdfe.config.config static method)": [[2, "fastdfe.config.Config.from_json"]], "from_yaml() (fastdfe.config.config static method)": [[2, "fastdfe.config.Config.from_yaml"]], "get_polydfe_model() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.get_polydfe_model"]], "parse_polydfe_init_file() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.parse_polydfe_init_file"]], "parse_polydfe_sfs_config() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.parse_polydfe_sfs_config"]], "to_dict() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.to_dict"]], "to_file() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.to_file"]], "to_json() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.to_json"]], "to_yaml() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.to_yaml"]], "update() (fastdfe.config.config method)": [[2, "fastdfe.config.Config.update"]], "allfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.AllFiltration"]], "biasedgcconversionfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.BiasedGCConversionFiltration"]], "codingsequencefiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.CodingSequenceFiltration"]], "deviantoutgroupfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration"]], "filterer (class in fastdfe.filtration)": [[3, "fastdfe.filtration.Filterer"]], "filtration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.Filtration"]], "nofiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.NoFiltration"]], "polyallelicfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.PolyAllelicFiltration"]], "snpfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.SNPFiltration"]], "snvfiltration (class in fastdfe.filtration)": [[3, "fastdfe.filtration.SNVFiltration"]], "__init__() (fastdfe.filtration.codingsequencefiltration method)": [[3, "fastdfe.filtration.CodingSequenceFiltration.__init__"]], "__init__() (fastdfe.filtration.deviantoutgroupfiltration method)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.__init__"]], "__init__() (fastdfe.filtration.filterer method)": [[3, "fastdfe.filtration.Filterer.__init__"]], "__init__() (fastdfe.filtration.filtration method)": [[3, "fastdfe.filtration.Filtration.__init__"]], "aliases (fastdfe.filtration.codingsequencefiltration attribute)": [[3, "fastdfe.filtration.CodingSequenceFiltration.aliases"]], "cd (fastdfe.filtration.codingsequencefiltration attribute)": [[3, "fastdfe.filtration.CodingSequenceFiltration.cd"]], "create_masks() (fastdfe.filtration.deviantoutgroupfiltration method)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.create_masks"]], "fastdfe.filtration": [[3, "module-fastdfe.filtration"]], "filter() (fastdfe.filtration.filterer method)": [[3, "fastdfe.filtration.Filterer.filter"]], "filter_site() (fastdfe.filtration.allfiltration method)": [[3, "fastdfe.filtration.AllFiltration.filter_site"]], "filter_site() (fastdfe.filtration.biasedgcconversionfiltration method)": [[3, "fastdfe.filtration.BiasedGCConversionFiltration.filter_site"]], "filter_site() (fastdfe.filtration.codingsequencefiltration method)": [[3, "fastdfe.filtration.CodingSequenceFiltration.filter_site"]], "filter_site() (fastdfe.filtration.deviantoutgroupfiltration method)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.filter_site"]], "filter_site() (fastdfe.filtration.filtration method)": [[3, "fastdfe.filtration.Filtration.filter_site"]], "filter_site() (fastdfe.filtration.nofiltration method)": [[3, "fastdfe.filtration.NoFiltration.filter_site"]], "filter_site() (fastdfe.filtration.polyallelicfiltration method)": [[3, "fastdfe.filtration.PolyAllelicFiltration.filter_site"]], "filter_site() (fastdfe.filtration.snpfiltration method)": [[3, "fastdfe.filtration.SNPFiltration.filter_site"]], "filter_site() (fastdfe.filtration.snvfiltration method)": [[3, "fastdfe.filtration.SNVFiltration.filter_site"]], "filtrations (fastdfe.filtration.filterer attribute)": [[3, "fastdfe.filtration.Filterer.filtrations"]], "ingroup_mask (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.ingroup_mask"]], "ingroups (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.ingroups"]], "is_filtered() (fastdfe.filtration.filterer method)": [[3, "fastdfe.filtration.Filterer.is_filtered"]], "n_filtered (fastdfe.filtration.filterer attribute)": [[3, "fastdfe.filtration.Filterer.n_filtered"]], "n_filtered (fastdfe.filtration.filtration attribute)": [[3, "fastdfe.filtration.Filtration.n_filtered"]], "n_processed (fastdfe.filtration.codingsequencefiltration attribute)": [[3, "fastdfe.filtration.CodingSequenceFiltration.n_processed"]], "outgroup_mask (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.outgroup_mask"]], "outgroups (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.outgroups"]], "output (fastdfe.filtration.filterer attribute)": [[3, "fastdfe.filtration.Filterer.output"]], "samples (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.samples"]], "strict_mode (fastdfe.filtration.deviantoutgroupfiltration attribute)": [[3, "fastdfe.filtration.DeviantOutgroupFiltration.strict_mode"]], "baseinference (class in fastdfe.base_inference)": [[4, "fastdfe.base_inference.BaseInference"]], "covariate (class in fastdfe.optimization)": [[4, "fastdfe.optimization.Covariate"]], "inference (class in fastdfe.abstract_inference)": [[4, "fastdfe.abstract_inference.Inference"]], "jointinference (class in fastdfe.joint_inference)": [[4, "fastdfe.joint_inference.JointInference"]], "l2_residual (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.L2_residual"]], "l2_residual (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.L2_residual"]], "sharedparams (class in fastdfe.optimization)": [[4, "fastdfe.optimization.SharedParams"]], "__init__() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.__init__"]], "__init__() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.__init__"]], "__init__() (fastdfe.optimization.covariate method)": [[4, "fastdfe.optimization.Covariate.__init__"]], "__init__() (fastdfe.optimization.sharedparams method)": [[4, "fastdfe.optimization.SharedParams.__init__"]], "add_alpha_to_bootstraps() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.add_alpha_to_bootstraps"]], "add_alpha_to_bootstraps() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.add_alpha_to_bootstraps"]], "add_covariates() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.add_covariates"]], "add_covariates_as_shared() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.add_covariates_as_shared"]], "add_demography() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.add_demography"]], "add_demography() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.add_demography"]], "adjust_polarization() (fastdfe.base_inference.baseinference static method)": [[4, "fastdfe.base_inference.BaseInference.adjust_polarization"]], "adjust_polarization() (fastdfe.joint_inference.jointinference static method)": [[4, "fastdfe.joint_inference.JointInference.adjust_polarization"]], "alpha (fastdfe.base_inference.baseinference property)": [[4, "fastdfe.base_inference.BaseInference.alpha"]], "alpha (fastdfe.joint_inference.jointinference property)": [[4, "fastdfe.joint_inference.JointInference.alpha"]], "apply() (fastdfe.optimization.covariate method)": [[4, "fastdfe.optimization.Covariate.apply"]], "apply_default() (fastdfe.optimization.covariate method)": [[4, "fastdfe.optimization.Covariate.apply_default"]], "assign_result() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.assign_result"]], "assign_result() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.assign_result"]], "bootstrap() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.bootstrap"]], "bootstrap() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.bootstrap"]], "bootstrap_if_required() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.bootstrap_if_required"]], "bootstrap_results (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.bootstrap_results"]], "bootstrap_results (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.bootstrap_results"]], "bootstraps (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.bootstraps"]], "bootstraps (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.bootstraps"]], "bounds (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.bounds"]], "bounds (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.bounds"]], "bounds (fastdfe.optimization.covariate attribute)": [[4, "fastdfe.optimization.Covariate.bounds"]], "bounds_scale (fastdfe.optimization.covariate attribute)": [[4, "fastdfe.optimization.Covariate.bounds_scale"]], "callback (fastdfe.optimization.covariate attribute)": [[4, "fastdfe.optimization.Covariate.callback"]], "check_fixed_params_exist() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.check_fixed_params_exist"]], "check_fixed_params_exist() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.check_fixed_params_exist"]], "check_no_shared_params_fixed() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.check_no_shared_params_fixed"]], "check_shared_params() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.check_shared_params"]], "compare_nested_likelihoods() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.compare_nested_likelihoods"]], "compare_nested_likelihoods() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.compare_nested_likelihoods"]], "compare_nested_models() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.compare_nested_models"]], "compare_nested_models() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.compare_nested_models"]], "compute_histogram() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.compute_histogram"]], "covariates (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.covariates"]], "create_config() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.create_config"]], "create_config() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.create_config"]], "default_bounds (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.default_bounds"]], "default_bounds (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.default_bounds"]], "default_opts_mle (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.default_opts_mle"]], "default_opts_mle (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.default_opts_mle"]], "default_scales (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.default_scales"]], "default_scales (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.default_scales"]], "default_x0 (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.default_x0"]], "default_x0 (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.default_x0"]], "determine_unshared_covariates() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.determine_unshared_covariates"]], "discretization (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.discretization"]], "discretization (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.discretization"]], "do_bootstrap (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.do_bootstrap"]], "do_bootstrap (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.do_bootstrap"]], "evaluate_likelihood() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.evaluate_likelihood"]], "evaluate_likelihood() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.evaluate_likelihood"]], "execution_time (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.execution_time"]], "execution_time (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.execution_time"]], "fixed_params (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.fixed_params"]], "fixed_params (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.fixed_params"]], "folded (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.folded"]], "folded (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.folded"]], "from_config() (fastdfe.base_inference.baseinference class method)": [[4, "fastdfe.base_inference.BaseInference.from_config"]], "from_config() (fastdfe.joint_inference.jointinference class method)": [[4, "fastdfe.joint_inference.JointInference.from_config"]], "from_config_file() (fastdfe.base_inference.baseinference class method)": [[4, "fastdfe.base_inference.BaseInference.from_config_file"]], "from_config_file() (fastdfe.joint_inference.jointinference class method)": [[4, "fastdfe.joint_inference.JointInference.from_config_file"]], "from_file() (fastdfe.base_inference.baseinference class method)": [[4, "fastdfe.base_inference.BaseInference.from_file"]], "from_file() (fastdfe.joint_inference.jointinference class method)": [[4, "fastdfe.joint_inference.JointInference.from_file"]], "from_json() (fastdfe.base_inference.baseinference class method)": [[4, "fastdfe.base_inference.BaseInference.from_json"]], "from_json() (fastdfe.joint_inference.jointinference class method)": [[4, "fastdfe.joint_inference.JointInference.from_json"]], "get_l2_residual() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_L2_residual"]], "get_alpha() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_alpha"]], "get_alpha() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_alpha"]], "get_bootstrap_param_names() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_bootstrap_param_names"]], "get_bootstrap_param_names() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_bootstrap_param_names"]], "get_bootstrap_params() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_bootstrap_params"]], "get_bootstrap_params() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_bootstrap_params"]], "get_bounds_linear() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_bounds_linear"]], "get_bounds_linear() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_bounds_linear"]], "get_cis_params_mle() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.get_cis_params_mle"]], "get_cis_params_mle() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_cis_params_mle"]], "get_cis_params_mle() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_cis_params_mle"]], "get_counts() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_counts"]], "get_counts() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_counts"]], "get_discretized() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.get_discretized"]], "get_discretized() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_discretized"]], "get_discretized() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_discretized"]], "get_errors_discretized_dfe() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_errors_discretized_dfe"]], "get_errors_discretized_dfe() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_errors_discretized_dfe"]], "get_errors_params_mle() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.get_errors_params_mle"]], "get_fixed_param_names() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_fixed_param_names"]], "get_fixed_param_names() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_fixed_param_names"]], "get_inferences() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_inferences"]], "get_n_optimized() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_n_optimized"]], "get_n_optimized() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_n_optimized"]], "get_optimized_param_names() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_optimized_param_names"]], "get_optimized_param_names() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_optimized_param_names"]], "get_scales_linear() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_scales_linear"]], "get_scales_linear() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_scales_linear"]], "get_shared_param_names() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_shared_param_names"]], "get_stats_discretized() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.get_stats_discretized"]], "get_summary() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_summary"]], "get_summary() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_summary"]], "get_x0() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.get_x0"]], "get_x0() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.get_x0"]], "joint_inference_makes_sense() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.joint_inference_makes_sense"]], "joint_inferences (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.joint_inferences"]], "likelihood (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.likelihood"]], "likelihood (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.likelihood"]], "likelihoods (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.likelihoods"]], "likelihoods (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.likelihoods"]], "locked (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.locked"]], "locked (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.locked"]], "lrt() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.lrt"]], "lrt() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.lrt"]], "marginal_inferences (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.marginal_inferences"]], "marginals_without_all() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.marginals_without_all"]], "model (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.model"]], "model (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.model"]], "model_sfs() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.model_sfs"]], "model_sfs() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.model_sfs"]], "n (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.n"]], "n (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.n"]], "n_bootstraps (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.n_bootstraps"]], "n_bootstraps (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.n_bootstraps"]], "n_runs (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.n_runs"]], "n_runs (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.n_runs"]], "optimization (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.optimization"]], "optimization (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.optimization"]], "parallelize (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.parallelize"]], "parallelize (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.parallelize"]], "param (fastdfe.optimization.covariate attribute)": [[4, "fastdfe.optimization.Covariate.param"]], "param_names (fastdfe.base_inference.baseinference property)": [[4, "fastdfe.base_inference.BaseInference.param_names"]], "param_names (fastdfe.joint_inference.jointinference property)": [[4, "fastdfe.joint_inference.JointInference.param_names"]], "params (fastdfe.optimization.sharedparams attribute)": [[4, "fastdfe.optimization.SharedParams.params"]], "params_mle (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.params_mle"]], "params_mle (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.params_mle"]], "params_mle_raw (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.params_mle_raw"]], "perform_lrt_covariates() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.perform_lrt_covariates"]], "perform_lrt_shared() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.perform_lrt_shared"]], "plot_all() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_all"]], "plot_all() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_all"]], "plot_bucket_sizes() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_bucket_sizes"]], "plot_bucket_sizes() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_bucket_sizes"]], "plot_continuous() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.plot_continuous"]], "plot_continuous() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_continuous"]], "plot_continuous() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_continuous"]], "plot_discretized() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.plot_discretized"]], "plot_discretized() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_discretized"]], "plot_discretized() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_discretized"]], "plot_inferred_parameters() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.plot_inferred_parameters"]], "plot_inferred_parameters() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_inferred_parameters"]], "plot_inferred_parameters() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_inferred_parameters"]], "plot_inferred_parameters_boxplot() (fastdfe.abstract_inference.inference static method)": [[4, "fastdfe.abstract_inference.Inference.plot_inferred_parameters_boxplot"]], "plot_inferred_parameters_boxplot() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_inferred_parameters_boxplot"]], "plot_inferred_parameters_boxplot() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_inferred_parameters_boxplot"]], "plot_interval_density() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_interval_density"]], "plot_interval_density() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_interval_density"]], "plot_likelihoods() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_likelihoods"]], "plot_likelihoods() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_likelihoods"]], "plot_nested_likelihoods() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_nested_likelihoods"]], "plot_nested_likelihoods() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_nested_likelihoods"]], "plot_observed_sfs() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_observed_sfs"]], "plot_observed_sfs() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_observed_sfs"]], "plot_sfs_comparison() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.plot_sfs_comparison"]], "plot_sfs_comparison() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.plot_sfs_comparison"]], "raise_if_locked() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.raise_if_locked"]], "raise_if_locked() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.raise_if_locked"]], "report_result() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.report_result"]], "report_result() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.report_result"]], "resample_sfs() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.resample_sfs"]], "resample_sfs() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.resample_sfs"]], "result (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.result"]], "result (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.result"]], "rng (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.rng"]], "rng (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.rng"]], "run() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.run"]], "run() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run"]], "run_bootstrap_sample() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.run_bootstrap_sample"]], "run_bootstrap_sample() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_bootstrap_sample"]], "run_if_required() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.run_if_required"]], "run_if_required() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_if_required"]], "run_if_required_wrapper() (fastdfe.base_inference.baseinference static method)": [[4, "fastdfe.base_inference.BaseInference.run_if_required_wrapper"]], "run_if_required_wrapper() (fastdfe.joint_inference.jointinference static method)": [[4, "fastdfe.joint_inference.JointInference.run_if_required_wrapper"]], "run_joint() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_joint"]], "run_joint_bootstrap_sample() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_joint_bootstrap_sample"]], "run_joint_without_covariates() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_joint_without_covariates"]], "run_marginal() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.run_marginal"]], "scales (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.scales"]], "scales (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.scales"]], "seed (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.seed"]], "seed (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.seed"]], "sfs_mle (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.sfs_mle"]], "sfs_mle (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.sfs_mle"]], "sfs_neut (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.sfs_neut"]], "sfs_neut (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.sfs_neut"]], "sfs_sel (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.sfs_sel"]], "sfs_sel (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.sfs_sel"]], "shared_params (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.shared_params"]], "theta (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.theta"]], "theta (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.theta"]], "to_file() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.to_file"]], "to_file() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.to_file"]], "to_json() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.to_json"]], "to_json() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.to_json"]], "types (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.types"]], "types (fastdfe.optimization.sharedparams attribute)": [[4, "fastdfe.optimization.SharedParams.types"]], "update_properties() (fastdfe.base_inference.baseinference method)": [[4, "fastdfe.base_inference.BaseInference.update_properties"]], "update_properties() (fastdfe.joint_inference.jointinference method)": [[4, "fastdfe.joint_inference.JointInference.update_properties"]], "values (fastdfe.optimization.covariate attribute)": [[4, "fastdfe.optimization.Covariate.values"]], "x0 (fastdfe.base_inference.baseinference attribute)": [[4, "fastdfe.base_inference.BaseInference.x0"]], "x0 (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.x0"]], "x0 (fastdfe.optimization.covariate attribute)": [[4, "fastdfe.optimization.Covariate.x0"]], "x0_cov (fastdfe.joint_inference.jointinference attribute)": [[4, "fastdfe.joint_inference.JointInference.x0_cov"]], "discretefractionalparametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization"]], "discreteparametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.DiscreteParametrization"]], "displacedgammaparametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization"]], "gammadiscreteparametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization"]], "gammaexpparametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.GammaExpParametrization"]], "parametrization (class in fastdfe.parametrization)": [[5, "fastdfe.parametrization.Parametrization"]], "__init__() (fastdfe.parametrization.discretefractionalparametrization method)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.__init__"]], "__init__() (fastdfe.parametrization.discreteparametrization method)": [[5, "fastdfe.parametrization.DiscreteParametrization.__init__"]], "__init__() (fastdfe.parametrization.parametrization method)": [[5, "fastdfe.parametrization.Parametrization.__init__"]], "bounds (fastdfe.parametrization.displacedgammaparametrization attribute)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.bounds"]], "bounds (fastdfe.parametrization.gammadiscreteparametrization attribute)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.bounds"]], "bounds (fastdfe.parametrization.gammaexpparametrization attribute)": [[5, "fastdfe.parametrization.GammaExpParametrization.bounds"]], "bounds (fastdfe.parametrization.parametrization attribute)": [[5, "fastdfe.parametrization.Parametrization.bounds"]], "fastdfe.parametrization": [[5, "module-fastdfe.parametrization"]], "fixed_params (fastdfe.parametrization.discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.fixed_params"]], "fixed_params (fastdfe.parametrization.discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.fixed_params"]], "get_cdf() (fastdfe.parametrization.discretefractionalparametrization method)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.get_cdf"]], "get_cdf() (fastdfe.parametrization.discreteparametrization method)": [[5, "fastdfe.parametrization.DiscreteParametrization.get_cdf"]], "get_cdf() (fastdfe.parametrization.displacedgammaparametrization static method)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.get_cdf"]], "get_cdf() (fastdfe.parametrization.gammadiscreteparametrization static method)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.get_cdf"]], "get_cdf() (fastdfe.parametrization.gammaexpparametrization static method)": [[5, "fastdfe.parametrization.GammaExpParametrization.get_cdf"]], "get_cdf() (fastdfe.parametrization.parametrization method)": [[5, "fastdfe.parametrization.Parametrization.get_cdf"]], "get_pdf() (fastdfe.parametrization.discretefractionalparametrization method)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.get_pdf"]], "get_pdf() (fastdfe.parametrization.discreteparametrization method)": [[5, "fastdfe.parametrization.DiscreteParametrization.get_pdf"]], "get_pdf() (fastdfe.parametrization.displacedgammaparametrization static method)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.get_pdf"]], "get_pdf() (fastdfe.parametrization.gammadiscreteparametrization static method)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.get_pdf"]], "get_pdf() (fastdfe.parametrization.gammaexpparametrization static method)": [[5, "fastdfe.parametrization.GammaExpParametrization.get_pdf"]], "get_pdf() (fastdfe.parametrization.parametrization method)": [[5, "fastdfe.parametrization.Parametrization.get_pdf"]], "interval_sizes (fastdfe.parametrization.discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.interval_sizes"]], "interval_sizes (fastdfe.parametrization.discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.interval_sizes"]], "intervals (fastdfe.parametrization.discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.intervals"]], "intervals (fastdfe.parametrization.discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.intervals"]], "k (fastdfe.parametrization.discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.k"]], "k (fastdfe.parametrization.discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.k"]], "param_names (fastdfe.parametrization.discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.param_names"]], "param_names (fastdfe.parametrization.discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.param_names"]], "param_names (fastdfe.parametrization.parametrization attribute)": [[5, "fastdfe.parametrization.Parametrization.param_names"]], "params (fastdfe.parametrization.discretefractionalparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.params"]], "params (fastdfe.parametrization.discreteparametrization attribute)": [[5, "fastdfe.parametrization.DiscreteParametrization.params"]], "scales (fastdfe.parametrization.displacedgammaparametrization attribute)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.scales"]], "scales (fastdfe.parametrization.gammadiscreteparametrization attribute)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.scales"]], "scales (fastdfe.parametrization.gammaexpparametrization attribute)": [[5, "fastdfe.parametrization.GammaExpParametrization.scales"]], "scales (fastdfe.parametrization.parametrization attribute)": [[5, "fastdfe.parametrization.Parametrization.scales"]], "submodels (fastdfe.parametrization.displacedgammaparametrization attribute)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.submodels"]], "submodels (fastdfe.parametrization.gammadiscreteparametrization attribute)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.submodels"]], "submodels (fastdfe.parametrization.gammaexpparametrization attribute)": [[5, "fastdfe.parametrization.GammaExpParametrization.submodels"]], "submodels (fastdfe.parametrization.parametrization attribute)": [[5, "fastdfe.parametrization.Parametrization.submodels"]], "to_fractional() (fastdfe.parametrization.discretefractionalparametrization method)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.to_fractional"]], "to_nominal() (fastdfe.parametrization.discretefractionalparametrization method)": [[5, "fastdfe.parametrization.DiscreteFractionalParametrization.to_nominal"]], "x0 (fastdfe.parametrization.displacedgammaparametrization attribute)": [[5, "fastdfe.parametrization.DisplacedGammaParametrization.x0"]], "x0 (fastdfe.parametrization.gammadiscreteparametrization attribute)": [[5, "fastdfe.parametrization.GammaDiscreteParametrization.x0"]], "x0 (fastdfe.parametrization.gammaexpparametrization attribute)": [[5, "fastdfe.parametrization.GammaExpParametrization.x0"]], "x0 (fastdfe.parametrization.parametrization attribute)": [[5, "fastdfe.parametrization.Parametrization.x0"]], "ancestralbasestratification (class in fastdfe.parser)": [[6, "fastdfe.parser.AncestralBaseStratification"]], "basecontextstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.BaseContextStratification"]], "basetransitionstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.BaseTransitionStratification"]], "chunkedstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.ChunkedStratification"]], "contigstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.ContigStratification"]], "degeneracystratification (class in fastdfe.parser)": [[6, "fastdfe.parser.DegeneracyStratification"]], "genomepositiondependentstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.GenomePositionDependentStratification"]], "parser (class in fastdfe.parser)": [[6, "fastdfe.parser.Parser"]], "snpeffstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.SnpEffStratification"]], "stratification (class in fastdfe.parser)": [[6, "fastdfe.parser.Stratification"]], "synonymystratification (class in fastdfe.parser)": [[6, "fastdfe.parser.SynonymyStratification"]], "transitiontransversionstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.TransitionTransversionStratification"]], "vepstratification (class in fastdfe.parser)": [[6, "fastdfe.parser.VEPStratification"]], "__init__() (fastdfe.parser.basecontextstratification method)": [[6, "fastdfe.parser.BaseContextStratification.__init__"]], "__init__() (fastdfe.parser.chunkedstratification method)": [[6, "fastdfe.parser.ChunkedStratification.__init__"]], "__init__() (fastdfe.parser.degeneracystratification method)": [[6, "fastdfe.parser.DegeneracyStratification.__init__"]], "__init__() (fastdfe.parser.parser method)": [[6, "fastdfe.parser.Parser.__init__"]], "__init__() (fastdfe.parser.stratification method)": [[6, "fastdfe.parser.Stratification.__init__"]], "aliases (fastdfe.parser.basecontextstratification attribute)": [[6, "fastdfe.parser.BaseContextStratification.aliases"]], "annotations (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.annotations"]], "chunk_sizes (fastdfe.parser.chunkedstratification attribute)": [[6, "fastdfe.parser.ChunkedStratification.chunk_sizes"]], "contig (fastdfe.parser.basecontextstratification attribute)": [[6, "fastdfe.parser.BaseContextStratification.contig"]], "counter (fastdfe.parser.chunkedstratification attribute)": [[6, "fastdfe.parser.ChunkedStratification.counter"]], "fastdfe.parser": [[6, "module-fastdfe.parser"]], "filtrations (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.filtrations"]], "get_degeneracy (fastdfe.parser.degeneracystratification attribute)": [[6, "fastdfe.parser.DegeneracyStratification.get_degeneracy"]], "get_type() (fastdfe.parser.ancestralbasestratification method)": [[6, "fastdfe.parser.AncestralBaseStratification.get_type"]], "get_type() (fastdfe.parser.basecontextstratification method)": [[6, "fastdfe.parser.BaseContextStratification.get_type"]], "get_type() (fastdfe.parser.basetransitionstratification method)": [[6, "fastdfe.parser.BaseTransitionStratification.get_type"]], "get_type() (fastdfe.parser.chunkedstratification method)": [[6, "fastdfe.parser.ChunkedStratification.get_type"]], "get_type() (fastdfe.parser.contigstratification method)": [[6, "fastdfe.parser.ContigStratification.get_type"]], "get_type() (fastdfe.parser.degeneracystratification method)": [[6, "fastdfe.parser.DegeneracyStratification.get_type"]], "get_type() (fastdfe.parser.stratification method)": [[6, "fastdfe.parser.Stratification.get_type"]], "get_type() (fastdfe.parser.synonymystratification method)": [[6, "fastdfe.parser.SynonymyStratification.get_type"]], "get_type() (fastdfe.parser.transitiontransversionstratification method)": [[6, "fastdfe.parser.TransitionTransversionStratification.get_type"]], "get_type() (fastdfe.parser.vepstratification method)": [[6, "fastdfe.parser.VEPStratification.get_type"]], "get_types() (fastdfe.parser.ancestralbasestratification method)": [[6, "fastdfe.parser.AncestralBaseStratification.get_types"]], "get_types() (fastdfe.parser.basecontextstratification method)": [[6, "fastdfe.parser.BaseContextStratification.get_types"]], "get_types() (fastdfe.parser.basetransitionstratification method)": [[6, "fastdfe.parser.BaseTransitionStratification.get_types"]], "get_types() (fastdfe.parser.chunkedstratification method)": [[6, "fastdfe.parser.ChunkedStratification.get_types"]], "get_types() (fastdfe.parser.contigstratification method)": [[6, "fastdfe.parser.ContigStratification.get_types"]], "get_types() (fastdfe.parser.degeneracystratification method)": [[6, "fastdfe.parser.DegeneracyStratification.get_types"]], "get_types() (fastdfe.parser.stratification method)": [[6, "fastdfe.parser.Stratification.get_types"]], "get_types() (fastdfe.parser.synonymystratification method)": [[6, "fastdfe.parser.SynonymyStratification.get_types"]], "get_types() (fastdfe.parser.transitiontransversionstratification method)": [[6, "fastdfe.parser.TransitionTransversionStratification.get_types"]], "get_types() (fastdfe.parser.vepstratification method)": [[6, "fastdfe.parser.VEPStratification.get_types"]], "info_tag (fastdfe.parser.snpeffstratification attribute)": [[6, "fastdfe.parser.SnpEffStratification.info_tag"]], "info_tag (fastdfe.parser.vepstratification attribute)": [[6, "fastdfe.parser.VEPStratification.info_tag"]], "n (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.n"]], "n_chunks (fastdfe.parser.chunkedstratification attribute)": [[6, "fastdfe.parser.ChunkedStratification.n_chunks"]], "n_flanking (fastdfe.parser.basecontextstratification attribute)": [[6, "fastdfe.parser.BaseContextStratification.n_flanking"]], "n_no_type (fastdfe.parser.stratification attribute)": [[6, "fastdfe.parser.Stratification.n_no_type"]], "n_skipped (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.n_skipped"]], "n_target_sites (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.n_target_sites"]], "parse() (fastdfe.parser.parser method)": [[6, "fastdfe.parser.Parser.parse"]], "parser (fastdfe.parser.stratification attribute)": [[6, "fastdfe.parser.Stratification.parser"]], "reader (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.reader"]], "samples (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.samples"]], "samples_mask (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.samples_mask"]], "sfs (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.sfs"]], "skip_non_polarized (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.skip_non_polarized"]], "stratifications (fastdfe.parser.parser attribute)": [[6, "fastdfe.parser.Parser.stratifications"]], "spectra (class in fastdfe.spectrum)": [[7, "fastdfe.spectrum.Spectra"]], "__init__() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.__init__"]], "all (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.all"]], "combine() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.combine"]], "copy() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.copy"]], "drop_empty() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.drop_empty"]], "drop_sparse() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.drop_sparse"]], "drop_zero_entries() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.drop_zero_entries"]], "fold() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.fold"]], "from_dataframe() (fastdfe.spectrum.spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_dataframe"]], "from_dict() (fastdfe.spectrum.spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_dict"]], "from_file() (fastdfe.spectrum.spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_file"]], "from_list() (fastdfe.spectrum.spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_list"]], "from_spectra() (fastdfe.spectrum.spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_spectra"]], "from_spectrum() (fastdfe.spectrum.spectra static method)": [[7, "fastdfe.spectrum.Spectra.from_spectrum"]], "get_empty() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.get_empty"]], "has_div (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.has_div"]], "has_dots() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.has_dots"]], "is_folded() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.is_folded"]], "k (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.k"]], "merge_groups() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.merge_groups"]], "n (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.n"]], "n_div (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.n_div"]], "n_monomorphic (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.n_monomorphic"]], "n_polymorphic (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.n_polymorphic"]], "n_sites (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.n_sites"]], "normalize() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.normalize"]], "plot() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.plot"]], "polymorphic (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.polymorphic"]], "prefix() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.prefix"]], "print() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.print"]], "rename() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.rename"]], "replace_dots() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.replace_dots"]], "sort_types() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.sort_types"]], "to_dataframe() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.to_dataframe"]], "to_dict() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.to_dict"]], "to_file() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.to_file"]], "to_list() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.to_list"]], "to_multi_index() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.to_multi_index"]], "to_numpy() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.to_numpy"]], "to_single_index() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.to_single_index"]], "to_spectra() (fastdfe.spectrum.spectra method)": [[7, "fastdfe.spectrum.Spectra.to_spectra"]], "types (fastdfe.spectrum.spectra property)": [[7, "fastdfe.spectrum.Spectra.types"]], "spectrum (class in fastdfe.spectrum)": [[8, "fastdfe.spectrum.Spectrum"]], "__init__() (fastdfe.spectrum.spectrum method)": [[8, "fastdfe.spectrum.Spectrum.__init__"]], "copy() (fastdfe.spectrum.spectrum method)": [[8, "fastdfe.spectrum.Spectrum.copy"]], "fold() (fastdfe.spectrum.spectrum method)": [[8, "fastdfe.spectrum.Spectrum.fold"]], "from_list() (fastdfe.spectrum.spectrum static method)": [[8, "fastdfe.spectrum.Spectrum.from_list"]], "from_polydfe() (fastdfe.spectrum.spectrum static method)": [[8, "fastdfe.spectrum.Spectrum.from_polydfe"]], "from_polymorphic() (fastdfe.spectrum.spectrum static method)": [[8, "fastdfe.spectrum.Spectrum.from_polymorphic"]], "has_div (fastdfe.spectrum.spectrum property)": [[8, "fastdfe.spectrum.Spectrum.has_div"]], "is_folded() (fastdfe.spectrum.spectrum method)": [[8, "fastdfe.spectrum.Spectrum.is_folded"]], "n (fastdfe.spectrum.spectrum property)": [[8, "fastdfe.spectrum.Spectrum.n"]], "n_div (fastdfe.spectrum.spectrum property)": [[8, "fastdfe.spectrum.Spectrum.n_div"]], "n_monomorphic (fastdfe.spectrum.spectrum property)": [[8, "fastdfe.spectrum.Spectrum.n_monomorphic"]], "n_polymorphic (fastdfe.spectrum.spectrum property)": [[8, "fastdfe.spectrum.Spectrum.n_polymorphic"]], "n_sites (fastdfe.spectrum.spectrum property)": [[8, "fastdfe.spectrum.Spectrum.n_sites"]], "normalize() (fastdfe.spectrum.spectrum method)": [[8, "fastdfe.spectrum.Spectrum.normalize"]], "plot() (fastdfe.spectrum.spectrum method)": [[8, "fastdfe.spectrum.Spectrum.plot"]], "polymorphic (fastdfe.spectrum.spectrum property)": [[8, "fastdfe.spectrum.Spectrum.polymorphic"]], "standard_kingman() (fastdfe.spectrum.spectrum static method)": [[8, "fastdfe.spectrum.Spectrum.standard_kingman"]], "theta (fastdfe.spectrum.spectrum property)": [[8, "fastdfe.spectrum.Spectrum.theta"]], "to_list() (fastdfe.spectrum.spectrum method)": [[8, "fastdfe.spectrum.Spectrum.to_list"]], "to_numpy() (fastdfe.spectrum.spectrum method)": [[8, "fastdfe.spectrum.Spectrum.to_numpy"]]}})