{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Quickstart in R\n",
    "## Basic inference\n",
    "The easiest way to get started is by using the {class}`~fastdfe.base_inference.BaseInference` class which infers the DFE from a single pairs of SFSs, one neutral and one selected. In this example we create {class}`~fastdfe.spectrum.Spectrum` objects holding the SFS counts and pass it to {class}`~fastdfe.base_inference.BaseInference`. Note that we are required to specify the number of monomorphic sites (the last and first entries of the specified counts)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false,
    "jupyter": {
     "outputs_hidden": false
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning message in download.file(url, destfile, method, mode = \"wb\", ...):\n",
      "“downloaded length 65536 != reported length 3024838”\n",
      "Warning message in download.file(url, destfile, method, mode = \"wb\", ...):\n",
      "“URL 'https://cran.r-project.org/src/contrib/sass_0.4.6.tar.gz': Timeout of 60 seconds was reached”\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Error in download.file(url, destfile, method, mode = \"wb\", ...) : \n",
      "  download from 'https://cran.r-project.org/src/contrib/sass_0.4.6.tar.gz' failed\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning message in download.packages(pkgs, destdir = tmpd, available = available, :\n",
      "“download of package ‘sass’ failed”\n",
      "Warning message in download.file(url, destfile, method, mode = \"wb\", ...):\n",
      "“downloaded length 1081344 != reported length 2184560”\n",
      "Warning message in download.file(url, destfile, method, mode = \"wb\", ...):\n",
      "“URL 'https://cran.r-project.org/src/contrib/rmarkdown_2.22.tar.gz': Timeout of 60 seconds was reached”\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Error in download.file(url, destfile, method, mode = \"wb\", ...) : \n",
      "  download from 'https://cran.r-project.org/src/contrib/rmarkdown_2.22.tar.gz' failed\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning message in download.packages(pkgs, destdir = tmpd, available = available, :\n",
      "“download of package ‘rmarkdown’ failed”\n",
      "Warning message in download.file(url, destfile, method, mode = \"wb\", ...):\n",
      "“downloaded length 458752 != reported length 859025”\n",
      "Warning message in download.file(url, destfile, method, mode = \"wb\", ...):\n",
      "“URL 'https://cran.r-project.org/src/contrib/rpart_4.1.19.tar.gz': Timeout of 60 seconds was reached”\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Error in download.file(url, destfile, method, mode = \"wb\", ...) : \n",
      "  download from 'https://cran.r-project.org/src/contrib/rpart_4.1.19.tar.gz' failed\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning message in download.packages(pkgs, destdir = tmpd, available = available, :\n",
      "“download of package ‘rpart’ failed”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘sys’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘backports’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘proxy’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘lazyeval’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘curl’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘mime’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘zoo’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘cachem’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘KernSmooth’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘wk’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘fs’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘farver’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘magrittr’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘yaml’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘cluster’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘nnet’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘foreign’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘data.table’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘colorspace’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘xfun’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘sp’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘mvtnorm’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘survival’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘SparseM’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘systemfonts’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘units’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘brio’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘ps’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘diffobj’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘isoband’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘MASS’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘hexbin’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘maps’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘nlme’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘xml2’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘askpass’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘checkmate’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘memoise’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘class’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘rex’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘highr’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘TH.data’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘sandwich’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘purrr’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘stringr’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘textshaping’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘tinytex’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘s2’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘pkgload’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘processx’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘mgcv’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘tibble’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘mapproj’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘maptools’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘munsell’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘quantreg’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘rgeos’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘svglite’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘openssl’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘e1071’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘rematch2’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘bslib’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘callr’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘scales’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘dplyr’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘knitr’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘multcomp’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘ragg’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘httr’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘htmlwidgets’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘classInt’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘waldo’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘ggplot2’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘htmlTable’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘viridis’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘covr’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘profvis’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘sf’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘testthat’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘Hmisc’ had non-zero exit status”\n",
      "Warning message in install.packages(\"ggplot2\", dependencies = TRUE):\n",
      "“installation of package ‘vdiffr’ had non-zero exit status”\n",
      "Updating HTML index of packages in '.Library'\n",
      "\n",
      "Making 'packages.html' ...\n",
      " done\n",
      "\n"
     ]
    },
    {
     "ename": "ERROR",
     "evalue": "Error in library(ggplot2): there is no package called ‘ggplot2’\n",
     "output_type": "error",
     "traceback": [
      "Error in library(ggplot2): there is no package called ‘ggplot2’\nTraceback:\n",
      "1. library(ggplot2)"
     ]
    }
   ],
   "source": [
    "# set up fastDFE through reticulate\n",
    "#install.packages(\"reticulate\")\n",
    "library(reticulate)\n",
    "#py_install(\"fastdfe\")\n",
    "install.packages(\"ggplot2\", dependencies=TRUE)\n",
    "library(ggplot2)\n",
    "\n",
    "fastdfe <- import(\"fastdfe\")\n",
    "print(fastdfe$`__version__`)\n",
    "\n",
    "fastdfe$visualization$Visualization$plot_discretized <- function(values, errors, labels, intervals,\n",
    "                                                                 file = NULL, show = TRUE,\n",
    "                                                                 title = 'discretized DFE', interval_labels = NULL,\n",
    "                                                                 legend_text_size = 8, ax = NULL, kwargs_legend = NULL) {\n",
    "    # create a vector of x values\n",
    "    x <- seq(0, 10, by = 0.1)\n",
    "\n",
    "    # create a vector of y values as a function of x\n",
    "    y <- sin(x)\n",
    "\n",
    "    # create a line plot\n",
    "    plot(x, y, type = \"l\")\n",
    "    return()\n",
    "    # Create dataframe\n",
    "    df <- data.frame(values = unlist(values), errors = unlist(errors), labels = unlist(labels))\n",
    "\n",
    "    # Create interval factor variable\n",
    "    df$interval <- cut(df$values, breaks = intervals, labels = interval_labels)\n",
    "\n",
    "    # Create the plot\n",
    "    p <- ggplot(df, aes(x = interval, y = values, fill = labels)) +\n",
    "    geom_bar(stat = 'identity', position = 'dodge') +\n",
    "    geom_errorbar(aes(ymin = values - errors, ymax = values + errors),\n",
    "                  width = 0.2, position = position_dodge(0.9)) +\n",
    "    labs(title = title, x = 'S', y = 'fraction') +\n",
    "    theme(legend.position='bottom',\n",
    "          legend.text = element_text(size = legend_text_size),\n",
    "          legend.title=element_blank())\n",
    "\n",
    "    # Display the plot if show is TRUE\n",
    "    if(show) {\n",
    "    print(p)\n",
    "    }\n",
    "\n",
    "    # Save the plot to a file if a filename is provided\n",
    "    if(!is.null(file)) {\n",
    "    ggsave(filename = file, plot = p, width = 7, height = 7, units = \"in\")\n",
    "    }\n",
    "\n",
    "    return(p)\n",
    "}\n",
    "\n",
    "# import classes\n",
    "BaseInference <- fastdfe$BaseInference\n",
    "Spectrum <- fastdfe$Spectrum\n",
    "\n",
    "# configure inference\n",
    "inf <- BaseInference(\n",
    "  sfs_neut=Spectrum(c(177130, 997, 441, 228, 156, 117, 114, 83, 105, 109, 652)),\n",
    "  sfs_sel=Spectrum(c(797939, 1329, 499, 265, 162, 104, 117, 90, 94, 119, 794))\n",
    ")\n",
    "\n",
    "# Run inference\n",
    "inf$run()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "fastDFE uses maximum likelihood estimation (MLE) to find the DFE. By default, 10 local optimization runs are carried out to make sure a reasonably good global optimum has been bound. The DFE furthermore needs to parametrized where {class}`~fastdfe.parametrization.GammaExpParametrization` is used by default."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can now plot the inferred DFE in discretized form (cf. {func}`~fastdfe.base_inference.BaseInference.plot_discretized`)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {
    "collapsed": false,
    "jupyter": {
     "outputs_hidden": false
    },
    "tags": [],
    "ExecuteTime": {
     "end_time": "2023-06-21T13:27:06.056865Z",
     "start_time": "2023-06-21T13:27:05.988726Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAYAAAD958/bAAAEDmlDQ1BrQ0dDb2xvclNwYWNl\nR2VuZXJpY1JHQgAAOI2NVV1oHFUUPpu5syskzoPUpqaSDv41lLRsUtGE2uj+ZbNt3CyTbLRB\nkMns3Z1pJjPj/KRpKT4UQRDBqOCT4P9bwSchaqvtiy2itFCiBIMo+ND6R6HSFwnruTOzu5O4\na73L3PnmnO9+595z7t4LkLgsW5beJQIsGq4t5dPis8fmxMQ6dMF90A190C0rjpUqlSYBG+PC\nv9rt7yDG3tf2t/f/Z+uuUEcBiN2F2Kw4yiLiZQD+FcWyXYAEQfvICddi+AnEO2ycIOISw7UA\nVxieD/Cyz5mRMohfRSwoqoz+xNuIB+cj9loEB3Pw2448NaitKSLLRck2q5pOI9O9g/t/tkXd\na8Tbg0+PszB9FN8DuPaXKnKW4YcQn1Xk3HSIry5ps8UQ/2W5aQnxIwBdu7yFcgrxPsRjVXu8\nHOh0qao30cArp9SZZxDfg3h1wTzKxu5E/LUxX5wKdX5SnAzmDx4A4OIqLbB69yMesE1pKojL\njVdoNsfyiPi45hZmAn3uLWdpOtfQOaVmikEs7ovj8hFWpz7EV6mel0L9Xy23FMYlPYZenAx0\nyDB1/PX6dledmQjikjkXCxqMJS9WtfFCyH9XtSekEF+2dH+P4tzITduTygGfv58a5VCTH5Pt\nXD7EFZiNyUDBhHnsFTBgE0SQIA9pfFtgo6cKGuhooeilaKH41eDs38Ip+f4At1Rq/sjr6NEw\nQqb/I/DQqsLvaFUjvAx+eWirddAJZnAj1DFJL0mSg/gcIpPkMBkhoyCSJ8lTZIxk0TpKDjXH\nliJzZPO50dR5ASNSnzeLvIvod0HG/mdkmOC0z8VKnzcQ2M/Yz2vKldduXjp9bleLu0ZWn7vW\nc+l0JGcaai10yNrUnXLP/8Jf59ewX+c3Wgz+B34Df+vbVrc16zTMVgp9um9bxEfzPU5kPqUt\nVWxhs6OiWTVW+gIfywB9uXi7CGcGW/zk98k/kmvJ95IfJn/j3uQ+4c5zn3Kfcd+AyF3gLnJf\ncl9xH3OfR2rUee80a+6vo7EK5mmXUdyfQlrYLTwoZIU9wsPCZEtP6BWGhAlhL3p2N6sTjRdd\nuwbHsG9kq32sgBepc+xurLPW4T9URpYGJ3ym4+8zA05u44QjST8ZIoVtu3qE7fWmdn5LPdqv\ngcZz8Ww8BWJ8X3w0PhQ/wnCDGd+LvlHs8dRy6bLLDuKMaZ20tZrqisPJ5ONiCq8yKhYM5cCg\nKOu66Lsc0aYOtZdo5QCwezI4wm9J/v0X23mlZXOfBjj8Jzv3WrY5D+CsA9D7aMs2gGfjve8A\nrD6mePZSeCfEYt8CONWDw8FXTxrPqx/r9Vt4biXeANh8vV7/+/16ffMD1N8AuKD/A/8leAvF\nY9bLAAAAOGVYSWZNTQAqAAAACAABh2kABAAAAAEAAAAaAAAAAAACoAIABAAAAAEAAANIoAMA\nBAAAAAEAAANIAAAAAN/ryxkAAEAASURBVHgB7N0HvB1nfed/C1mWe6/Ycm+427IlF2xfig2E\nDksIzkISQk3BIfnvn2Q3gQ3LbsiG3eTP5r/AbhbCAgayFFNNt2zjKvdecMG9W3KXZFv7/co6\n1tXVPefOzJl55imf5/X62feeMzPP83s/52rOM/PMzHrrURBAAAEEEEAAAQQQQAABBBBAAAEE\nEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAAB\nBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAA\nAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBA\nAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQ\nQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEE\nEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAAB\nBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAA\nAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBA\nAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQ\nQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEE\nEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAAB\nBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAA\nAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBA\nAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQ\nQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEE\nEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAAB\nBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAA\nAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBA\nAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQ\nQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEE\nEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAAB\nBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAA\nAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBA\nAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQ\nQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEE\nEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAAB\nBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAA\n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\nF81auwL12bJ6h7gmyO9O6gjSWqkP7mrjETBBGs9YXyal1r//9W/A0cmvJXXBjm8l30wOTrR2\nBW6f0upv//eSJyd3Sh6WfCWp34m7J1qbAruaIHld2OaYq2oGgTq97rjkoqT+Uay8PblaorUr\n8BspbWW8d3W7T7sEKltDwARpDZSGF10xtb06qS8Nr38Hzk/+O6nTLLX2BWqSVFey2/FvwBdy\n/1fbL33UFe5qglQwXheO+tdD8asF6g/lzRMTo9Uy7hMgQKBtgfrMyaFJ/R3QxidQZxTU3//6\n/LFGYEXA68IVCbcECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgsJPA\nHjvdc4cAAQIECLQhcMOUcY/kasn/rSrp9rl/p+T85IxVj7lLgAABAgQIECBAgACB5gT2SUVf\nSy5IbrlDdTfOz+ckX06unGgECBAgQIAAAQIECBAYhcCdU+VFycnJpZPLJCcldeTosEQjQIAA\nAQIECBAgQIDAqASem2ovTv48ef7k56fkViNAgAABAgQIECBAgMDoBOqo0aeTc5M6mvTO5FKJ\nRoAAAQIECBAgQIAAgVEK3DFV11GkyiGjFFA0AQIECBAgQIAAAQIEJgJvyO3KBKl+1ggQIECA\nAAECBAgQIDBKgYel6pocvTh5yeTnWqYRIECAAAECBAgQIEBgVALXS7U/Sr6a7J1cKTktqWX1\nmEaAAAECBAgQIECAAIFRCOyZKj+U1NGjI3eouL48tpbVY/UcjQABAgQIECBAgAABAs0LHJUK\nV06tW13sKyaP1XM0AgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBA\ngAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBA\ngAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBA\ngAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBA\ngAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBA\ngAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBA\ngAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBA\ngAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBA\ngAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgACBcQj8P4zaPSTN7JMsAAAA\nAElFTkSuQmCC"
     },
     "metadata": {
      "image/png": {
       "width": 420,
       "height": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "inf$plot_discretized();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also plot a comparison of the (selected) modelled and observed SFS (cf. {func}`~fastdfe.base_inference.BaseInference.plot_sfs_comparison`)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false,
    "jupyter": {
     "outputs_hidden": false
    }
   },
   "outputs": [],
   "source": [
    "inf$plot_sfs_comparison()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Bootstrapping\n",
    "\n",
    "We can perform parametric bootstrapping (cf. {func}`~fastdfe.base_inference.BaseInference.bootstrap`)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false,
    "jupyter": {
     "outputs_hidden": false
    }
   },
   "outputs": [],
   "source": [
    "inf$bootstrap()\n",
    "\n",
    "# redo the plotting\n",
    "inf$plot_discretized()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Serialization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false,
    "jupyter": {
     "outputs_hidden": false
    }
   },
   "outputs": [],
   "source": [
    "# save the inference object to the file\n",
    "# we can unserialized the inference by using BaseInference.from_file\n",
    "inf$to_file(\"out/serialized.json\")\n",
    "\n",
    "# alternatively we can also save a summary to file\n",
    "inf$get_summary()$to_file(\"out/summary.json\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "4.2.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
