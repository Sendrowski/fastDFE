{
 "cells": [
  {
   "cell_type": "markdown",
   "source": [
    "# VCF Parsing\n",
    "## Introduction\n",
    "fastDFE provides parser utilities that enable convenient parsing of frequency spectra from VCF files. By default, {class}`~fastdfe.parser.Parser` looks at the ``AA`` tag in the VCF file's info field to retrieve the correct polarization. Sites for which this tag is not well-defined are by default included (see {attr}`~fastdfe.parser.Parser.skip_not_polarized`). Note that non-polarized frequency spectra provide little information on the distribution of beneficial mutations, however.\n",
    "\n",
    "We might also want to stratify the SFS by some site properties, such as synonymy. This is done by passing stratifications to the parser. In this example, we will stratify the SFS by synonymous and non-synonymous mutations using a VCF file for ``Betula spp.``"
   ],
   "metadata": {
    "collapsed": false
   }
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Counting sites: 2439037it [00:42, 56914.18it/s]\n",
      "\u001B[32mINFO:fastdfe.Parser: Using stratification: [neutral, selected].\u001B[0m\n",
      "\u001B[32mINFO:fastdfe.Parser: Starting to parse.\u001B[0m\n",
      "Processing sites: 100%|██████████| 2439037/2439037 [05:37<00:00, 7220.37it/s]\n",
      "\u001B[32mINFO:fastdfe.PolyAllelicFiltration: Filtered out 0 sites.\u001B[0m\n",
      "\u001B[32mINFO:fastdfe.DegeneracyStratification: Number of sites with valid type: 981644 / 2439037\u001B[0m\n",
      "\u001B[32mINFO:fastdfe.Parser: Included 981644 out of 2439037 sites in total.\u001B[0m\n"
     ]
    }
   ],
   "source": [
    "import fastdfe as fd\n",
    "\n",
    "# instantiate parser\n",
    "p = fd.Parser(\n",
    "    n=10,\n",
    "    vcf=\"../../../resources/genome/betula/all.vcf.gz\",\n",
    "    stratifications=[fd.DegeneracyStratification()]\n",
    ")\n",
    "\n",
    "# parse SFS\n",
    "spectra: fd.Spectra = p.parse()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-08-20T15:15:11.630107Z",
     "start_time": "2023-08-20T15:08:49.661282Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "outputs": [
    {
     "data": {
      "text/plain": "<Figure size 512x384 with 0 Axes>"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": "<Figure size 512x384 with 1 Axes>",
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# visualize SFS\n",
    "spectra.plot();"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-08-20T15:15:11.767100Z",
     "start_time": "2023-08-20T15:15:11.633677Z"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "fastDFE relies here on VCF info tags to determine the degeneracy of a site but this behavior can be customized (cf. {class}`~fastdfe.parser.DegeneracyStratification`)."
   ],
   "metadata": {
    "collapsed": false
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "## Stratifications\n",
    "We can use also several stratifications in tandem by specifying a list of stratifications. In this example, we will stratify the SFS by synonymy as well as base transitions type. The resulting spectra can be fed directly into fastDFE's inference routines. See {mod}`~fastdfe.parser` module for a complete list of available stratifications."
   ],
   "metadata": {
    "collapsed": false
   }
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Counting sites: 2439037it [00:42, 56934.93it/s]\n",
      "\u001B[32mINFO:fastdfe.Parser: Using stratification: [neutral, selected].[A, C, G, T].\u001B[0m\n",
      "\u001B[32mINFO:fastdfe.Parser: Starting to parse.\u001B[0m\n",
      "Processing sites: 100%|██████████| 2439037/2439037 [09:16<00:00, 4381.75it/s] \n",
      "\u001B[32mINFO:fastdfe.PolyAllelicFiltration: Filtered out 0 sites.\u001B[0m\n",
      "\u001B[32mINFO:fastdfe.DegeneracyStratification: Number of sites with valid type: 980934 / 2438327\u001B[0m\n",
      "\u001B[32mINFO:fastdfe.AncestralBaseStratification: Number of sites with valid type: 980934 / 981644\u001B[0m\n",
      "\u001B[32mINFO:fastdfe.Parser: Included 980934 out of 2439037 sites in total.\u001B[0m\n"
     ]
    }
   ],
   "source": [
    "# instantiate parser\n",
    "p = fd.Parser(\n",
    "    n=10,\n",
    "    vcf=\"../../../resources/genome/betula/all.vcf.gz\",\n",
    "    stratifications=[fd.DegeneracyStratification(), fd.AncestralBaseStratification()]\n",
    ")\n",
    "\n",
    "# parse SFS\n",
    "spectra: fd.Spectra = p.parse()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-08-20T15:25:11.254182Z",
     "start_time": "2023-08-20T15:15:11.772332Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "outputs": [
    {
     "data": {
      "text/plain": "<Figure size 512x384 with 0 Axes>"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": "<Figure size 512x384 with 1 Axes>",
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# visualize SFS\n",
    "spectra.plot();"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-08-20T15:25:11.549989Z",
     "start_time": "2023-08-20T15:25:11.275693Z"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "Note that fastDFE requires the ancestral state of sites to be determined. The {class}`~fastdfe.parser.Parser` achieves this by examining the `AA` field, although this behavior can be customized.\n",
    "\n",
    "## Annotations\n",
    "fastDFE provides numerous annotations accessible directly during the parsing process. To annotate a VCF file directly, consider using the {class}`~fastdfe.annotation.Annotator` class.\n",
    "\n",
    "### Degeneracy and Synonymy Annotations\n",
    "The supported annotations are {class}`~fastdfe.annotation.DegeneracyAnnotation` and {class}`~fastdfe.annotation.SynonymyAnnotation`, which can be used together with {class}`~fastdfe.parser.DegeneracyStratification` and {class}`~fastdfe.parser.SynonymyStratification`, respectively. These annotations are useful for stratifying the SFS by synonymous and non-synonymous mutations. Note that the {class}`~fastdfe.annotation.DegeneracyAnnotation` also infers the number of mutational target sites, which is essential for accurate DFE inference. However, not all VCF files contain monomorphic sites. Using {class}`~fastdfe.annotation.SynonymyAnnotation` with {class}`~fastdfe.parser.Parser`, the number of mutational target sites can be inferred from the total length of the coding sequences specified in the accompanying GFF file. Alternatively, the number of mutational target sites can be specified manually using the ``n_target_sites`` argument of {class}`~fastdfe.parser.Parser`. {class}`~fastdfe.parser.SynonymyStratification` was tested against [VEP](https://www.ensembl.org/info/docs/tools/vep/index.html) and [SnpEff](https://pcingola.github.io/SnpEff/) and provides the same annotations in almost all cases.\n",
    "\n",
    "### Ancestral Allele Annotation\n",
    "Currently, we only support maximum parsimony ancestral allele inference (see {class}`~fastdfe.annotation.MaximumParsimonyAncestralAnnotation`), which is straightforward but susceptible to errors. Some errors can be avoided by incorporating {class}`~fastdfe.filtration.DeviantOutgroupFiltration`. Alternatively, if inference on folded spectra is not an option, we provide a snakemake [wrapper for EST-SFS](https://github.com/Sendrowski/fastDFE/blob/master/snakemake/rules/est-sfs.smk) that employs a more sophisticated method for ancestral allele inference. You can also see [here](https://github.com/Sendrowski/fastDFE/blob/master/snakemake/rules/est-sfs_example.smk) for an example of how to use this wrapper.\n",
    "\n",
    "## Filtrations\n",
    "fastDFE also offers a number of filtrations which can be accessed immediately while parsing. Alternatively, to filter a VCF file directly, use the {class}`~fastdfe.filtration.Filterer` class. Some useful filtrations include {class}`~fastdfe.filtration.DeviantOutgroupFiltration`, {class}`~fastdfe.filtration.CodingSequenceFiltration`, and {class}`~fastdfe.filtration.BiasedGCConversionFiltration`. For a complete list of available filtrations, refer to the API reference.\n",
    "\n",
    "Note that all components can easily be customized by creating another implementation of the corresponding base class."
   ],
   "metadata": {
    "collapsed": false
   }
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
