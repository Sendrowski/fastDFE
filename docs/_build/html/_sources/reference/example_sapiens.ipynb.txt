{
 "cells": [
  {
   "cell_type": "markdown",
   "source": [
    "# Inference on H. sapiens"
   ],
   "metadata": {
    "collapsed": false
   }
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001B[32mINFO:fastdfe: Using cached file at /var/folders/w6/18ktl5312413jw46btlxrh59fzxvt4/T/b9755b5299a6.ALL.chr21.shapeit2_integrated_v1a.GRCh38.20181129.phased.vcf.gz\u001B[0m\n",
      "\u001B[32mINFO:fastdfe: Using cached file at /var/folders/w6/18ktl5312413jw46btlxrh59fzxvt4/T/b9755b5299a6.ALL.chr21.shapeit2_integrated_v1a.GRCh38.20181129.phased.vcf.gz\u001B[0m\n",
      "Counting sites: 976599it [00:18, 54065.13it/s]\n",
      "\u001B[32mINFO:fastdfe.Parser: Using stratification: [neutral, selected].\u001B[0m\n",
      "\u001B[32mINFO:fastdfe: Using cached file at /var/folders/w6/18ktl5312413jw46btlxrh59fzxvt4/T/641b1ad7806e.Homo_sapiens.GRCh38.109.chromosome.21.gff3.gz\u001B[0m\n",
      "\u001B[32mINFO:fastdfe.DegeneracyAnnotation: Loading GFF file.\u001B[0m\n",
      "\u001B[32mINFO:fastdfe.DegeneracyAnnotation: Loading FASTA file\u001B[0m\n",
      "\u001B[32mINFO:fastdfe: Using cached file at /var/folders/w6/18ktl5312413jw46btlxrh59fzxvt4/T/f36fd1bf6304.Homo_sapiens.GRCh38.dna.chromosome.21.fa.gz\u001B[0m\n",
      "\u001B[32mINFO:fastdfe: Using cached file at /var/folders/w6/18ktl5312413jw46btlxrh59fzxvt4/T/641b1ad7806e.Homo_sapiens.GRCh38.109.chromosome.21.gff3.gz\u001B[0m\n",
      "\u001B[32mINFO:fastdfe.CodingSequenceFiltration: Loading GFF file.\u001B[0m\n",
      "\u001B[32mINFO:fastdfe.Parser: Starting to parse.\u001B[0m\n",
      "Processing sites:   2%|▏         | 16046/976599 [00:01<01:12, 13333.56it/s]/Users/au732936/PycharmProjects/fastDFE/fastdfe/bio_handlers.py:490: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  cds.loc[:, 'length'] = cds['end'] - cds['start'] + 1\n",
      "Processing sites: 100%|██████████| 976599/976599 [03:23<00:00, 4810.71it/s] \n",
      "\u001B[32mINFO:fastdfe.CodingSequenceFiltration: Filtered out 965325 sites.\u001B[0m\n",
      "\u001B[32mINFO:fastdfe.DegeneracyStratification: Number of sites with valid type: 8794 / 11274\u001B[0m\n",
      "\u001B[32mINFO:fastdfe.DegeneracyAnnotation: Annotated 11274 sites.\u001B[0m\n",
      "\u001B[32mINFO:fastdfe.MaximumParsimonyAnnotation: Annotated 11274 sites.\u001B[0m\n",
      "\u001B[32mINFO:fastdfe.Parser: Included 8794 out of 976599 sites in total.\u001B[0m\n"
     ]
    }
   ],
   "source": [
    "import fastdfe as fd\n",
    "\n",
    "parser = fd.Parser(\n",
    "    vcf=\"http://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1000_genomes_project/release/\"\n",
    "        \"20181203_biallelic_SNV/ALL.chr21.shapeit2_integrated_v1a.GRCh38.20181129.phased.vcf.gz\",\n",
    "    n=10,\n",
    "    annotations=[\n",
    "        fd.DegeneracyAnnotation(\n",
    "            fasta_file=\"http://ftp.ensembl.org/pub/release-109/fasta/homo_sapiens/\"\n",
    "                       \"dna/Homo_sapiens.GRCh38.dna.chromosome.21.fa.gz\",\n",
    "            gff_file=\"http://ftp.ensembl.org/pub/release-109/gff3/homo_sapiens/\"\n",
    "                     \"Homo_sapiens.GRCh38.109.chromosome.21.gff3.gz\",\n",
    "            aliases=dict(chr21=['21'])\n",
    "        ),\n",
    "        fd.MaximumParsimonyAnnotation()\n",
    "    ],\n",
    "    filtrations=[\n",
    "        fd.CodingSequenceFiltration(\n",
    "            gff_file=\"http://ftp.ensembl.org/pub/release-109/gff3/homo_sapiens/\"\n",
    "                     \"Homo_sapiens.GRCh38.109.chromosome.21.gff3.gz\",\n",
    "            aliases=dict(chr21=['21'])\n",
    "        )\n",
    "    ],\n",
    "    stratifications=[fd.DegeneracyStratification()],\n",
    ")\n",
    "\n",
    "spectra: fd.Spectra = parser.parse()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-06-30T08:08:09.738291Z",
     "start_time": "2023-06-30T08:04:19.241902Z"
    }
   }
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
